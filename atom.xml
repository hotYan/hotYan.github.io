<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HotYan&#39;s Blog</title>
  
  <subtitle>程序媛</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hotkang.cn/"/>
  <updated>2018-09-02T06:20:21.307Z</updated>
  <id>https://hotkang.cn/</id>
  
  <author>
    <name>hotYan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS数据类型</title>
    <link href="https://hotkang.cn/2018/JS%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://hotkang.cn/2018/JS数据类型/</id>
    <published>2018-08-28T03:06:55.000Z</published>
    <updated>2018-09-02T06:20:21.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概览-完结"><a href="#概览-完结" class="headerlink" title="概览[完结]"></a>概览<span style="font-size:.5em">[完结]</span></h2><h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><ul><li>Undefined</li><li>Null</li><li>Boolean</li><li>Number</li><li>String</li></ul><h4 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h4><ul><li>Object类型</li><li>Array类型</li><li>Date类型</li><li>RegExp类型</li><li>Function类型</li><li>基本包装类型</li><li>单体内置对象</li></ul><a id="more"></a><p><br><br><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>JavaScript高级程序设计</p></blockquote><p><br><br><br></p><h2 id="基本数据类型-1"><a href="#基本数据类型-1" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><hr><h3 id="一、typeof操作符"><a href="#一、typeof操作符" class="headerlink" title="一、typeof操作符"></a>一、typeof操作符</h3><p>检测给定变量的数据类型，将返回下列某个字符串：</p><ul><li><code>&quot;undefined&quot;</code> ____值未定义</li><li><code>&quot;boolean&quot;</code> ____布尔值</li><li><code>&quot;string&quot;</code> ____字符串</li><li><code>&quot;number&quot;</code> ____数值</li><li><code>&quot;object&quot;</code> ____对象|null</li><li><code>&quot;function&quot;</code> ____函数</li></ul><p>typeof操作符可以是变量，也可以是数组字面量。typeof不是一个函数，圆括号不是必需的。例：</p><pre><code>var message = &quot;some string&quot;;console.log(typeof(message));   //stringconsole.log(typeof message);    //stringconsole.log(typeof 95);         //number</code></pre><p><br></p><h3 id="二、undefined类型"><a href="#二、undefined类型" class="headerlink" title="二、undefined类型"></a>二、undefined类型</h3><p>变量只声明未定义时，值为undefined。</p><pre><code>var message;//  var age;//  console.log(age);            //报错console.log(message);           // undefinedconsole.log(typeof message);    //undefinedconsole.log(typeof age);        //undefined</code></pre><p><br></p><h3 id="三、null类型"><a href="#三、null类型" class="headerlink" title="三、null类型"></a>三、null类型</h3><p>逻辑角度，null值表示一个空对象指针，所以typeof检测null值时返回object。保存对象的变量还没有真正的保存对象时，就应该明确的让该变量保存null值。</p><p><br></p><h3 id="四、Boolean类型"><a href="#四、Boolean类型" class="headerlink" title="四、Boolean类型"></a>四、Boolean类型</h3><p>两个字面量：<code>true</code>、<code>false</code>；与数字值不是一回事，true不一定等于1，false不一定等于0；且区分大小写。</p><blockquote><p>Boolean()：将一个值转换为对应的Boolean值</p></blockquote><p>转换规则对理解流控语句【if语句、while语句等】自动执行相应的Boolean转换非常重要。</p><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:left">转换为true值</th><th style="text-align:left">转换为false值</th></tr></thead><tbody><tr><td style="text-align:center">Boolean</td><td style="text-align:left">true</td><td style="text-align:left">false</td></tr><tr><td style="text-align:center">String</td><td style="text-align:left">任何非空字符串</td><td style="text-align:left">“”(空字符串)</td></tr><tr><td style="text-align:center">Number</td><td style="text-align:left">任何非0数字值(包括无穷大)</td><td style="text-align:left">0、NaN</td></tr><tr><td style="text-align:center">Object</td><td style="text-align:left">任何对象</td><td style="text-align:left">null</td></tr><tr><td style="text-align:center">undefined</td><td style="text-align:left">N/A</td><td style="text-align:left">undefined</td></tr></tbody></table><p><br></p><h3 id="五、Number类型"><a href="#五、Number类型" class="headerlink" title="五、Number类型"></a>五、Number类型</h3><blockquote><p>数值范围[ -Infinity, Infinity ]</p></blockquote><p>想要确定一个数值是不是有穷，即是不是位于最小和最大之间，可以使用<code>isFinite()</code>函数:</p><pre><code>var result = Number.MAX_VALUE + Number.MIN_VALUE;console.log(isFinite(result));          //true</code></pre><p><br></p><blockquote><p>NaN:非数值（Not a Number）</p></blockquote><p>用于表示一个本来要返回数值的操作数未返回数值的情况（这样不会抛出错误）。</p><p>两个特点：</p><ol><li><p>任何涉及NaN的操作（NaN/10、10/NaN）都会返回NaN；在其他编程语言，任何数值除以非数值都会导致错误。</p></li><li><p>NaN与任何值都不相等，包括NaN本身。</p></li></ol><p><code>isNaN()</code>:接收一个任何类型的参数，判断参数是否“不是数值”；会尝试将参数转换为数值，将不是数值的值直接转换为数值，任何不能被转换为数值的值都会返回true；</p><pre><code>console.log(isNaN(NaN));    //trueconsole.log(isNaN(10));     //false_10是数值console.log(isNaN(&apos;10&apos;));   //false_可以转换成数值10console.log(isNaN(&quot;blue&quot;)); //true_不能转换成数值console.log(isNaN(true));   //false_可以被转换成数值1</code></pre><p><br></p><blockquote><p>数值转换:非数值转换成数值</p></blockquote><p><code>Number()</code>用于任何数据类型；<code>parseInt()</code>和<code>parseFloat()</code>专门用于把字符串转换成数组；同样的输入会有不同的结果。</p><p>Number()转换规则：</p><ul><li><p>数值，简单传入返回;</p></li><li><p>Boolean值，true-&gt;1,false-&gt;0;</p></li><li><p>null-&gt;返回0;</p></li><li><p>undefined-&gt;返回NaN;</p></li><li><p>string，遵循规则如下：</p><ul><li><p>只包含数字-&gt;转换为十进制数值，’1’-&gt;1,’01’-&gt;1;</p></li><li><p>包含有效浮点格式-&gt;对应的浮点数值（前导0被忽略）；</p></li><li><p>包含有效十六进制格式-&gt;转换为相同大小的十进制整数值；</p></li><li><p>字符串为空-&gt;0;</p></li><li><p>包含上述格式之外的字符-&gt;NaN.</p></li></ul></li><li><p>对象，调用valueOf(),依照上面规则转换返回的值；若未NaN，则调用toString(),依照前面规则转换返回的字符串值。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(Number(&quot;hello world&quot;));     //NaN_不包含任何有意义的数值</span><br><span class="line">console.log(Number(&quot;&quot;));                //0 _空字符串</span><br><span class="line">console.log(Number(&quot;000011&quot;));          //11_忽略前导0</span><br><span class="line">console.log(Number(true));              //1</span><br></pre></td></tr></table></figure><p><br></p><p><code>parseInt()</code>:忽略字符串前面的空格，直至找到第一个非空字符。如果第一个字符不是数字或者负号，返回NaN；因此，parseInt()转换空字符串返回NaN（<code>Number()</code>对空字符串返回0）。提供第二个参数：转换时使用的基数。</p><pre><code>console.log(parseInt(&quot;10&quot;,2));  //2  按二进制解析console.log(parseInt(&quot;10&quot;,8));  //8  按八进制解析console.log(parseInt(&quot;10&quot;,10)); //10  按十进制解析console.log(parseInt(&quot;10&quot;,16)); //16  按十六进制解析</code></pre><p><br></p><p><code>parseFloat()</code>:忽略前导0，解析直至遇到一个无效的浮点数字字符为止；①只有第一个小数点有效，第二个小数点无效；②十六进制格式字符串始终会被转换成0；③若字符串包含一个可解析的整数（没有小数点，或者小数点后都是0)，返回整数：</p><pre><code>console.log(parseFloat(&quot;22.34.5&quot;));     //22.34 console.log(parseFloat(&quot;0908.5&quot;));      //908.5console.log(parseFloat(&quot;0xA&quot;));         //0   console.log(parseFloat(&quot;1234bule&quot;));    //1234  console.log(parseFloat(&quot;1234.000&quot;));    //1234  console.log(parseFloat(&quot;22.5&quot;));        //22.5  console.log(parseFloat(&quot;3.215e7&quot;));     //32150000 </code></pre><p><br></p><h3 id="六、String类型"><a href="#六、String类型" class="headerlink" title="六、String类型"></a>六、String类型</h3><p>string类型包含一些特殊的字符字面量-转义序列；用于表示非打印字符或其他用途；字符串一旦创建值是不可变得，要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含新值得字符串填充该变量；</p><blockquote><p>转换为字符串</p></blockquote><p>把一个数字转为一个字符串有两种方式。①<code>toString()</code>:返回相应值得字符串表现;数值、布尔值、对象、字符都有toString()方法并返回字符串的一个副本，但null和undefined没有toString()方法。</p><pre><code>console.log((11).toString());   //字符串&quot;11&quot;console.log((true).toString());   //字符串&quot;true&quot;</code></pre><p>多数情况下，不用传参，但在调用数值的toString()方法时，可以传递一个参数：输出数值的基数；</p><pre><code>console.log((11).toString());   //十进制字符串&quot;11&quot;console.log((11).toString(8));   //八进制字符串&quot;13&quot;console.log((11).toString(16));   //十六进制字符串&quot;b&quot;</code></pre><p>②<code>String()</code>:在不知道要转换的值是null或者undefined的情况下可以使用，能将任何类型的值转换为字符串；</p><ol><li>值有toString()方法，调用该方法并返回相应结果；</li><li>null，返回”null”;</li><li>undefined,返回”undefined”;</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(String(11));        //字符串&quot;11&quot;</span><br><span class="line">console.log(String(true));      //字符串&quot;true&quot;</span><br><span class="line">console.log(String(null));      //字符串&quot;null&quot;</span><br><span class="line">console.log(String(undefined)); //字符串&quot;undefined&quot;</span><br></pre></td></tr></table></figure><p><a href="http://www.w3school.com.cn/jsref/jsref_obj_string.asp" target="_blank" rel="noopener">more&gt;&gt;</a></p><p><br><br><br></p><h2 id="引用类型-1"><a href="#引用类型-1" class="headerlink" title="引用类型"></a>引用类型</h2><hr><h3 id="一、Object类型"><a href="#一、Object类型" class="headerlink" title="一、Object类型"></a>一、Object类型</h3><p><a href="https://hotkang.cn/2018/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%BA%8C/#Object%E7%B1%BB%E5%9E%8B">more&gt;&gt;</a></p><p><br></p><h3 id="二、-Array类型"><a href="#二、-Array类型" class="headerlink" title="二、 Array类型"></a>二、 Array类型</h3><h4 id="①创建"><a href="#①创建" class="headerlink" title="①创建"></a>①创建</h4><blockquote><p>Arrary构造函数</p></blockquote><pre><code>var hotyan = new Array(3);    //创建一个包含3项的数值var hotyan = new Array(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;);    //创建一个包含三个字符串的数值var hotyan = Array(3);      //可以省略new操作符var hotyan = Array(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;);    </code></pre><p><br></p><blockquote><p>数组字面量表示法</p></blockquote><pre><code>var hotyan = []; //创建一个空数组var hotyan = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]; //创建一个包含三个字符串的数组</code></pre><p><br></p><blockquote><p>length属性</p></blockquote><p>不是只读，可以从数组的末尾移除项或向数组添加新项；将length的属性设置为小于数组项数的值，被移除的项显示为undefined；反之，新增的项也是undefined；由于数组最后一项的索引始终是length-1，因此下一个新项的位置就是length：</p><pre><code>var colors = [&apos;red&apos;,&apos;blue&apos;,&apos;green&apos;];    //创建一个包含3个字符串的数组colors[colors.length] = &apos;black&apos;;    //在数组最后，即位置4添加新项</code></pre><p><br></p><h4 id="②检测"><a href="#②检测" class="headerlink" title="②检测"></a>②检测</h4><blockquote><p>instanceof</p></blockquote><blockquote><p>Array.isArray()</p></blockquote><p><br></p><h4 id="③转换方法"><a href="#③转换方法" class="headerlink" title="③转换方法"></a>③转换方法</h4><blockquote><p>valueOf():返回数组本身</p></blockquote><blockquote><p>toString():返回以”,“隔开，每个值字符串形式拼接而成的字符串</p></blockquote><blockquote><p>toLocalString()：</p></blockquote><blockquote><p>join()：使用不同的分隔符，返回包含所有数组项的字符串</p></blockquote><p><br></p><h4 id="④栈方法"><a href="#④栈方法" class="headerlink" title="④栈方法"></a>④栈方法</h4><blockquote><p>push()：接收任意数量参数，逐个添加到数组末尾，返回修改后 <strong>数组长度</strong>。</p><p>pop()：移除数组末尾最后一项，减少数组的length值，返回 <strong>移除的项</strong>。</p></blockquote><p><br></p><h4 id="⑤队列方法"><a href="#⑤队列方法" class="headerlink" title="⑤队列方法"></a>⑤队列方法</h4><blockquote><p>push()：向数组末端添加项，返回修改后 <strong>数组长度</strong></p></blockquote><p>例：在数组 arr 中，查找值与 item 相等的元素出现的所有位置</p><pre><code>function findAllOccurrences(arr, target) {    var Arr =[];    for(var i = 0;i&lt;arr.length;i++)        if(arr[i]==target)            Arr.push(i);    console.log(Arr);    return Arr;}findAllOccurrences(&apos;abcdefabc&apos;,&apos;a&apos;);   // [0, 6]</code></pre><p><br></p><blockquote><p>pop()：移除数组末端项并返回 <strong>被删除的项</strong></p></blockquote><blockquote><p>shift()：移除数组第一项并返回 <strong>该项</strong>，数组长度减1</p></blockquote><p><br></p><blockquote><p>unshift()：在数组前端添加任意个项并返回 <strong>新数组长度</strong></p></blockquote><p>例：在数组 arr 开头添加元素 item。不要直接修改数组 arr，结果返回新的数组：</p><pre><code>function prepend(arr, item) {    var Arr = arr.concat();     //复制一个新数组    Arr.unshift(item);      //开头添加一位后返回    return Arr;  }prepend([1,2,3,4],10);      //[10,1,2,3,4]</code></pre><p><br></p><h4 id="⑥重排序方法"><a href="#⑥重排序方法" class="headerlink" title="⑥重排序方法"></a>⑥重排序方法</h4><blockquote><p>reverse()：反转数组</p></blockquote><pre><code>var arr = [1,2,3,4,5];arr.reverse();alert(arr);     //[5，4，3，2，1]</code></pre><p><br></p><blockquote><p>sort()：默认升序，调用toString()方法，比较的是 <strong>字符串</strong></p></blockquote><pre><code>var arr = [0,1,5,10,15];arr.sort();alert(arr);     //0,1,10,15,5_不正确</code></pre><p><br></p><blockquote><p>compare()：比较函数</p></blockquote><pre><code>function compare(a,b){    if(a &lt; b){        return -1;    }       else if(a &gt; b){        return 1;    }         else{        return 0;    }      }var arr = [0,1,5,10,15];arr.sort(compare);alert(arr);     //0,1,5,10,15_正确</code></pre><p><br></p><blockquote><p>valueOf()：数组类型或返回数组类型的对象类型</p></blockquote><pre><code>function compare(a,b){    return b-a;}</code></pre><p><br></p><h4 id="⑦操作方法"><a href="#⑦操作方法" class="headerlink" title="⑦操作方法"></a>⑦操作方法</h4><blockquote><p>concat()：基于当前数组的所有项创建一个新数组</p></blockquote><p>先创建当前数组的一个副本，将接收到的参数添加到这个副本末尾。没有参数即复制当前数组内容并返回副本，传递的参数可以不是数组、一个或多个数组。</p><pre><code>var a = [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;];var b = a.concat(&quot;a&quot;,[&quot;b&quot;,&quot;c&quot;]);alert(a);       //A,B,C,Dalert(b);       //A,B,C,D,a,b,c</code></pre><p>例：在数组 arr 末尾添加元素 item。不要直接修改数组 arr，结果返回新的数组</p><pre><code>function append(arr, item) {    return arr.concat(item);}append([1,2,3,4],10);//[1, 2, 3, 4, 10]</code></pre><p>例：合并数组 arr1 和数组 arr2。不要直接修改数组 arr，结果返回新的数组：</p><pre><code>function concat(arr1, arr2) {    return arr1.concat(arr2);}</code></pre><p><br></p><blockquote><p>slice(起始位置，结束位置)：基于当前数组中的一或多个项创建一个新数组</p></blockquote><p>可以接收两个参数（要返回项的起始位置，结束位置）；</p><ul><li>一个参数时：返回该参数指定位置到当前数组末尾的所有项；</li><li>两个参数时：返回起始位置和结束位置（不包括结束位置）之间的项。</li><li>若参数为负，用数组长度加上该数来确定相应的位置；</li><li>若结束位置小于起始位置，返回空数组。</li></ul><p>例：删除数组 arr 最后一个元素。不要直接修改数组 arr，结果返回新的数组：</p><pre><code>function truncate(arr) {    return arr.slice(0,(arr.length)-1);}truncate([1,2,3,4]);    //[1, 2, 3]</code></pre><p>例：删除数组 arr 第一个元素。不要直接修改数组 arr，结果返回新的数组</p><pre><code>function curtail(arr) {    return arr.slice(1);//返回除第一个的新数组}</code></pre><p><br></p><blockquote><p>splice()：主要用途是向数组的中部插入项</p></blockquote><ul><li>删除：删除任意数量的项，接收两个参数（要删除的第一项的位置，删除项数）</li><li>插入：向指定位置插入任意数量的项，需提供三个参数（起始位置，0：要删除的项数，要插入的项）</li><li>替换：向指定位置插入任意数量的项，且同时删除任意数量的项，三个参数（起始位置，要删除的项数，要插入的任意数量的项）</li></ul><p>例：在数组 arr 的 index 处添加元素 item。不要直接修改数组 arr，结果返回新的数组：</p><pre><code>function insert(arr, item, index) {    var Arr = arr.concat();    Arr.splice(index-1,0,item);    console.log(Arr);    return Arr;}insert([1,2,3,4],&apos;z&apos;,2);    //</code></pre><p><br></p><h4 id="⑧位置方法"><a href="#⑧位置方法" class="headerlink" title="⑧位置方法"></a>⑧位置方法</h4><p>都接收两个参数【要查找的项,（可选）查找起点位置的索引】；都返回要查找的项在数组中的<strong>位置</strong>，没有找到的情况下返回-1；</p><blockquote><p><code>indexOf()</code>：从数组的开头（位置0）开始向后查找。返回位置。</p></blockquote><p>例：找出元素 item 在给定数组 arr 中的位置,如果数组中存在 item，则返回元素在数组中的位置，否则返回 -1：</p><pre><code>function indexOf(arr, item) {    return arr.indexOf(item);}indexOf([1,2,3,4],3);   //2</code></pre><p>例：找出数组 arr 中重复出现过的元素</p><pre><code>function duplicates(arr) {    var Arr = [];    for(var i = 0;i&lt;arr.length;i++)        for(var j = i+1;j&lt;arr.length;j++)            if((arr[i]==arr[j])&amp;&amp;(Arr.indexOf(i)==-1))                Arr.push(arr[i]);          return Arr.sort();}duplicates([1, 2, 4, 4, 3, 3, 1, 5, 3]);  //[ 1, 3, 4 ]</code></pre><blockquote><p><code>lastIndexOf()</code>：从数组的末尾开始向前查找。</p></blockquote><p><br></p><h4 id="⑨迭代方法"><a href="#⑨迭代方法" class="headerlink" title="⑨迭代方法"></a>⑨迭代方法</h4><p>最相似的是every()和some()，都用于查询数组中的项是否满足某个条件；filter()用于查询满足某个条件的所有数组项；map()用于创建包含项与另一个数组一一对应的数组；forEach()本质上与for循环迭代数组一样。均不影响原数组。</p><blockquote><p><code>every()</code>：对数组中每一项运行给定函数，函数对每一项都为true时 <strong>返回true</strong></p></blockquote><blockquote><p><code>some()</code>：对数组中每一项运行给定函数，函数对任一项为true时 <strong>返回true</strong></p></blockquote><blockquote><p><code>filter()</code> ：对数组中每一项运行给定函数，返回<strong>函数会返回true的项组成的数组</strong></p></blockquote><p>例如：移除数组 arr 中的所有值与 item 相等的元素。不要直接修改数组 arr，结果返回新的数组</p><pre><code>function remove(arr, item) {    return arr.filter(function(items,index,arr){        return (items!=item);    });}remove([1,2,3,4,2],2);      //[1,3,4]</code></pre><p>例如：移除数组 arr 中的所有值与 item 相等的元素，直接在给定的 arr 数组上进行操作，并将结果返回：</p><pre><code>function removeWithoutCopy(arr, item) {    for(var i = 0;i &lt; arr.length;i++){        if(arr[i] == item){            arr.splice(i,1);            i--;        }    }    return arr;}removeWithoutCopy([1,2,2,3,4,2,2],2);//</code></pre><p><br></p><blockquote><p><code>forEach()</code> ：对数组中每一项运行给定函数，没有返回值</p></blockquote><p>例：统计数组 arr 中值等于 item 的元素出现的次数</p><pre><code>function count(arr, item) {    var count = 0;    arr.forEach(function(items,index,arr){        if(items == item)            count+=1;    });    console.log(count);    return count;}count([1,2,4,4,3,4,3],4);//3</code></pre><p><br></p><blockquote><p><code>map()</code> ：对数组中每一项运行给定函数，返回<strong>每次函数调用的结果组成的数组</strong></p></blockquote><p>例：为数组 arr 中的每个元素求二次方。不要直接修改数组 arr，结果返回新的数组</p><pre><code>function square(arr) {    return arr.map(function(item,index,arr){        return item*item;      });}square([1, 2, 3, 4]);//[1, 4, 9, 16]</code></pre><p><br></p><h4 id="10-归并方法"><a href="#10-归并方法" class="headerlink" title="10.归并方法"></a>10.归并方法</h4><p>都会迭代数组的每一项，构建一个最终返回的值；用于求数组中的所有值之和；方法都接收两个参数（在每一项上调用的函数，可选的作为归并基础的初始值）；传给reduce()和reduceRight()的函数接收4个参数（前一个值，当前值，项的索引，数组对象）。</p><blockquote><p><code>reduce()</code>：从第一项开始遍历</p></blockquote><p>例如：计算给定数组 arr 中所有元素的总和：</p><pre><code>function sum(arr) {    return arr.reduce(function(prev,cur,index,arr){        return prev+cur;    });}sum([1,2,3,4]);</code></pre><p><br></p><blockquote><p><code>reduceRight()</code>：从最后一项开始遍历</p></blockquote><p><br><br><br></p><h3 id="三、-Date类型"><a href="#三、-Date类型" class="headerlink" title="三、 Date类型"></a>三、 Date类型</h3><p><a href="https://hotkang.cn/2018/Effects/">more&gt;&gt;</a></p><p><br></p><h3 id="四、-RegExp类型"><a href="#四、-RegExp类型" class="headerlink" title="四、 RegExp类型"></a>四、 RegExp类型</h3><h4 id="1-创建正则表达式"><a href="#1-创建正则表达式" class="headerlink" title="1. 创建正则表达式"></a>1. 创建正则表达式</h4><blockquote><p>正则表达式字面量</p></blockquote><pre><code>/*    /pattern/flags*/    const regex = /ab+c/;    const regex = /^[a-zA-Z]+[0-9]*\W?_$/gi;</code></pre><blockquote><p>调用RegExp对象的构造函数</p></blockquote><pre><code>/*     new RegExp(pattern [, flags])*/let regex = new RegExp(&quot;ab+c&quot;);let regex = new RegExp(/^[a-zA-Z]+[0-9]*\W?_$/, &quot;gi&quot;);let regex = new RegExp(&quot;^[a-zA-Z]+[0-9]*\\W?_$&quot;, &quot;gi&quot;);</code></pre><p><br></p><h3 id="五、-Function类型"><a href="#五、-Function类型" class="headerlink" title="五、 Function类型"></a>五、 Function类型</h3><p><a href="https://hotkang.cn/2018/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B8%80/#Function%E7%B1%BB%E5%9E%8B">more&gt;&gt;</a></p><p><br></p><h3 id="六、基本包装类型"><a href="#六、基本包装类型" class="headerlink" title="六、基本包装类型"></a>六、基本包装类型</h3><h4 id="1-Boolean类型-建议永远不要使用"><a href="#1-Boolean类型-建议永远不要使用" class="headerlink" title="1.Boolean类型(建议永远不要使用)"></a>1.Boolean类型(建议永远不要使用)</h4><h4 id="2-Number类型"><a href="#2-Number类型" class="headerlink" title="2.Number类型"></a>2.Number类型</h4><blockquote><p>toFixed()</p></blockquote><blockquote><p>toExponential()</p></blockquote><blockquote><p>toPrecision()</p></blockquote><p><br></p><h4 id="3-String类型"><a href="#3-String类型" class="headerlink" title="3.String类型"></a>3.String类型</h4><blockquote><p>字符方法</p></blockquote><blockquote><p>字符串操作方法</p></blockquote><blockquote><p>字符串位置方法</p></blockquote><blockquote><p>trim()方法</p></blockquote><blockquote><p>字符串大小写转换方法</p></blockquote><blockquote><p>字符串的模式匹配方法</p></blockquote><blockquote><p>localCompare()方法</p></blockquote><blockquote><p>formCharCode()方法</p></blockquote><blockquote><p>HTML方法</p></blockquote><p><br></p><h3 id="七、单体内置对象"><a href="#七、单体内置对象" class="headerlink" title="七、单体内置对象"></a>七、单体内置对象</h3><h4 id="1-Global对象"><a href="#1-Global对象" class="headerlink" title="1.Global对象"></a>1.Global对象</h4><p><br></p><h4 id="2-Math对象"><a href="#2-Math对象" class="headerlink" title="2.Math对象"></a>2.Math对象</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概览-完结&quot;&gt;&lt;a href=&quot;#概览-完结&quot; class=&quot;headerlink&quot; title=&quot;概览[完结]&quot;&gt;&lt;/a&gt;概览&lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;h4 id=&quot;基本数据类型&quot;&gt;&lt;a href=&quot;#基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;基本数据类型&quot;&gt;&lt;/a&gt;基本数据类型&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Undefined&lt;/li&gt;&lt;li&gt;Null&lt;/li&gt;&lt;li&gt;Boolean&lt;/li&gt;&lt;li&gt;Number&lt;/li&gt;&lt;li&gt;String&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;引用类型&quot;&gt;&lt;a href=&quot;#引用类型&quot; class=&quot;headerlink&quot; title=&quot;引用类型&quot;&gt;&lt;/a&gt;引用类型&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Object类型&lt;/li&gt;&lt;li&gt;Array类型&lt;/li&gt;&lt;li&gt;Date类型&lt;/li&gt;&lt;li&gt;RegExp类型&lt;/li&gt;&lt;li&gt;Function类型&lt;/li&gt;&lt;li&gt;基本包装类型&lt;/li&gt;&lt;li&gt;单体内置对象&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="Notes" scheme="https://hotkang.cn/tags/Notes/"/>
    
      <category term="JS" scheme="https://hotkang.cn/tags/JS/"/>
    
      <category term="数据类型" scheme="https://hotkang.cn/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Effects</title>
    <link href="https://hotkang.cn/2018/Effects/"/>
    <id>https://hotkang.cn/2018/Effects/</id>
    <published>2018-08-18T16:57:07.000Z</published>
    <updated>2018-08-29T07:22:42.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果概览-持续完善"><a href="#效果概览-持续完善" class="headerlink" title="效果概览 [持续完善]]"></a>效果概览 <span style="font-size:.5em">[持续完善]]</span></h2><ol><li><h3 id="AboutTime"><a href="#AboutTime" class="headerlink" title="AboutTime"></a>AboutTime</h3>…</li></ol><p><br><br><br></p><a id="more"></a><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p><a href="https://github.com/hotYan/Effects" target="_blank" rel="noopener">源码链接</a></p></blockquote><p><br><br><br></p><h2 id="AboutTime-1"><a href="#AboutTime-1" class="headerlink" title="AboutTime"></a>AboutTime</h2><hr><h3 id="1-Date-方法"><a href="#1-Date-方法" class="headerlink" title="1.Date()方法"></a>1.Date()方法</h3><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">getTime()</td><td style="text-align:left">返回日期的毫秒数，与valueOf()返回值相同</td></tr><tr><td style="text-align:center">getFullYear()</td><td style="text-align:left">取得4位数的年份</td></tr><tr><td style="text-align:center">getMonth()</td><td style="text-align:left">返回0~11月</td></tr><tr><td style="text-align:center">getDate()</td><td style="text-align:left">返回1~31天</td></tr><tr><td style="text-align:center">getDay()</td><td style="text-align:left">返回星期0~6，0表示星期日</td></tr><tr><td style="text-align:center">getHours()</td><td style="text-align:left">返回小时数0~23</td></tr><tr><td style="text-align:center">getMinutes()</td><td style="text-align:left">返回分钟数0~59</td></tr><tr><td style="text-align:center">getSeconds()</td><td style="text-align:left">返回秒数0~59</td></tr><tr><td style="text-align:center">setDate()</td><td style="text-align:left">设置日期中的天数</td></tr></tbody></table><p><a href="http://www.w3school.com.cn/jsref/jsref_obj_date.asp" target="_blank" rel="noopener">more&gt;&gt;</a></p><p><br><br><br></p><h3 id="2-Math对象"><a href="#2-Math对象" class="headerlink" title="2.Math对象"></a>2.Math对象</h3><blockquote><h4 id="Math对象的属性"><a href="#Math对象的属性" class="headerlink" title="Math对象的属性"></a>Math对象的属性</h4></blockquote><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">Math.E</td><td style="text-align:left">自然对数的底数，即常量e的值</td></tr><tr><td style="text-align:center">Math.LN10</td><td style="text-align:left">10的自然对数</td></tr><tr><td style="text-align:center">Math.LN2</td><td style="text-align:left">2的自然对数</td></tr><tr><td style="text-align:center">Math.LOG2E</td><td style="text-align:left">以2为底e的对数</td></tr><tr><td style="text-align:center">Math.LOG10E</td><td style="text-align:left">以10为底e的对数</td></tr><tr><td style="text-align:center">Math.PI</td><td style="text-align:left">π的值</td></tr><tr><td style="text-align:center">Math.SQRT_2</td><td style="text-align:left">1/2的平方根</td></tr><tr><td style="text-align:center">Math.SQRT2</td><td style="text-align:left">2的平方根</td></tr></tbody></table><p><br></p><blockquote><h4 id="min-和-max"><a href="#min-和-max" class="headerlink" title="min() 和 max()"></a>min() 和 max()</h4></blockquote><p>确定数值数组中的最大(小)值：</p><pre><code>var max = Math.max(3,54,32,16);alert(max);         //54var min = Math.min(3,54,32,16);alert(min);         //3var arr = [1,2,3,4,5,6,7,8];var max = Math.max.apply(Math,arr);console.log(max);       //8</code></pre><p><br></p><blockquote><h4 id="舍入方法"><a href="#舍入方法" class="headerlink" title="舍入方法"></a>舍入方法</h4></blockquote><p>Math.ceil()：向上取最接近的整数；Math.round()：正常的四舍五入；Math.floor()：向下去最接近的整数：</p><pre><code>console.log(Math.ceil(25.9));       //26   console.log(Math.ceil(25.5));       //26 console.log(Math.ceil(25.1));       //26 console.log(Math.round(25.9));      //26 console.log(Math.round(25.5));      //26 console.log(Math.round(25.1));      //25 console.log(Math.floor(25.9));      //25 console.log(Math.floor(25.5));      //25 console.log(Math.floor(25.1));      //25</code></pre><p><br></p><blockquote><h4 id="random-方法"><a href="#random-方法" class="headerlink" title="random()方法"></a>random()方法</h4></blockquote><p>Math.random()方法返回[0,1)的一个随机数。因为返回的总是一个小数值，所以用到Math.floor()方法：</p><blockquote><blockquote><p>值 = Math.floor(Math.random()* 可能的总数 + 第一个可能的值 )</p></blockquote></blockquote><pre><code>console.log(Math.floor(Math.random()*10+1));console.log(Math.floor(Math.random()*9+2));</code></pre><p><a href="http://www.w3school.com.cn/js/jsref_obj_math.asp" target="_blank" rel="noopener">more&gt;&gt;</a></p><p><br><br><br></p><h3 id="3-setTimeout-和-setInterval"><a href="#3-setTimeout-和-setInterval" class="headerlink" title="3.setTimeout() 和 setInterval()"></a>3.setTimeout() 和 setInterval()</h3><ul><li><p><a href="http://www.w3school.com.cn/htmldom/met_win_settimeout.asp" target="_blank" rel="noopener">参考资料1</a></p></li><li><p><a href="https://wangdoc.com/javascript/async/timer.html" target="_blank" rel="noopener">参考资料2</a></p></li></ul><p><br><br><br></p><h3 id="4-功能预览"><a href="#4-功能预览" class="headerlink" title="4.功能预览"></a>4.功能预览</h3><blockquote><p>显示当前时间：XXXX 年 XX 月 XX 日 星期X XX:XX:XX</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">showTime: function () &#123;</span><br><span class="line">    setTimeout(function () &#123;</span><br><span class="line">        var date = new Date();</span><br><span class="line">        var year = date.getFullYear(),</span><br><span class="line">            month = format(date.getMonth() + 1),</span><br><span class="line">            day = format(date.getDate()),</span><br><span class="line">            week = date.getDay(),//星期</span><br><span class="line">            H = format(date.getHours()),</span><br><span class="line">            M = format(date.getMinutes()),</span><br><span class="line">            S = format(date.getSeconds());</span><br><span class="line">        //①用【Array构造函数】创建数组</span><br><span class="line">        //var weeks = new Array(&quot;星期日&quot;,&quot;星期一&quot;,&quot;星期二&quot;,&quot;星期三&quot;,&quot;星期四&quot;,&quot;星期五&quot;,&quot;星期六&quot;);</span><br><span class="line">        //②用【数组字面量】创建数组 </span><br><span class="line">        var weeks = [&quot; 星期日 &quot;, &quot; 星期一 &quot;, &quot; 星期二 &quot;, &quot; 星期三 &quot;, &quot; 星期四 &quot;, &quot; 星期五 &quot;, &quot; 星期六 &quot;];</span><br><span class="line">        document.getElementById(&quot;showTime&quot;).innerHTML = year + &quot; 年 &quot; + month + &quot; 月 &quot; + day + &quot; 日 &quot; + weeks[week] + H + &quot; : &quot; + M + &quot; : &quot; + S;</span><br><span class="line">        setTimeout(arguments.callee,500);</span><br><span class="line">    &#125;, 500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p>高考倒计时：剩余 XXX 天</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deadLine: function () &#123;</span><br><span class="line">    var nowdate = new Date();</span><br><span class="line">    var deadline = new Date(&apos;2020,6,6&apos;),</span><br><span class="line">        lefttime = Math.ceil((deadline.getTime() - nowdate.getTime()) / (24 * 60 * 60 * 1000));</span><br><span class="line">    if (lefttime &gt; 0) &#123;</span><br><span class="line">        document.getElementById(&quot;deadLine&quot;).innerHTML = &apos;剩余  &apos; + lefttime + &apos;  天&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        document.getElementById(&apos;deadLine&apos;).innerHTML = &apos;倒计已结束&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p>限时抢购： 剩余 XX 天 XX 时 XX 分 XX 秒</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">limitedTime: function () &#123;</span><br><span class="line">    setTimeout(function () &#123;</span><br><span class="line">        var nowtime = new Date(),</span><br><span class="line">            endtime = new Date(&apos;2020,6,6,12:00:00&apos;),</span><br><span class="line">            lefttime = (endtime.getTime() - nowtime.getTime()) / 1000,</span><br><span class="line">            day = parseInt(lefttime / (60 * 60 * 24)),</span><br><span class="line">            H = format(parseInt(lefttime / (60 * 60) % 24)),</span><br><span class="line">            M = format(parseInt(lefttime / 60 % 60)),</span><br><span class="line">            S = format(parseInt(lefttime % 60));</span><br><span class="line">        if (lefttime &gt; 0) &#123;</span><br><span class="line">            document.getElementById(&quot;limitedTime&quot;).innerHTML = &apos;剩余  &apos; + day + &apos;  天 &apos; + H + &apos; 时  &apos; + M + &apos; 分 &apos; + S + &apos; 秒 &apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            document.getElementById(&apos;limitedTime&apos;).innerHTML = &apos;限时抢已结束&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        setTimeout(arguments.callee, 500);</span><br><span class="line">    &#125;, 500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p>某一天（过去或将来）：XXXX 年 XX 月 XX 日</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">oneDay: function (num) &#123;</span><br><span class="line">    var date = new Date();</span><br><span class="line">        date.setDate(date.getDate() + num);</span><br><span class="line">    var year = date.getFullYear(),</span><br><span class="line">        month = format(date.getMonth() + 1),</span><br><span class="line">        day = format(date.getDate());</span><br><span class="line">    document.getElementById(&quot;oneDay&quot;).innerHTML = year + &quot; 年 &quot; + month + &quot; 月 &quot; + day + &quot; 日 &quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="选项卡切换"><a href="#选项卡切换" class="headerlink" title="选项卡切换"></a>选项卡切换</h2><hr><p><br><br><br></p><h2 id="图片轮播"><a href="#图片轮播" class="headerlink" title="图片轮播"></a>图片轮播</h2><hr><p>[待完善]…</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果概览-持续完善&quot;&gt;&lt;a href=&quot;#效果概览-持续完善&quot; class=&quot;headerlink&quot; title=&quot;效果概览 [持续完善]]&quot;&gt;&lt;/a&gt;效果概览 &lt;span style=&quot;font-size:.5em&quot;&gt;[持续完善]]&lt;/span&gt;&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;&lt;h3 id=&quot;AboutTime&quot;&gt;&lt;a href=&quot;#AboutTime&quot; class=&quot;headerlink&quot; title=&quot;AboutTime&quot;&gt;&lt;/a&gt;AboutTime&lt;/h3&gt;…&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Effects" scheme="https://hotkang.cn/categories/Effects/"/>
    
    
      <category term="Effects_JS" scheme="https://hotkang.cn/tags/Effects-JS/"/>
    
  </entry>
  
  <entry>
    <title>技术之瞳</title>
    <link href="https://hotkang.cn/2018/%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%9E%B3/"/>
    <id>https://hotkang.cn/2018/技术之瞳/</id>
    <published>2018-08-04T07:26:46.000Z</published>
    <updated>2018-08-04T12:57:01.056Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter Password~" />    <label for="pass">Enter Password~</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;hr/&gt;&lt;h5 style=&quot;text-align:center&quot; &gt;Need Password&lt;/h5&gt;&lt;hr/&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="前端" scheme="https://hotkang.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="笔试" scheme="https://hotkang.cn/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Notes_HTML</title>
    <link href="https://hotkang.cn/2018/Notes-HTML/"/>
    <id>https://hotkang.cn/2018/Notes-HTML/</id>
    <published>2018-07-28T06:31:23.000Z</published>
    <updated>2018-08-01T09:27:25.963Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter Password~" />    <label for="pass">Enter Password~</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;hr/&gt;&lt;h5 style=&quot;text-align:center&quot; &gt;Need Password&lt;/h5&gt;&lt;hr/&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="Notes" scheme="https://hotkang.cn/tags/Notes/"/>
    
      <category term="HTML" scheme="https://hotkang.cn/tags/HTML/"/>
    
      <category term="面试" scheme="https://hotkang.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript面向对象编程三</title>
    <link href="https://hotkang.cn/2018/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B8%89/"/>
    <id>https://hotkang.cn/2018/JavaScript面向对象编程三/</id>
    <published>2018-07-26T07:05:40.000Z</published>
    <updated>2018-08-10T13:27:28.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="理解继承-完结"><a href="#理解继承-完结" class="headerlink" title="理解继承 [完结]"></a>理解继承 <span style="font-size:.5em">[完结]</span></h2><p>JavaScript主要通过原型链实现继承。原型链的构建是通过将一个类型的实例赋给另一个构造函数的原型实现的。这样,子类就能访问超类的所有属性和方法,这一点跟基于类的继承很相似。原型链不适宜单独使用,对象实例共享所有继承的属性和方法。可借用构造函数,即在子类型构造函数的内部调用超类型构造函数,每个实例都具有自己的属性同时保证只使用构造函数模式来定义类型。组合继承模式使用最多,即用原型链继承共享的属性和方法,用构造函数继承实例属性。<br><a id="more"></a></p><p><br><br><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>JavaScript高级程序设计(第3版)P162-P174</p></blockquote><p><br><br><br></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><hr><blockquote><p>接口继承</p></blockquote><p>只继承 <strong>方法签名</strong>。由于函数没有签名,在ECMAScript中无法实现接口继承。</p><blockquote><p>实现继承</p></blockquote><p>继承 <strong>实际的方法</strong>。ECMAScript只支持实现继承,主要依靠 <strong>原型链</strong>来实现。</p><p><br></p><h2 id="一、原型链"><a href="#一、原型链" class="headerlink" title="一、原型链"></a>一、原型链</h2><p>基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。</p><ol><li><h5 id="构造函数、原型、实例的关系"><a href="#构造函数、原型、实例的关系" class="headerlink" title="构造函数、原型、实例的关系:"></a>构造函数、原型、实例的关系:</h5><ul><li><p>每个 <strong><code>构造函数</code></strong> 都有一个 <strong><code>原型对象</code></strong> ,构造函数都包含一个指向其原型对象的指针(<code>prototype</code>)</p></li><li><p><strong><code>实例对象</code></strong> 都包含一个指向 <strong><code>原型对象</code></strong> 的内部指针(<code>[[Prototype]]</code>)</p></li><li><p><strong><code>原型对象</code></strong> 都包含一个指向 <strong><code>构造函数</code></strong> 的指针(<code>constructor</code>)</p></li></ul></li></ol><p><br></p><ol start="2"><li><h5 id="实现原型链的基本模式"><a href="#实现原型链的基本模式" class="headerlink" title="实现原型链的基本模式:"></a>实现原型链的基本模式:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function SuperType()&#123;       //构造函数定义property属性</span><br><span class="line">    this.property = true;</span><br><span class="line">&#125;</span><br><span class="line">SuperType.prototype.getSuperValue = function()&#123;     //原型定义getSuperValue方法</span><br><span class="line">    return this.property;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function SubType()&#123;          //构造函数定义subproperty属性</span><br><span class="line">    this.subproperty = false;</span><br><span class="line">&#125;</span><br><span class="line">SubType.prototype = new SuperType(); //创建SuperType实例并赋给SubType的原型来实现继承</span><br><span class="line"></span><br><span class="line">Subtype.prototype.getSubTypeValue = function()&#123;     //原型定义getSubTypeValue方法</span><br><span class="line">    return this.subproperty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var instance = new SubType();</span><br><span class="line">alert(instance.getSuperValue());        //true</span><br></pre></td></tr></table></figure><p>调用instance.getSuperValue()会经历三个搜索步骤:搜索实例 -&gt; 搜索Subtype.prototype -&gt; 搜索SuperType.prototype,最后才找到该方法</p><p>关系图:</p><p><img src="/img/YXL.png" alt=""></p></li></ol><p><br></p><ol start="3"><li><h5 id="确定原型和实例的关系"><a href="#确定原型和实例的关系" class="headerlink" title="确定原型和实例的关系"></a>确定原型和实例的关系</h5><blockquote><h5 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h5></blockquote><pre><code>alert(instance instanceof Object);       //truealert(instance instanceof SuperType);    //truealert(instance instanceof SubType);      //true</code></pre><blockquote><h5 id="isPrototypeOf-NaN"><a href="#isPrototypeOf-NaN" class="headerlink" title="isPrototypeOf()"></a>isPrototypeOf()</h5></blockquote><p>只要是原型链中出现过的原型,都可以说是该原型链所派生的实例的原型:</p><pre><code>alert(Object.prototype.isPrototypeOf(instance));        //truealert(SuperType.prototype.isPrototypeOf(instance));     //truealert(SubType.prototype.isPrototypeOf(instance));        //true</code></pre></li></ol><p><br></p><ol start="3"><li><h5 id="谨慎的定义方法"><a href="#谨慎的定义方法" class="headerlink" title="谨慎的定义方法"></a>谨慎的定义方法</h5><ul><li>添加新方法或重写超类类型中的方法,代码一定要放在替换原型的语句之后。</li><li>通过原型链实现继承，不能使用对象字面量创建原型方法。</li></ul></li><li><h5 id="原型链的问题"><a href="#原型链的问题" class="headerlink" title="原型链的问题"></a>原型链的问题</h5><ul><li>原型中定义的属性和方法将被所有实例共享。</li><li>创建子类型实例时，不能向超类型的构造函数传递参数。</li></ul></li></ol><p><br></p><h2 id="二、借用构造函数-伪造对象-经典继承"><a href="#二、借用构造函数-伪造对象-经典继承" class="headerlink" title="二、借用构造函数(伪造对象/经典继承)"></a>二、借用构造函数(伪造对象/经典继承)</h2><p>在子类的构造函数内部调用超类型构造函数，使用apply()和call()方法在新创建的对象上执行构造函数:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function SuperType()&#123;</span><br><span class="line">    this.colors = [&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;];</span><br><span class="line">&#125;</span><br><span class="line">function SubType()&#123;</span><br><span class="line">    SuperType.call(this);</span><br><span class="line">&#125;</span><br><span class="line">var instance1 = new SubType();</span><br><span class="line">instance1.colors.push(&quot;black&quot;);</span><br><span class="line">alert(instance1.colors);        //&quot;red,blue,green,black&quot;</span><br><span class="line"></span><br><span class="line">var instance2 = new SubType();</span><br><span class="line">alert(instance2.colors);        //&quot;red,blue,green&quot;</span><br></pre></td></tr></table></figure><p></p><ol><li><h5 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h5><p>相对于原型链而言，构造函数可以在子类型构造函数中向超类型构造函数传递参数:</p><pre><code>function SuperType(){    this.name = name;}function SubType(){    SuperType.call(this, &quot;hotyan&quot;);     //继承了SuperType,同时还传递了参数    this.age = 18;      //实例属性}var instance = new SubType();alert(instance.name);       //&quot;hotyan&quot;alert(instance.age);         //18</code></pre></li><li><h5 id="借用构造函数的问题"><a href="#借用构造函数的问题" class="headerlink" title="借用构造函数的问题"></a>借用构造函数的问题</h5><p>方法都在构造函数中定义，函数无法复用。</p></li></ol><p><br></p><h2 id="三、组合继承-伪经典继承"><a href="#三、组合继承-伪经典继承" class="headerlink" title="三、组合继承(伪经典继承)"></a>三、组合继承(伪经典继承)</h2><p>使用原型链实现对原型属性和方法的继承，使用构造函数来实现对实例属性的继承：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">function SuperType(name)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.colors = [&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;];</span><br><span class="line">&#125;</span><br><span class="line">SuperType.prototype.sayName = function()&#123;</span><br><span class="line">    alert(this.name);</span><br><span class="line">&#125;;</span><br><span class="line">function SubType(name, age)&#123;</span><br><span class="line">    SuperType.call(this, name);</span><br><span class="line">    this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SubType.prototype = new SuperType();</span><br><span class="line">SubType.prototype.constructor = SubType;</span><br><span class="line">SubType.prototype.sayAge = function()&#123;</span><br><span class="line">    alert(this.age);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var instance1 = new SubType(&quot;hotyan&quot;,18);</span><br><span class="line">instance1.colors.push(&quot;black&quot;);</span><br><span class="line">alert(instance1.colors);        //&quot;red,blue,green,black&quot;</span><br><span class="line">insyance1.sayNme();             //&quot;hotyan&quot;</span><br><span class="line">instance1.sayAge();             //18</span><br><span class="line"></span><br><span class="line">var instance2 = new SubType(&quot;hotyann&quot;,28);</span><br><span class="line">alert(instance2.colors);        //&quot;red,blue,green&quot;</span><br><span class="line">insyance2.sayNme();             //&quot;hotyann&quot;</span><br><span class="line">instance2.sayAge();             //28</span><br></pre></td></tr></table></figure><p>最常用的继承模式，能正常使用instanceof 和 isPrototypeOf()。</p><p><br></p><h2 id="四、原型式继承"><a href="#四、原型式继承" class="headerlink" title="四、原型式继承"></a>四、原型式继承</h2><p>借助原型可以基于原有的对象创建新对象，同时不必因此创建自定义类型。本质上讲，object()对传入其中的对象执行了一次浅复制。</p><p>原型式继承要求必须有一个对象作为另一个对象的基础，再根据需求对得到的对象加以修改：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function object(O)&#123;</span><br><span class="line">    function F()&#123;&#125;          //创建一个临时性的构造函数</span><br><span class="line">    F.prototype = o;        //将传入对象作为这个构造函数的原型</span><br><span class="line">    return new F();         //返回临时类型的新实例</span><br><span class="line">&#125;</span><br><span class="line">var person = &#123;</span><br><span class="line">    name:&quot;hotyan&quot;,</span><br><span class="line">    friends:[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var hotyan1 = object(person);   //新对象讲person作为原型</span><br><span class="line">hotyan1.name = &quot;hotyan1&quot;;</span><br><span class="line">hotyan1.friends.push(&quot;D&quot;);</span><br><span class="line"></span><br><span class="line">var hotyan2 = object(person);</span><br><span class="line">hotyan2.name = &quot;hotyan2&quot;;</span><br><span class="line">hotyan2.friends.push(&quot;DD&quot;);</span><br><span class="line"></span><br><span class="line">alert(person.friends);      //&quot;A,B,C,D,DD&quot;</span><br></pre></td></tr></table></figure><p></p><p>person.friends不仅属于person所有,而且也会被hotyan1和hotyan2共享。实际上,相当于创建了person对象的两个副本。</p><p>ES5新增Object.create()方法规范化了原型式继承。接受两个参数： <strong>作为新对象原型</strong>的的对象、<strong>一个为新对象定义额外属性</strong>的对象。</p><p>在传入一个参数的情况下，Object.creat()与object()方法的行为相同。</p><p>Object.creat()方法的第二个参数与Object.defineProperties()方法的第二个参数格式相同（每个属性都是通过自己的描述符定义的）：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var person = &#123;</span><br><span class="line">    name:&quot;hotyan&quot;,</span><br><span class="line">    friends:[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;]</span><br><span class="line">&#125;;</span><br><span class="line">var hotyan1 = Object.create(person, &#123;</span><br><span class="line">    name:&#123;</span><br><span class="line">        value: &quot;hotyan1&quot;        //将覆盖原型上的同名属性</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);  </span><br><span class="line">alert(hotyan1.name);      //&quot;hotyan1&quot;</span><br></pre></td></tr></table></figure><p></p><p>原型式继承完全可以胜任只想让一个对象与另一个对象保持类似的情况。</p><p><br></p><h2 id="五、寄生式继承"><a href="#五、寄生式继承" class="headerlink" title="五、寄生式继承"></a>五、寄生式继承</h2><p>思路与寄生构造函数、工厂模式类似：创建一个仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象，最后像真的是它做了所有工作一样返回对象：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function createAnother(o)&#123;</span><br><span class="line">    var f = object(o);          //通过调用函数来创建一个新对象</span><br><span class="line">    f.sayHi = function()&#123;       //以某种方式来增强这个对象</span><br><span class="line">        alert(&quot;hi&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    return f;</span><br><span class="line">&#125;</span><br><span class="line">var person = &#123;</span><br><span class="line">    name:&quot;hotyan&quot;,</span><br><span class="line">    friends:[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;]</span><br><span class="line">&#125;;</span><br><span class="line">var hotyan1 = creatAnother(person);     //新对象不仅有person的所有属性和方法,而且还有自己的sayHi()方法</span><br><span class="line">hotyan1.sayHi();        //&quot;hi&quot;</span><br></pre></td></tr></table></figure><p></p><p>在主要考虑对象而不是自定义类型和构造函数的情况下，寄生式继承也是一种有用的模式。使用寄生式继承来为对象添加函数，会由于不能做到函数复用而降低效率(与构造函数模式类似)。</p><p><br></p><h2 id="六、寄生组合式继承"><a href="#六、寄生组合式继承" class="headerlink" title="六、寄生组合式继承"></a>六、寄生组合式继承</h2><p>组合继承模式最大的问题就是无论在什么情况下都会调用两次超类型的构造函数:创建子类型原型的时候,子类型构造函数内部。</p><p>子类型最终会包含超类型对象的全部实例，但我们不得不在调用子类型构造函数时重写这些属性：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function SuperType(name)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.colors = [&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;];</span><br><span class="line">&#125;</span><br><span class="line">SuperType.prototype.sayName = function()&#123;</span><br><span class="line">    alert(this.name);</span><br><span class="line">&#125;;</span><br><span class="line">function SubType(name, age)&#123;</span><br><span class="line">    SuperType.call(this, name);         //第二次调用SuperType()</span><br><span class="line">    this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">SubType.prototype = new SuperType();     //第一次调用SuperType()</span><br><span class="line">    this.age = age;</span><br><span class="line">SubType.prototype.constructor = SubType;</span><br><span class="line">SubType.prototype.sayAge = function()&#123;</span><br><span class="line">    alert(this.age);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p>所谓寄生组合式继承就是 <strong>通过借用构造函数来继承属性，通过原型链的混成形式来继承方法</strong>：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function inheritPrototype(subType,superType)&#123;</span><br><span class="line">    var prototype = object(superType.prototype);        //创建超类型原型的一个副本</span><br><span class="line">    prototype.constructor = subType;                //为创建的副本添加constructor属性(重写原型导致默认属性constructor失去)</span><br><span class="line">    subType.prototype = prototype;              //将创建的副本赋值给子类型的原型</span><br><span class="line">&#125;</span><br><span class="line">function SuperType(name)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.colors = [&quot;red&quot;,&quot;blue&quot;,&quot;green&quot;];</span><br><span class="line">&#125;</span><br><span class="line">SuperType.prototype.sayName = function()&#123;</span><br><span class="line">    alert(this.name);</span><br><span class="line">&#125;;</span><br><span class="line">function SubType(name, age)&#123;</span><br><span class="line">    SuperType.call(this, name);         //第二次调用SuperType()</span><br><span class="line">    this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">inheritPrototype(SubType, SuperType);</span><br><span class="line">SubType.prototype.sayAge = function()&#123;</span><br><span class="line">    alert(this.age);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p>高效率体现在只调用了一次SuperType构造函数；</p><p>与此同时，原型链保持不变；</p><p>能正常使用instanceof 和 isPrototypeOf()。</p><p>是引用类型最理想的继承范式。</p><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;理解继承-完结&quot;&gt;&lt;a href=&quot;#理解继承-完结&quot; class=&quot;headerlink&quot; title=&quot;理解继承 [完结]&quot;&gt;&lt;/a&gt;理解继承 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JavaScript主要通过原型链实现继承。原型链的构建是通过将一个类型的实例赋给另一个构造函数的原型实现的。这样,子类就能访问超类的所有属性和方法,这一点跟基于类的继承很相似。原型链不适宜单独使用,对象实例共享所有继承的属性和方法。可借用构造函数,即在子类型构造函数的内部调用超类型构造函数,每个实例都具有自己的属性同时保证只使用构造函数模式来定义类型。组合继承模式使用最多,即用原型链继承共享的属性和方法,用构造函数继承实例属性。&lt;br&gt;
    
    </summary>
    
      <category term="面向对象编程" scheme="https://hotkang.cn/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="继承" scheme="https://hotkang.cn/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript面向对象编程二</title>
    <link href="https://hotkang.cn/2018/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%BA%8C/"/>
    <id>https://hotkang.cn/2018/JavaScript面向对象编程二/</id>
    <published>2018-07-26T07:05:31.000Z</published>
    <updated>2018-07-28T07:40:20.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="理解并创建对象-完结"><a href="#理解并创建对象-完结" class="headerlink" title="理解并创建对象 [完结]"></a>理解并创建对象 <span style="font-size:.5em">[完结]</span></h2><p>ECMAScript 支持面向对象(OO)编程,但不使用类或者接口。对象可以在代码执行过程中创建和增强,因此具有动态性而非严格定义的实体。在没有类的情况下,可以采用下列模式创建对象。</p><ul><li><p>工厂模式: 使用简单的函数创建对象,为对象添加属性和方法并返回对象。(后被构造函数模式取代)</p></li><li><p>构造函数模式: 创建自定义引用类型,像创建内置对象实例一样使用new操作符。每个成员无法得到复用。</p></li><li>原型模式:使用构造函数的prototype属性来指定共享属性和方法。组合使用构造函数模式和原型模式,即用构造函数定义实例属性,用原型定义共享的属性和方法。<a id="more"></a><br><br><br></li></ul><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>JavaScript高级程序设计(第3版)P144-P162</p></blockquote><p><br><br><br></p><h2 id="Object类型"><a href="#Object类型" class="headerlink" title="Object类型"></a>Object类型</h2><hr><blockquote><p>Object构造函数</p></blockquote><pre><code>var hotyan = new Object();hotyan.name = hotyan;hotyan.age = 18;      //永远18...</code></pre><p><br></p><blockquote><p>对象字面量</p></blockquote><pre><code>var hotyan = {  name : &quot;hotyan&quot;,  age : 18};</code></pre><p>属性名也可以使用字符串</p><pre><code>var hotyan = {  &quot;name&quot; : &quot;hotyan&quot;,  &quot;age&quot; : 18,  5 : true       //数字属性名自动转换为字符串};</code></pre><p><br></p><blockquote><p>访问对象属性【点方法/方括号表示法】</p></blockquote><pre><code>alert(hotyan.name);       //&quot;hotyan&quot;alert(hotyan[&quot;name&quot;]);    //&quot;hotyan&quot;</code></pre><p>功能上没有区别,但<span id="inline-green">方括号表示法</span>可以通过变量来访问属性</p><pre><code>var propertyName = &quot;name&quot;;alert(hotyan[propertyName]);    //&quot;hotyan&quot;</code></pre><p>属性名使用的是<span id="inline-purple">关键字</span>、<span id="inline-blue">保留字</span>或包含会导致语法错误的字符、非字母非数字时可使用方括号表示法</p><pre><code>hotyan[&quot;first name&quot;] = &quot;hotyan&quot;;    //&quot;first name&quot;包含一个空格,不能使用点方法</code></pre><p>通常,除非必须使用变量来访问属性,否则建议用点方法。</p><p><br><br><br></p><h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><hr><h2 id="一、原始模式"><a href="#一、原始模式" class="headerlink" title="一、原始模式"></a>一、原始模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var hotyan1 = &#123;&#125;;    //与new Object() 相同</span><br><span class="line">hotyan1.name = &quot;hotyan1&quot;;</span><br><span class="line">hotyan1.age = 18;</span><br><span class="line"></span><br><span class="line">var hotyan2 =&#123;&#125;;</span><br><span class="line">hotyan2.name = &quot;hotyan2&quot;;</span><br><span class="line">hotyan2.age = 28;</span><br></pre></td></tr></table></figure><p>最 <strong>简单</strong>的封装,把两个属性封装在一个对象里面。<br>缺点:</p><ol><li>使用同一个接口创建很多对象(创建多个实例),会产生大量 <strong>重复代码</strong>。</li><li>实例与原型之间,看不出任何联系。</li></ol><p><br></p><h2 id="二、工厂模式"><a href="#二、工厂模式" class="headerlink" title="二、工厂模式"></a>二、工厂模式</h2><p>工厂模式是广为人知的设计模式,抽象了创建具体对象的过程。</p><p>用函数来封装 <strong>以特定接口创建对象</strong>的细节:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function createPerson(name,age,job)&#123;</span><br><span class="line">    var o =new Object();    //显示的创建对象</span><br><span class="line">    o.name = name;          </span><br><span class="line">    o.age = age;</span><br><span class="line">    o.job = job;</span><br><span class="line">    o.sayName = function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line">    return o;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = createPerson(&quot;hotyan1&quot;,18,&quot;Student&quot;);</span><br><span class="line">var hotyan2 = createPerson(&quot;hotyan2&quot;,28,&quot;Engineer&quot;);</span><br></pre></td></tr></table></figure><p></p><p>解决了创建多个相似对象的问题(即解决代码重复的问题)。<br>不足:</p><ol><li><p>没有解决对象识别问题(即不知道对象的类型)</p></li><li><p>实例之间没有内在的联系,不能反映出它们是同一个原型对象的实例</p></li></ol><p><br></p><h2 id="三、构造函数模式"><a href="#三、构造函数模式" class="headerlink" title="三、构造函数模式"></a>三、构造函数模式</h2><p>构造函数本身就是一个函数,出于 <strong>创建新对象</strong>的目的而定义的。</p><p>内部使用了 <strong><code>this</code></strong> 变量,使用 <strong><code>new</code></strong> 运算符就能生成实例,并且 <strong><code>this</code></strong> 变量会绑定在实例对象上。</p><p>构造函数的函数名始终都应该以一个大写字母开头,非构造函数则应该以一个小写字母开头。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;  </span><br><span class="line">    /*直接将属性和方法赋给this对象*/</span><br><span class="line">    this.name = name;       </span><br><span class="line">    this.age = age;</span><br><span class="line">    this.job = job;</span><br><span class="line"></span><br><span class="line">    this.sayName = function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = new Person(&quot;hotyan1&quot;,18,&quot;Student&quot;);</span><br><span class="line">var hotyan2 = new Person(&quot;hotyan2&quot;,28,&quot;Engineer&quot;);</span><br></pre></td></tr></table></figure><p><strong><code>hotyan1</code></strong> 和 <strong><code>hotyan2</code></strong> 都有一个 <strong><code>constructor</code>(构造函数)属性</strong>,该属性指向 <strong><code>Person</code></strong> :</p><pre><code>alert(hotyan1.constructor == Person);   //truealert(hotyan2.constructor == Person);   //true</code></pre><p>对象的 <strong><code>constructor</code></strong> 属性最初是用来标识对象类型的。</p><p>但是提到检测对象类型,还是 <strong><code>instanceof</code></strong> 操作符更可靠一些:</p><pre><code>alert(hotyan1 instanceof Object);   //truealert(hotyan2 instanceof Object);   //truealert(hotyan1 instanceof Person);   //truealert(hotyan2 instanceof Person);   //true</code></pre><p>创建的对象既是Object的实例,也是Person的实例。验证了实例与原型之间的关系(即反映出它们是同一个原型对象的实例)。</p><p><br></p><blockquote><p>将构造函数当作函数</p></blockquote><p>构造函数与其他函数的唯一区别就是调用它们的方式不同。前面定义的Person()函数可以通过下列任何一种方式来调用:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//1.当作构造函数使用</span><br><span class="line">var hotyan = new Person(&quot;hotyan&quot;,18,&quot;Student&quot;);</span><br><span class="line">hotyan.sayName();   //&quot;hotyan&quot;</span><br><span class="line"></span><br><span class="line">//2.作为普通函数使用</span><br><span class="line">Person(&quot;hotyan&quot;,18,&quot;Student&quot;);  //添加到window</span><br><span class="line">window.sayName();   //&quot;hotyan&quot;</span><br><span class="line"></span><br><span class="line">//3.在另一个对象的作用域中调用</span><br><span class="line">var O = new Object();</span><br><span class="line">Person.call(O, &quot;hotyan&quot;, 18, &quot;Student&quot;);</span><br><span class="line">O.sayName();   //&quot;hotyan&quot;</span><br></pre></td></tr></table></figure><p></p><ol><li>构造函数的典型用法,用new操作符来创建一个新对象。</li><li>不使用new操作符调用Person(),属性和方法都被添加window</li><li>使用call()或者apply()在某个特殊对象的作用域中调用Person()函数,O就拥有了所有属性和方法。</li></ol><p><br></p><blockquote><p>构造函数的问题</p></blockquote><p>主要问题:</p><pre><code>每个方法都要在每个实例上重新创建一遍。  </code></pre><p>不同实例上的同名函数是不相等的:</p><pre><code>alert(hotyan1.sayName == hotyan2.sayName);  //false</code></pre><p>尝试通过把函数定义转移到构造函数外部来解决问题:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">    this.job = job;</span><br><span class="line">    this.sayName = sayName; //将sayName属性设置成等于全局的sayName函数 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sayName()&#123;     </span><br><span class="line">    alert(this.name);   </span><br><span class="line">&#125;                       </span><br><span class="line"></span><br><span class="line">var hotyan1 = new Person(&quot;hotyan1&quot;,18,&quot;Student&quot;);</span><br><span class="line">var hotyan2 = new Person(&quot;hotyan2&quot;,28,&quot;Engineer&quot;);</span><br></pre></td></tr></table></figure><p></p><p><strong><code>sayName</code></strong> 包含的是一个指向函数的指针,因此 <strong><code>hotyan1</code></strong> 和 <strong><code>hotyan2</code></strong> 对象就共享了在全局作用域中定义的同一个 <strong><code>sayName()</code></strong> 函数。确实解决了两个函数做同一件事情的问题,可是新问题又来了:</p><ol><li><p>在全局作用域中定义的函数实际上只能被某个对象调用,这让全局作用域有点名不副实。</p></li><li><p>如果对象需要定义很多方法,就将定义很多个全局函数,使得自定义的引用类型丝毫没有封装性可言。</p></li></ol><p>这些问题可以通过原型模式解决！</p><p><br></p><h2 id="四、原型模式"><a href="#四、原型模式" class="headerlink" title="四、原型模式"></a>四、原型模式</h2><p>我们创建的每一个构造函数都有一个 <strong><code>prototype</code></strong> 属性,这个属性是一个 <strong>指针</strong>,指向一个 <strong>原型对象</strong>。这个原型对象的所有属性和方法，都会被构造函数的实例继承。</p><p>不必在构造函数中定义对象实例的信息,直接将信息添加到原型对象中:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">////////////后面将用...代替这部分代码/////////</span><br><span class="line">    function Person()&#123;&#125;</span><br><span class="line">    Person.prototype.name = &quot;hotyan&quot;;</span><br><span class="line">    Person.prototype.age = 18;</span><br><span class="line">    Person.prototype.job = &quot;Student&quot;;</span><br><span class="line">    Person.prototype.sayName = function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line">///////////到此处结束///////////////////////</span><br></pre></td></tr></table></figure><p></p><p>仍然可以通过调用构造函数来创建新对象,新对象的属性和方法是由所有实例共享的。</p><p>即 <strong><code>hotyan1</code></strong> 和 <strong><code>hotyan2</code></strong> 访问的都是同一组属性和同一个 <strong><code>sayName()</code></strong> 函数:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">hotyan1.sayName();  //&quot;hotyan&quot;</span><br><span class="line"></span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line">hotyan1.sayName();  //&quot;hotyan&quot;</span><br><span class="line"></span><br><span class="line">alert(hotyan1.sayName == hotyan2.sayName);  //true</span><br></pre></td></tr></table></figure><p></p><p>要理解原型模式的工作原理必须先理解ECMAScript中原型对象的性质。</p><p><br></p><blockquote><p>理解原型对象</p></blockquote><p>默认情况下,所有原型对象都会自动获得一个 <strong><code>constructor</code>(构造函数)属性</strong>,这个属性是一个 <strong>指针</strong>,指向 <strong><code>prototype</code>属性所在函数</strong>。</p><p>当调用构造函数创建一个新实例,内部包含一个内部属性 <strong>[[<code>Prototype</code>]]</strong>,这个属性是一个 <strong>指针</strong>,指向 <strong>构造函数的原型对象</strong>。</p><p><img src="/img/YX.png" alt=""></p><p>虽然在所有现实中都无法访问到 <strong>[[<code>Prototype</code>]]</strong>,可以通过 <strong><code>isPrototypeOf()</code></strong> 来确定对象之间是否存在这种关系:</p><pre><code>alert(Person.prototype.isPrototypeOf(hotyan1));     //truealert(Person.prototype.isPrototypeOf(hotyan2));     //true</code></pre><p>ECMAScript 5新增<code>Object.getPrototypeOf()</code>,返回[[<code>Prototype</code>]]的值:</p><pre><code>alert(Object.getPrototypeOf(hotyan1) == Person.prototype);  //truealert(Object.getPrototypeOf(hotyan1).name);  //&quot;hotyan&quot;</code></pre><p><br></p><blockquote><p>属性屏蔽</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line"></span><br><span class="line">hotyan1.name = &quot;hotyanhotyan&quot;;  //为对象实例添加name属性,将屏蔽原型对象中的同名属性。</span><br><span class="line">alert(hotyan1.name);    //&quot;hotyanhotyan&quot; --来自实例</span><br><span class="line">alert(hotyan2.name);    //&quot;hotyan&quot; --来自原型</span><br></pre></td></tr></table></figure><p>在实例中添加<code>name</code>属性只会 <strong>阻止</strong>我们访问原型中的同名属性,即使将<code>name</code>属性设置为<code>null</code>,也只会在实例中设置属性值为<code>null</code>,而不会恢复其指向原型的连接。必须使用 <strong><code>delete</code>操作符</strong>完全删除实例属性才能重新访问原型中的属性:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line"></span><br><span class="line">hotyan1.name = &quot;hotyanhotyan&quot;;  //为对象实例添加name属性,将屏蔽原型对象中的同名属性。</span><br><span class="line">alert(hotyan1.name);    //&quot;hotyanhotyan&quot; --来自实例</span><br><span class="line">alert(hotyan2.name);    //&quot;hotyan&quot; --来自原型</span><br><span class="line"></span><br><span class="line">delete hotyan1.name;    //!!!!!!!!!!!</span><br><span class="line">alert(hotyan1.name);    //&quot;hotyan&quot; --来自原型</span><br></pre></td></tr></table></figure><p></p><p>使用 <strong><code>hasOwnPrototype()</code></strong> 方法可检测一个属性存在于实例还是原型。存在实例时返回true:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line"></span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //false</span><br><span class="line"></span><br><span class="line">hotyan1.name = &quot;hotyanhotyan&quot;;  //重写name属性</span><br><span class="line">alert(hotyan1.name);            //&quot;hotyanhotyan&quot;--来自实例</span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //true</span><br><span class="line"></span><br><span class="line">alert(hotyan2.name);            //&quot;hotyan&quot;--来自原型</span><br><span class="line">alert(hotyan2.hasOwnPrototype(&quot;name&quot;));     //false</span><br><span class="line"></span><br><span class="line">delete hotyan1.name;</span><br><span class="line">alert(hotyan1.name);            //&quot;hotyan&quot;--来自原型</span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //false</span><br></pre></td></tr></table></figure><p></p><p><br></p><blockquote><p>原型与in操作符</p></blockquote><p>单独使用时, <strong>in操作符</strong>会在通过对象能够访问给定属性时返回true:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line"></span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //false</span><br><span class="line">alert(&quot;name&quot; in hotyan1);       //true</span><br><span class="line"></span><br><span class="line">hotyan1.name = &quot;hotyanhotyan&quot;;  //重写name属性</span><br><span class="line">alert(hotyan1.name);            //&quot;hotyanhotyan&quot;--来自实例</span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //true</span><br><span class="line">alert(&quot;name&quot; in hotyan1);       //true</span><br><span class="line"></span><br><span class="line">alert(hotyan2.name);            //&quot;hotyan&quot;--来自原型</span><br><span class="line">alert(hotyan2.hasOwnPrototype(&quot;name&quot;));     //false</span><br><span class="line">alert(&quot;name&quot; in hotyan2);       //true</span><br><span class="line"></span><br><span class="line">delete hotyan1.name;</span><br><span class="line">alert(hotyan1.name);            //&quot;hotyan&quot;--来自原型</span><br><span class="line">alert(hotyan1.hasOwnPrototype(&quot;name&quot;));     //false</span><br><span class="line">alert(&quot;name&quot; in hotyan1);       //true</span><br></pre></td></tr></table></figure><p></p><p>无论该属性存在于实例中还是存在于原型中,始终都返回true。</p><p>同时使用 <strong><code>hasOwnPrototype()</code></strong> 方法和 <strong>in操作符</strong>,就可以确定该属性是存在于对象中,还是存在于原型中:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function hasPrototypePrototy(object,name)&#123;</span><br><span class="line">    return !object.hasOwnProperty(name) &amp;&amp; (name in object);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p><code>name in object</code>–通过对象能访问到属性时返回true;</p><p><code>hasOwnPrototype()</code>–属性存在于实例中时返回true;</p><p><code>!hasOwnPrototype()</code>–属性存在于原型中时返回true;</p><p>因此,只要 <strong><code>hasPrototypePrototy()</code></strong> 返回 <strong><code>true</code></strong> ,可以确定属性存在于 <strong>原型</strong>:</p><pre><code>...var hotyan1 = new Person();alert(hasPrototyprPrototy(hotyan1, &quot;name&quot;));    //truehotyan1.name = &quot;hotyanhotyan&quot;;//重写name属性alert(hasPrototyprPrototy(hotyan1, &quot;name&quot;));    //false</code></pre><p><br></p><blockquote><p>更简单的原型语法</p></blockquote><p>每添加一个属性或方法,就要重复一遍 <strong><code>Person.prototype</code></strong>:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;</span><br><span class="line">Person.prototype.name = &quot;hotyan&quot;;</span><br><span class="line">Person.prototype.age = 18;</span><br><span class="line">Person.prototype.job = &quot;Student&quot;;</span><br><span class="line">Person.prototype.sayName = function()&#123;</span><br><span class="line">    alert(this.name);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p>减少不必要输入的同时,从视觉上更好的封装整个原型,用对象字面量来 <strong>重写</strong>整个原型对象:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    name : &quot;hotyan&quot;,</span><br><span class="line">    age : 18,</span><br><span class="line">    job : &quot;Student&quot;,</span><br><span class="line">    sayName : function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p><strong><code>Person.prototype</code></strong> 等于一个以对象字面量形式创建的新对象,结果相同。</p><p>但是 <strong><code>constructor</code>属性</strong>不再指向 <strong><code>Person</code></strong> (指向 <strong><code>Object</code>构造函数</strong>):</p><pre><code>...var hotyan1 = new Person();alert(hotyan1.constructor == Person);   //falsealert(hotyan1.constructor == Object);   //true</code></pre><p>如果 <strong><code>constructor</code>的值</strong> 真的非常重要,可以特意设置回适当的值:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    constructor : Person,   //值设为Person</span><br><span class="line">    name : &quot;hotyan&quot;,</span><br><span class="line">    age : 18,</span><br><span class="line">    job : &quot;Student&quot;,</span><br><span class="line">    sayName : function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p><br></p><blockquote><p>原型的动态性</p></blockquote><p>对原型对象所做的任何修改都可以立即从实例对象上反映出来,即使是 <strong>先创建实例后修改原型对象</strong>:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">var hotyan1 = new Person();     //新建Person实例保存在hotyan1中</span><br><span class="line">Person.prototype.sayHi = function()&#123;    //给原型对象新添sayHi()方法</span><br><span class="line">    alert(&quot;hi&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">hotyan1.sayHi();    //&quot;hi&quot;--仍然可以访问sayHi()方法</span><br></pre></td></tr></table></figure><p></p><p>其原因归结于 <strong>实例与原型之间的松散连接关系</strong>。</p><p>但是如果是重写整个原型对象,情况就不一样了:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;</span><br><span class="line">var hotyan1 = new Person();     //新建Person实例保存在hotyan1中</span><br><span class="line">Person.prototype = &#123;            //重写整个原型对象</span><br><span class="line">    constructor : Person,       //值设为Person</span><br><span class="line">    name : &quot;hotyan&quot;,</span><br><span class="line">    age : 18,</span><br><span class="line">    job : &quot;Student&quot;,</span><br><span class="line">    sayName : function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">hotyan1.sayName();      //error</span><br></pre></td></tr></table></figure><p></p><p>重写原型对象</p><p>切断了构造函数与最初原型之间的联系(即构造函数指向了重写的新原型),</p><p>切断了之前已经存在的实例与新原型之间的关系(即之前已经存在的实例仍然指向最初的原型)。</p><p><img src="/img/RWYX.png" alt=""></p><p><br></p><blockquote><p>原生对象的原型</p></blockquote><p>原型模式的重要性不仅体现在 <strong>创建自定义类型</strong>,所有原生的引用类型(<code>Object、Array、String...</code>)都采用原型模式创建。</p><p>通过原生对象的原型,不仅可以 <strong>取得所有默认方法的引用</strong>,而且可以 <strong>定义新方法</strong>。(但不推荐！)</p><p><br></p><blockquote><p>原型对象的问题</p></blockquote><ol><li><p>省略了为构造函数传递的初始化参数,导致所有实例在默认情况下拥有相同的属性值。(不是最大问题)</p></li><li><p>原型中的属性和方法是被所有实例共享的,对于函数非常适合,对于包含基本值得属性倒也说的过去(可以重写属性),对于包含引用类型值得属性来说,问题比较突出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    name : &quot;hotyan&quot;,</span><br><span class="line">    age : 18,</span><br><span class="line">    job : &quot;Student&quot;,</span><br><span class="line">    friends :[&quot;A&quot;, &quot;B&quot;],</span><br><span class="line">    sayName : function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">var hotyan1 = new Person();</span><br><span class="line">var hotyan2 = new Person();</span><br><span class="line"></span><br><span class="line">hotyan1.friends.push(&quot;C&quot;);      //向hotyan1添加了好友C</span><br><span class="line">alert(hotyan1.friends);     //&quot;A,B,C&quot;</span><br><span class="line">alert(hotyan2.friends);     //&quot;A,B,C&quot;--结果hotyan2也一同被修改</span><br><span class="line">alert(hotyan1.friends === hotyan2.friends);//true</span><br></pre></td></tr></table></figure></li></ol><pre><code>这个问题也是我们很少看见有人 **单独使用原型模式**的原因所在！！</code></pre><p><br></p><h2 id="五、构造函数和原型混合模式"><a href="#五、构造函数和原型混合模式" class="headerlink" title="五、构造函数和原型混合模式"></a>五、构造函数和原型混合模式</h2><p>是创建自定义类型最常见的方式。构造函数模式:定义实例属性;原型模式:定义共享属性和方法。</p><p>还支持向构造函数传递参数,可谓集两种模式之长:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">    this.job = job;</span><br><span class="line">    this.friends = [&quot;A&quot;, &quot;B&quot;];</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    constructor : Person,</span><br><span class="line">    sayName : function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = new Person(&quot;hotyan1&quot;, 18, &quot;Student&quot;);</span><br><span class="line">var hotyan2 = new Person(&quot;hotyan2&quot;, 28, &quot;Engineer&quot;);</span><br><span class="line"></span><br><span class="line">hotyan1.friends.push(&quot;C&quot;);</span><br><span class="line"></span><br><span class="line">alert(hotyan1.friends);     //&quot;A,B,C&quot;</span><br><span class="line">alert(hotyan2.friends);     //&quot;A,B&quot;</span><br><span class="line">alert(hotyan1.friends === hotyan2.friends);     //false</span><br><span class="line">alert(hotyan1.sayName === hotyan2.sayName);     //true</span><br></pre></td></tr></table></figure><p></p><p>这种构造函数与原型混成的模式,是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说是用来 <strong>定义引用类型的一种默认模式</strong>。</p><p><br></p><h2 id="六、动态原型模式"><a href="#六、动态原型模式" class="headerlink" title="六、动态原型模式"></a>六、动态原型模式</h2><p>把所有信息都封装到构造函数中,通过在构造函数中初始化原型(必要情况下)。</p><p>保存了同时使用构造函数和原型的优点:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">    this.job = job;</span><br><span class="line"></span><br><span class="line">    if(typeof this.sayName != &quot;function&quot;)&#123;</span><br><span class="line">        Person.prototype.sayName = function()&#123;</span><br><span class="line">            alert(this.name);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = new Person(&quot;hotyan1&quot;, 18, &quot;Student&quot;);</span><br><span class="line">hotyan1.sayName();      //&quot;hotyan1&quot;</span><br></pre></td></tr></table></figure><p></p><p>使用动态原型模式时,不能使用对象字面量重写原型对象(重写原型会切断现有实例与新原型之间的联系,即现有实例仍然指向最初的原型)。</p><p><br></p><h2 id="七、寄生构造函数模式"><a href="#七、寄生构造函数模式" class="headerlink" title="七、寄生构造函数模式"></a>七、寄生构造函数模式</h2><p>基本思想是创建一个函数,函数作用仅仅是封装创建对象的代码,然后返回新创建的对象:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;</span><br><span class="line">    var o = new Object();</span><br><span class="line">    o.name = name;</span><br><span class="line">    o.age = age;</span><br><span class="line">    o.job = job;</span><br><span class="line">    o.sayName = function()&#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line">    return o;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = new Person(&quot;hotyan1&quot;, 18, &quot;Student&quot;);</span><br><span class="line">hotyan1.sayName();      //&quot;hotyan1&quot;</span><br></pre></td></tr></table></figure><p></p><p>除了使用 <strong><code>new</code>操作符</strong> 创建实例并把封装函数叫做构造函数外,这个模式跟工厂模式一模一样。</p><p>不能依赖 <strong><code>insatnceof</code>操作符</strong> 来确定对象类型(返回的对象与构造函数或者够着函数的原型属性之间没有关系,即返回的对象相对于在构造函数外部创建的对象),能使用其他模式的情况下,就不使用寄生构造函数模式。</p><p><br></p><h2 id="八、稳妥构造函数模式"><a href="#八、稳妥构造函数模式" class="headerlink" title="八、稳妥构造函数模式"></a>八、稳妥构造函数模式</h2><p>所谓稳妥对象,指没有公共属性,方法也不引用this对象。与寄生构造函数类似,但有两点不同:</p><ol><li><p>新创建对象的实例方法不引用this;</p></li><li><p>不使用new操作符调用构造函数(来创建实例)。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,job)&#123;</span><br><span class="line">    var o = new Object();</span><br><span class="line">    o.name = name;</span><br><span class="line">    o.age = age;</span><br><span class="line">    o.job = job;</span><br><span class="line">    o.sayName = function()&#123;</span><br><span class="line">        alert(name);</span><br><span class="line">    &#125;;</span><br><span class="line">    return o;</span><br><span class="line">&#125;</span><br><span class="line">var hotyan1 = Person(&quot;hotyan1&quot;, 18, &quot;Student&quot;);</span><br><span class="line">hotyan1.sayName();      //&quot;hotyan1&quot;</span><br></pre></td></tr></table></figure><p>不能依赖 <strong><code>insatnceof</code>操作符</strong>来确定对象类型(返回的对象与构造函数或者够着函数的原型属性之间没有关系,即返回的对象相对于在构造函数外部创建的对象),稳妥构造函数提供的安全性非常适合在某些安全执行环境(ADsafe、Caja)下使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;理解并创建对象-完结&quot;&gt;&lt;a href=&quot;#理解并创建对象-完结&quot; class=&quot;headerlink&quot; title=&quot;理解并创建对象 [完结]&quot;&gt;&lt;/a&gt;理解并创建对象 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;ECMAScript 支持面向对象(OO)编程,但不使用类或者接口。对象可以在代码执行过程中创建和增强,因此具有动态性而非严格定义的实体。在没有类的情况下,可以采用下列模式创建对象。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;工厂模式: 使用简单的函数创建对象,为对象添加属性和方法并返回对象。(后被构造函数模式取代)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;构造函数模式: 创建自定义引用类型,像创建内置对象实例一样使用new操作符。每个成员无法得到复用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;原型模式:使用构造函数的prototype属性来指定共享属性和方法。组合使用构造函数模式和原型模式,即用构造函数定义实例属性,用原型定义共享的属性和方法。
    
    </summary>
    
      <category term="面向对象编程" scheme="https://hotkang.cn/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="封装" scheme="https://hotkang.cn/tags/%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript面向对象编程一</title>
    <link href="https://hotkang.cn/2018/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B8%80/"/>
    <id>https://hotkang.cn/2018/JavaScript面向对象编程一/</id>
    <published>2018-07-26T07:04:41.000Z</published>
    <updated>2018-08-03T11:21:32.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="理解面向对象编程-完结"><a href="#理解面向对象编程-完结" class="headerlink" title="理解面向对象编程 [完结]"></a>理解面向对象编程 <span style="font-size:.5em">[完结]</span></h2><p>JS的面向对象编程和其它大多数语言如Java、C#的面向对象编程都不太一样。JS不区分类和实例的概念,而是通过原型（prototype）来实现面向对象编程。JS的原型链和Java的Class区别在于JS没有“Class”的概念,所有对象都是实例,所谓继承关系不过是把一个对象的原型指向另一个对象而已。</p><a id="more"></a><p><br><br><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>JavaScript高级程序设计(P110~P118)</p><p>JavaScript设计模式(P11~P18)</p></blockquote><p><br><br><br></p><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><hr><ol><li><h5 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h5><p>大概就是下面说的这样:</p><blockquote><p>面向对象是相对于面向过程的,比如你要充话费,你会想,下个支付宝,注册并登录,绑定银行卡,充值。这种种过程。但是对于你女朋友就不一样了,她是面向“对象”的,她会想,谁会充话费呢？当然是你了,她就给你电话,然后你把之前的做了一遍,然后她收到充值成功的短信,说了句,么么哒。这就是面向对象！女的思维大部分是面向“对象”的！她不关心处理的细节,只关心谁可以,和结果!</p></blockquote></li></ol><ol start="2"><li><h5 id="两个基本概念"><a href="#两个基本概念" class="headerlink" title="两个基本概念"></a>两个基本概念</h5><blockquote><p>类</p></blockquote><p><strong>类是对象的类型模板</strong>。例如:定义Student类来表示学生,类本身是一种类型,Student表示学生类型,但不表示任何具体的某个学生。</p><blockquote><p>实例</p></blockquote><p><strong>实例是根据类创建的对象</strong>。例如:根据Student类可以创建出xiaoming、xiaohong、xiaojun等多个实例,每个实例表示一个具体的学生,他们全都属于Student类型。</p></li></ol><ol start="3"><li><h5 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h5><blockquote><p>封装</p></blockquote><p>把客观事物封装成抽象的类,并且类可以把自己的数据和方法只让可信的类或者对象操作,对不可信的进行信息隐藏。</p><blockquote><p>继承</p></blockquote><p>指这样一种能力:它可以使用现有类的所有功能,并在无需重新编写原来的类的情况下对这些功能进行扩展。</p><blockquote><p>多态</p></blockquote><p>允许将子类类型的指针赋值给父类类型的指针。实现多态:覆盖、重载。</p><p><a href="https://www.jianshu.com/p/50999d81eeb5" target="_blank" rel="noopener">查看更多&gt;&gt;</a></p></li></ol><p><br><br><br></p><h2 id="Function类型"><a href="#Function类型" class="headerlink" title="Function类型"></a>Function类型</h2><hr><p>每个函数都是Function类型的实例,都与其他引用类型一样具有属性和方法。函数实际上是对象,函数名实际上是一个指向函数对象的指针,不会与某个函数绑定。</p><ol><li><h5 id="定义函数的三种方式"><a href="#定义函数的三种方式" class="headerlink" title="定义函数的三种方式"></a>定义函数的三种方式</h5><blockquote><p><strong>函数声明:</strong></p></blockquote><pre><code>function sum (num1, num2){    return num1 + num2;}</code></pre><blockquote><p><strong>函数表达式:</strong></p></blockquote><pre><code>var sum = function(num1, num2){    return num1 + num2;};  //注意此处有分号</code></pre><blockquote><p><strong>Function构造函数:</strong></p></blockquote><pre><code>var sum = new Function(&quot;num1&quot;, &quot;num2&quot;, &quot;return num1 + num2&quot;);</code></pre><p>不推荐!！因为构造函数定义导致 <strong>解析两次代码</strong>影响性能:</p><ul><li><p>第一次是解析常规ECMAScript代码;</p></li><li><p>第二次是解析传入构造函数中的字符串。</p></li></ul></li></ol><ol start="2"><li><h5 id="一个函数可能有多个名字"><a href="#一个函数可能有多个名字" class="headerlink" title="一个函数可能有多个名字"></a>一个函数可能有多个名字</h5><p><strong>函数名仅仅是指向函数的指针</strong>,函数名与 <strong>包含对象指针的</strong>其他变量没有什么不同:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function sum (num1, num2)&#123;      //定义一个sum()函数用于求两盒个值得和</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line">alert(sum(10,10));  //20</span><br><span class="line"></span><br><span class="line">var anotherSum = sum;       //声明变量anotherSum,设置其与sum相等(即他们都指向了同一个函数)。</span><br><span class="line">alert(anotherSum(10,10));   //20--正常调用anotherSum()</span><br><span class="line"></span><br><span class="line">sum = null;                 //将sum设置为null,让它与函&quot;数断绝关系&quot;</span><br><span class="line">alert(anotherSum(10,10));   //20--正常调用anotherSum()</span><br></pre></td></tr></table></figure></li><li><h5 id="没有重载"><a href="#没有重载" class="headerlink" title="没有重载"></a>没有重载</h5><p>其他语言(如Java)可以为一个函数编写两个定义,只要两个定义的 <strong>签名(参数的类型和数量)</strong> 不同即可。ECMAScript函数的参数是 <strong>0或多个值的数组</strong>,故没有函数签名。没有函数签名,真正的重载是不可能做到的。</p><p>声明了两个同名函数,结果则是后面的函数覆盖了前面的函数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function addSum(num)&#123;</span><br><span class="line">    return num + 100;</span><br><span class="line">&#125;</span><br><span class="line">function addSum(num)&#123;</span><br><span class="line">    return num + 200;</span><br><span class="line">&#125;</span><br><span class="line">var result = addSum(100);   //300</span><br></pre></td></tr></table></figure><p>将函数名想象为指针有助于理解为什么ECMAScript中没有函数重载概念。</p></li></ol><ol start="4"><li><h5 id="函数声明与函数表达式"><a href="#函数声明与函数表达式" class="headerlink" title="函数声明与函数表达式"></a>函数声明与函数表达式</h5><p>解析器在执行环境中加载数据时,对函数声明和函数表达式并非一视同仁。解析器会率先读取 <strong><code>函数声明</code></strong>,并使其在执行任何代码之前可用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(sum(10, 10));     //20</span><br><span class="line">function sum(sum1, sum2)&#123;</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码开始执行前,解析器就通过 <strong>函数声明提升</strong>读取并将函数声明添加到执行环境中。对代码求值时,JS引擎在第一遍会声明函数并将它们放到源代码树的顶部。<strong><code>函数表达式</code></strong> 必须等到解析器执行到它所在的代码行才会真正被解释执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(sum(10, 10));     //&quot;unexpected identifier&quot;(意外标识符)错误</span><br><span class="line">var sum = function(sum1, sum2)&#123;</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>除了什么时候可以通过变量访问函数这一点区别外,函数声明和函数表达式的语法是等价的！</strong></p></li></ol><ol start="5"><li><h5 id="作为值的函数"><a href="#作为值的函数" class="headerlink" title="作为值的函数"></a>作为值的函数</h5><p>ECMAScript中函数名本身就是变量,所以函数也可以作为值来使用。即不仅可以像传递参数一样把一个函数传递给另一个函数,而且可以将函数作为另一个函数的结果返回。</p><p>要访问函数的指针而不执行函数的话,必须去掉函数名后面的那对大括号。</p></li></ol><ol start="6"><li><h5 id="函数内部属性"><a href="#函数内部属性" class="headerlink" title="函数内部属性"></a>函数内部属性</h5><p>函数内部有两个特殊的对象: <strong><code>arguments</code></strong> 和 <strong><code>this</code></strong>。</p><blockquote><p><strong><code>arguments</code>:</strong></p></blockquote><p>类数组对象,保存函数参数。可使用 <strong>方括号语法</strong>访问它的每个元素。可用length属性来确定传递参数的个数。可与命名参数一起使用。值永远与对应命名参数的值保持同步。<code>arguments</code>有一个<code>callee</code>指针属性,指向拥有这个<code>arguments</code>对象的函数。</p><p>经典的阶乘函数,在函数有名字且以后不会改变的情况下,这样定义没有问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function factorial(num)&#123;</span><br><span class="line">    if(num &lt;= 1) </span><br><span class="line">        return 1;</span><br><span class="line">    else </span><br><span class="line">        return num * factorial(num-1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个函数的执行与函数<code>factorial</code>紧紧耦合在了一起。可使用<code>arguments.callee</code>来消除紧密耦合现象:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function factorial(num)&#123;</span><br><span class="line">    if(num &lt;= 1) </span><br><span class="line">        return 1;</span><br><span class="line">    else </span><br><span class="line">        return num * arguments.callee(num-1);</span><br><span class="line">&#125;</span><br><span class="line">var trueFactorial = factorial;</span><br><span class="line"></span><br><span class="line">factorial = function()&#123;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">alert(trueFactorial(5));    //120</span><br><span class="line">alert(factorial(5));        //0</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>this</code>:</strong></p></blockquote><p><code>this</code>引用的是函数执行的环境对象(即<code>this</code>值)。当在网页的全局作用域中调用函数时,<code>this</code>对象引用的就是<code>window</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">window.color = &quot;red&quot;;</span><br><span class="line">var o = &#123;color : &quot;blue&quot;&#125;;</span><br><span class="line">function sayColor()&#123;</span><br><span class="line">    alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line">sayColor();     //&quot;red&quot;--引用对象是window</span><br><span class="line">o.sayColor = sayColor;</span><br><span class="line">o.sayColor();       //&quot;blue&quot;--引用对象是o</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>caller</code>:</strong></p></blockquote><p>ECMAScript 5规范化了的一个函数对象属性。保存着 <strong>调用当前函数</strong> 的 <strong>函数的引用</strong>。如果是在全局作用域中调用当前函数,它的值为null。</p><blockquote><p>定义<code>arguments.callee</code>属性是为了分清<code>arguments.caller</code>和函数的<code>caller</code>属性。</p><p>严格模式下,访问<code>arguments.callee</code>会导致错误。访问<code>arguments.caller</code>(ECMAScript 5定义)也会导致错误,非严格模式下,<code>arguments.caller</code>属性始终是<code>undefined</code>。</p><p>严格模式还有一个限制:不能为函数<code>caller</code>属性赋值,否则会导致错误。</p></blockquote></li></ol><ol start="7"><li><h5 id="函数属性和方法"><a href="#函数属性和方法" class="headerlink" title="函数属性和方法"></a>函数属性和方法</h5><blockquote><p>属性:<code>length</code></p></blockquote><p>每个函数都包含两个属性:<code>length</code>和<code>prototype</code>。<code>length</code>属性表示函数希望接收的命名参数的个数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function sayName(name)&#123;</span><br><span class="line">    alert(this.name);</span><br><span class="line">&#125;</span><br><span class="line">function sum(num1, num2)&#123;</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line">function sayHi()&#123;</span><br><span class="line">    alert(&quot;Hi&quot;);</span><br><span class="line">&#125;</span><br><span class="line">alert(sayName.length);  //1</span><br><span class="line">alert(sum.length);  //2</span><br><span class="line">alert(sayHi.length);  //0</span><br></pre></td></tr></table></figure><blockquote><p>方法:<code>apply()</code></p></blockquote><p>每个函数都包含两个非继承而来的方法: <strong><code>apply()</code></strong> 和 <strong><code>call()</code></strong> 。可在特定的作用域中调用函数(即设置函数体内<code>this</code>对象的值)。</p><p><code>apply()</code>方法接收两个参数:①在其中运行函数的的作用域:<code>this</code>的引用对象;②参数数组:<code>Array</code>实例、<code>arguments</code>对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function sum(num1, num2)&#123;</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line">function applySum1(num1, num2)&#123;</span><br><span class="line">    return sum.apply(this, arguments);      //传入arguments</span><br><span class="line">&#125;</span><br><span class="line">function applySum2(num1, num2)&#123;</span><br><span class="line">    return sum.apply(this, [num1, num2]);       //传入数组</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alert(applySum1(10, 10));        //20</span><br><span class="line">alert(applySum2(10, 15));        //25</span><br></pre></td></tr></table></figure><blockquote><p>方法:<code>call()</code></p></blockquote><p><code>call()</code>和<code>apply()</code>方法作用相同,区别在于接收参数方式不同。<code>call()</code>传递给函数的参数必须逐个列举出来:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function sum(num1, num2)&#123;</span><br><span class="line">    return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line">function callSum(num1, num2)&#123;</span><br><span class="line">    return sum.call(this, num1, num2);      </span><br><span class="line">&#125;</span><br><span class="line">alert(callSum(10, 10));        //20</span><br></pre></td></tr></table></figure><p>传递参数并非<code>call</code>和<code>apply</code>的真正用武之地,真正强大的地方是能够扩充函数赖以运行的作用域:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">window.color = &quot;red&quot;;</span><br><span class="line">var o = &#123;color : &quot;blue&quot;&#125;;</span><br><span class="line"></span><br><span class="line">function sayColor()&#123;</span><br><span class="line">    alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line">sayColor();     //&quot;red&quot;--window.color</span><br><span class="line"></span><br><span class="line">sayColor().call(this);       //&quot;red&quot;</span><br><span class="line">sayColor().call(window);       //&quot;red&quot;</span><br><span class="line">sayColor().call(o);       //&quot;blue&quot;</span><br></pre></td></tr></table></figure><p>扩充作用域的最大好处:对象不需要与方法有任何耦合关系。可省去此步骤: <code>o.sayColor = sayColor;</code></p><blockquote><p>方法:<code>bind()</code></p></blockquote><p>调用<code>bind()</code>会创建一个函数实例,其this值会被绑定到 <strong>传给bind()函数</strong>的值:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">window.color = &quot;red&quot;;</span><br><span class="line">var o = &#123;color : &quot;blue&quot;&#125;;</span><br><span class="line"></span><br><span class="line">function sayColor()&#123;</span><br><span class="line">    alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line">var objectSayColor = sayColor.bind(o);</span><br><span class="line">objectSayColor();       //&quot;blue&quot;</span><br></pre></td></tr></table></figure></li></ol><p><br><br><br></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><hr><ol><li><h5 id="创建一个类"><a href="#创建一个类" class="headerlink" title="创建一个类"></a>创建一个类</h5><p>声明一个函数(类)保存在一个变量里,一般将这个代表类的变量名首字母大写。在函数(类)的内部通过this(函数内部自带的一个变量,用于指向当前这个对象)变量添加属性和方法来实现对函数(类)添加属性和方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var Book = function(id,name,price)&#123;</span><br><span class="line">    this.id = id;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.price = price;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>也可通过在类的原型上添加属性和方法:</p><pre><code>//一一为原型对象属性赋值Book.prototype.display = function(){    //.....}//将一个对象赋值给类的原型对象Book.prototype = {    display : function(){}};</code></pre><p>用new操作符来实例化新对象,通过点方法访问实例化对象的属性和方法:</p><pre><code>var book = new Book(10,&quot;Javascript设计模式&quot;, 50);alert(book.id);   //10</code></pre></li><li><h5 id="属性与方法封装"><a href="#属性与方法封装" class="headerlink" title="属性与方法封装"></a>属性与方法封装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//私有属性和私有方法,特权方法,对象公有属性和公有方法,构造器</span><br><span class="line">var Book = function(id, name, price)&#123;</span><br><span class="line"></span><br><span class="line">    var num = 1;    //私有属性</span><br><span class="line">    function checkId()&#123;&#125;;   //私有方法</span><br><span class="line"></span><br><span class="line">    this.getName = function()&#123;&#125;;    //特权方法</span><br><span class="line">    this.getPrice = function()&#123;&#125;;</span><br><span class="line">    this.setName = function()&#123;&#125;;</span><br><span class="line">    this.setPrice = function()&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    this.id = id;   //公有属性</span><br><span class="line">    this.copy = function()&#123;&#125;;   //公有方法</span><br><span class="line"></span><br><span class="line">    this.setName(name);     //构造器</span><br><span class="line">    this.setPrice(price);</span><br><span class="line">&#125;;</span><br><span class="line">Book.isChinese = true;  //静态公有属性(对象不能访问)</span><br><span class="line">Book.resetTime = function()&#123;    //静态公有方法(对象不能访问)</span><br><span class="line">    alert(&quot;New Time&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">Book.prototype = &#123;</span><br><span class="line">    isBook : false,     //公有属性</span><br><span class="line">    display : function()&#123;&#125;      //  公有方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>私有属性和方法、静态公有属性和方法在通过New操作符创建的book对象里是访问不到的:</p><pre><code>var book = new Book(10,&quot;Javascript设计模式&quot;, 50);alert(book.num);   //undefinedalert(book.isJSBook);   //false</code></pre><p>可以通过点方法访问到公有属性和方法:</p><pre><code>alert(book.id);   //10alert(book.isChinese);   //undefined</code></pre><p>静态公有属性和方法可以通过类的自身访问:</p><pre><code>alert(Book.isChinese);   //trueBook.resertTime();      //&quot;New Time&quot;</code></pre></li></ol><ol start="3"><li><h5 id="闭包实现"><a href="#闭包实现" class="headerlink" title="闭包实现"></a>闭包实现</h5><p>闭包是有权访问另一个函数作用域中变量的函数,即在一个函数内部创建另一个函数。将闭包作为创建对象的构造函数,又是闭包又是可实例对象的函数,即可访问到类函数作用域中的变量。</p><p>将类的静态变量通过闭包来实现:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var Book = (function()&#123;</span><br><span class="line">    var bookNum = 0;    //静态私有变量</span><br><span class="line">    function checkBook(name)&#123;&#125;  //静态私有方法</span><br><span class="line"></span><br><span class="line">    return function(newId, newName, newPrice)&#123;</span><br><span class="line">        var name, price;        //私有变量</span><br><span class="line">        fucntion checkID(id)&#123;&#125;  //私有方法</span><br><span class="line"></span><br><span class="line">        this.getName = function()&#123;&#125;;    //特权方法</span><br><span class="line">        this.getPrice = function()&#123;&#125;;</span><br><span class="line">        this.setName = function()&#123;&#125;;</span><br><span class="line">        this.setPrice = function()&#123;&#125;;</span><br><span class="line"></span><br><span class="line">        this.id = id;   //公有属性</span><br><span class="line">        this.copy = function()&#123;&#125;;   //公有方法</span><br><span class="line"></span><br><span class="line">        bookNum++;</span><br><span class="line">        if(bookNum &gt; 100)</span><br><span class="line">            throw new Error(&quot;我们仅出版了100本书&quot;);</span><br><span class="line"></span><br><span class="line">        this.setName(name);     //构造器</span><br><span class="line">        this.setPrice(price);</span><br><span class="line">    &#125; </span><br><span class="line">    _book.prototype = &#123; //构建原型</span><br><span class="line">        isJSBook : false,       //静态公有属性</span><br><span class="line">        display : function()&#123;&#125;  //静态公有方法</span><br><span class="line">    &#125;;</span><br><span class="line">    retuen _book;   //返回类</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li><li><h5 id="创建对象的安全模式"><a href="#创建对象的安全模式" class="headerlink" title="创建对象的安全模式"></a>创建对象的安全模式</h5><p>监测是否忘记New操作符:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var Book = function(title, time, type)&#123;</span><br><span class="line">    if(this instanceof Book)&#123;</span><br><span class="line">        this.title = title;</span><br><span class="line">        this.time = time;</span><br><span class="line">        this.type = type;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">        return new Book(title, time, type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;理解面向对象编程-完结&quot;&gt;&lt;a href=&quot;#理解面向对象编程-完结&quot; class=&quot;headerlink&quot; title=&quot;理解面向对象编程 [完结]&quot;&gt;&lt;/a&gt;理解面向对象编程 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JS的面向对象编程和其它大多数语言如Java、C#的面向对象编程都不太一样。JS不区分类和实例的概念,而是通过原型（prototype）来实现面向对象编程。JS的原型链和Java的Class区别在于JS没有“Class”的概念,所有对象都是实例,所谓继承关系不过是把一个对象的原型指向另一个对象而已。&lt;/p&gt;
    
    </summary>
    
      <category term="面向对象编程" scheme="https://hotkang.cn/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="面向对象" scheme="https://hotkang.cn/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="封装" scheme="https://hotkang.cn/tags/%E5%B0%81%E8%A3%85/"/>
    
      <category term="继承" scheme="https://hotkang.cn/tags/%E7%BB%A7%E6%89%BF/"/>
    
      <category term="多态" scheme="https://hotkang.cn/tags/%E5%A4%9A%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Notes_CSS</title>
    <link href="https://hotkang.cn/2018/Notes-CSS/"/>
    <id>https://hotkang.cn/2018/Notes-CSS/</id>
    <published>2018-07-23T17:46:39.000Z</published>
    <updated>2018-08-01T09:27:40.148Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter Password~" />    <label for="pass">Enter Password~</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;hr/&gt;&lt;h5 style=&quot;text-align:center&quot; &gt;Need Password&lt;/h5&gt;&lt;hr/&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="Notes" scheme="https://hotkang.cn/tags/Notes/"/>
    
      <category term="面试" scheme="https://hotkang.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="CSS" scheme="https://hotkang.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Notes_JS</title>
    <link href="https://hotkang.cn/2018/Notes-JS/"/>
    <id>https://hotkang.cn/2018/Notes-JS/</id>
    <published>2018-07-23T17:46:27.000Z</published>
    <updated>2018-09-04T08:59:34.956Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter Password~" />    <label for="pass">Enter Password~</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;hr/&gt;&lt;h5 style=&quot;text-align:center&quot; &gt;Need Password&lt;/h5&gt;&lt;hr/&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="Notes" scheme="https://hotkang.cn/tags/Notes/"/>
    
      <category term="面试" scheme="https://hotkang.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="JS" scheme="https://hotkang.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>GitHub修改邮箱后</title>
    <link href="https://hotkang.cn/2018/GitHub%E4%BF%AE%E6%94%B9%E9%82%AE%E7%AE%B1%E5%90%8E/"/>
    <id>https://hotkang.cn/2018/GitHub修改邮箱后/</id>
    <published>2018-07-23T08:05:18.000Z</published>
    <updated>2018-08-09T16:51:23.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改邮箱后。。。-待完善"><a href="#修改邮箱后。。。-待完善" class="headerlink" title="修改邮箱后。。。 [待完善]"></a>修改邮箱后。。。 <span style="font-size:.5em">[待完善]</span></h2><blockquote><p>有一天突然发现自己的提交记录变少了？？？？绿色少的可怜？？于是我就回想自己干了嘛！！！！<br>恩…前几天换了个邮箱…并且毫不犹豫的把旧邮箱删除了…</p><p>把旧邮箱重新添加回来,绿色也回来了！！！<br>但是我强迫症,不想把旧邮箱留着…</p></blockquote><a id="more"></a><p><br><br><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><ul><li><a href="http://blog.51cto.com/dangzhiqiang/1657864" target="_blank" rel="noopener">参考链接</a></li><li><a href="https://help.github.com/articles/changing-author-info/" target="_blank" rel="noopener">Changing author info</a>。</li></ul></blockquote><p><br><br><br></p><h2 id="全局Git设置"><a href="#全局Git设置" class="headerlink" title="全局Git设置"></a>全局Git设置</h2><hr><ol><li><h5 id="全局设置用户及邮箱"><a href="#全局设置用户及邮箱" class="headerlink" title="全局设置用户及邮箱"></a>全局设置用户及邮箱</h5><pre><code>$ git config --global user.name &quot;hotyan&quot;$ git config --global user.email &quot;hotyann@163.com&quot;</code></pre></li></ol><p><br></p><ol start="2"><li><h5 id="命令行查看全局设置"><a href="#命令行查看全局设置" class="headerlink" title="命令行查看全局设置"></a>命令行查看全局设置</h5><pre><code>$ git config  user.name #hotyan$ git config  user.email #hotyann@163.com</code></pre><p>补救措施只对以后的 commit 起效。（解决了修改邮箱后的绿色~）</p><p>如果想修改之前的作者信息(删除旧邮箱的前提下拯救之前的绿色),Github 给出了可靠的官方指南：<a href="https://help.github.com/articles/changing-author-info/" target="_blank" rel="noopener">Changing author info</a>。</p></li></ol><p><br></p><ol start="3"><li><h5 id="取消全局设置用户及邮箱"><a href="#取消全局设置用户及邮箱" class="headerlink" title="取消全局设置用户及邮箱"></a>取消全局设置用户及邮箱</h5><pre><code>$ git config --global --unset user.name $ git config --global --unset user.email </code></pre></li></ol><h2 id="修改密码后"><a href="#修改密码后" class="headerlink" title="修改密码后"></a>修改密码后</h2><p>博客push将失败,需要重新添加SSH。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修改邮箱后。。。-待完善&quot;&gt;&lt;a href=&quot;#修改邮箱后。。。-待完善&quot; class=&quot;headerlink&quot; title=&quot;修改邮箱后。。。 [待完善]&quot;&gt;&lt;/a&gt;修改邮箱后。。。 &lt;span style=&quot;font-size:.5em&quot;&gt;[待完善]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;有一天突然发现自己的提交记录变少了？？？？绿色少的可怜？？于是我就回想自己干了嘛！！！！&lt;br&gt;恩…前几天换了个邮箱…并且毫不犹豫的把旧邮箱删除了…&lt;/p&gt;&lt;p&gt;把旧邮箱重新添加回来,绿色也回来了！！！&lt;br&gt;但是我强迫症,不想把旧邮箱留着…&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="GitHub" scheme="https://hotkang.cn/categories/GitHub/"/>
    
    
  </entry>
  
  <entry>
    <title>基于GitHubIssue的评论功能</title>
    <link href="https://hotkang.cn/2018/%E5%9F%BA%E4%BA%8EGitHubIssue%E7%9A%84%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    <id>https://hotkang.cn/2018/基于GitHubIssue的评论功能/</id>
    <published>2018-07-19T11:45:13.000Z</published>
    <updated>2018-08-14T17:18:58.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加评论功能-完结"><a href="#添加评论功能-完结" class="headerlink" title="添加评论功能   [完结]"></a>添加评论功能 <span style="font-size:.5em">[完结]</span></h2><blockquote><p>可以手动添加issue，这样非常简单，但是如果文章越来越多，手动添加肯定不现实。因此可以写脚本来实现自动创建issue。由于本人并不想把别人的脚本直接搬过来，所以自动创建issue暂时被搁置…</p></blockquote><a id="more"></a><p><br><br><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="http://wingjay.com/2017/06/08/rebuild-personal-blog/" target="_blank" rel="noopener">参考链接1</a></li><li><a href="https://hydroecology.net/using-github-to-host-blog-comments/" target="_blank" rel="noopener">参考链接2</a></li><li><a href="http://ivanzuzak.info/2011/02/18/github-hosted-comments-for-github-hosted-blogs.html" target="_blank" rel="noopener">参考链接3</a></li></ul><p>参考链接1&amp;2都是参考的链接3,建议先看一遍链接3,了解大概流程后再细看每个链接。具体代码参考的链接1。</p></blockquote><p><br><br><br></p><h2 id="实现评论功能"><a href="#实现评论功能" class="headerlink" title="实现评论功能"></a>实现评论功能</h2><hr><ol><li><h5 id="手动创建Issue"><a href="#手动创建Issue" class="headerlink" title="手动创建Issue"></a>手动创建Issue</h5><blockquote><p>进入Github博客仓库</p></blockquote><blockquote><p>单击 <span id="inline-green">Issues</span></p></blockquote><blockquote><p>单击 <span id="inline-green">New issue</span></p></blockquote><blockquote><p>编辑Title、Leave a comment</p></blockquote><blockquote><p>单击 <span id="inline-green">Submit new issue</span>完成</p></blockquote><blockquote><p>获得 commentIssueId 值</p></blockquote></li></ol><p><br></p><ol start="2"><li><h5 id="文章添加commentIssueId字段"><a href="#文章添加commentIssueId字段" class="headerlink" title="文章添加commentIssueId字段"></a>文章添加commentIssueId字段</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我是置顶博文</span><br><span class="line">date: 2018-07-18 21:30:35</span><br><span class="line">tags: 留言板</span><br><span class="line">categories: hotYan_博客之路</span><br><span class="line">top: 100</span><br><span class="line">commentIssueId: 1    </span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="3"><li><h5 id="添加-github-comments-swig-文件"><a href="#添加-github-comments-swig-文件" class="headerlink" title="添加 github_comments.swig 文件"></a>添加 github_comments.swig 文件</h5><p>在/themes/next/layout/_partials文件下新添github_comments.swig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">/*内容如下*/</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;div id=&quot;comments&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;post-header bg-&#123;&#123;site.default_post_color&#125;&#125;&quot;&gt;</span><br><span class="line">            &lt;h1 &gt;留言区&lt;/h1&gt;</span><br><span class="line">            &lt;p&gt;本站留言区搭建在 Github Issue 上,请点击下面按钮进行留言。&lt;/p&gt;</span><br><span class="line">            &lt;hr/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        function loadComments(data) &#123;</span><br><span class="line">            var commentUrl = &quot;window.open(&apos;https://github.com/hotyan/hotyan.github.io/issues/&#123;&#123; page.commentIssueId &#125;&#125;&apos;)&quot;</span><br><span class="line">            $(&quot;#comments&quot;).append(&apos;&lt;div class=&quot;submit-comment&quot; style=&quot;text-align: center&quot;&gt;&lt;button onclick=&apos; + commentUrl + &apos; class=&quot;btn btn-primary&quot;&gt;留&amp;nbsp;言&lt;/button&gt;&lt;/div&gt;&apos;)</span><br><span class="line"></span><br><span class="line">            for (var i=0; i&lt;data.length; i++) &#123;</span><br><span class="line">                var cuser = data[i].user.login;</span><br><span class="line">                var cuserlink = data[i].user.html_url;</span><br><span class="line">                var avatarlink = data[i].user.avatar_url;</span><br><span class="line">                var clink = data[i].html_url;</span><br><span class="line">                var cbody = data[i].body_html;</span><br><span class="line">                var cavatarlink = data[i].user.avatar_url;      </span><br><span class="line">                var cdate = new Date(data[i].created_at);</span><br><span class="line">                var dopts = &#123; month: &apos;short&apos;, day: &apos;numeric&apos;, year: &apos;numeric&apos; &#125;</span><br><span class="line"></span><br><span class="line">                $(&quot;#comments&quot;).append(&apos;&lt;div class=&quot;timeline-comment-wrapper&quot;&gt;&lt;div class=&quot;avatar-parent-child timeline-comment-avatar&quot;&gt;&lt;a href=&quot;&apos; + cuserlink +&apos;&quot;&gt;&lt;img width=&quot;44&quot; height=&quot;44&quot; class=&quot;avatar rounded-1&quot; src=&quot;&apos; + avatarlink + &apos;&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;timeline-comment current-user&quot;&gt;&lt;div class=&quot;timeline-comment-header&quot;&gt;&lt;h3 class=&quot;timeline-comment-header-text text-normal f5&quot;&gt;&lt;strong&gt;&apos; + cuser + &apos;&lt;/strong&gt;&lt;span class=&quot;post-meta&quot;&gt;&apos; + cdate.toLocaleDateString(&quot;en&quot;, dopts) + &apos;&lt;/span&gt;&lt;/h3&gt;&lt;/div&gt;&lt;div style=&quot;display: block !important; padding: 15px;&quot;&gt;&lt;article class=&quot;post-content&quot;&gt;&apos; + cbody + &apos;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $.ajax(&quot;https://api.github.com/repos/hotyan/hotyan.github.io/issues/&#123;&#123; page.commentIssueId &#125;&#125;/comments&quot;, &#123;</span><br><span class="line">            headers: &#123;Accept: &quot;application/vnd.github.v3.html+json&quot;&#125;,</span><br><span class="line">            dataType: &quot;json&quot;,</span><br><span class="line">            success: function(msg)&#123;</span><br><span class="line">                console.log(msg);</span><br><span class="line">                loadComments(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    .timeline-comment-wrapper &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">        position: relative;</span><br><span class="line">        padding-left: 60px;</span><br><span class="line">        margin-top: 15px;</span><br><span class="line">        margin-bottom: 15px;</span><br><span class="line">        border-top: 2px solid #fff;</span><br><span class="line">        border-bottom: 2px solid #fff;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-avatar &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -60px;</span><br><span class="line">        border-radius: 3px;</span><br><span class="line">    &#125;</span><br><span class="line">    .avatar-parent-child &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-wrapper a &#123;</span><br><span class="line">        color: #0366d6;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">        background-color: transparent;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-wrapper .avatar &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        border-radius: 3px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-wrapper .rounded-1 &#123;</span><br><span class="line">        border-radius: 3px !important;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment.current-user &#123;</span><br><span class="line">        border-color: #c0d3eb;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        background-color: #fff;</span><br><span class="line">        border: 1px solid #d1d5da;</span><br><span class="line">        border-radius: 3px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment.current-user .timeline-comment-header &#123;</span><br><span class="line">        background-color: #f1f8ff;</span><br><span class="line">        border-bottom-color: #c0d3eb;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-header &#123;</span><br><span class="line">        padding-right: 15px;</span><br><span class="line">        padding-left: 15px;</span><br><span class="line">        color: #586069;</span><br><span class="line">        background-color: #f6f8fa;</span><br><span class="line">        border-bottom: 1px solid #d1d5da;</span><br><span class="line">        border-top-left-radius: 3px;</span><br><span class="line">        border-top-right-radius: 3px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-header-text &#123;</span><br><span class="line">        padding-top: 10px;</span><br><span class="line">        padding-bottom: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-header h3 &#123;</span><br><span class="line">        margin-top: 0px;</span><br><span class="line">        margin-bottom: 0px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment-header-text .post-meta &#123;</span><br><span class="line">        margin-left: 6px;</span><br><span class="line">    &#125;</span><br><span class="line">    .timeline-comment article p &#123;</span><br><span class="line">        margin: 0px;</span><br><span class="line">    &#125;</span><br><span class="line">    .text-normal &#123;</span><br><span class="line">        font-weight: normal !important;</span><br><span class="line">    &#125;</span><br><span class="line">    .f5 &#123;</span><br><span class="line">        font-size: 14px !important;</span><br><span class="line">    &#125;</span><br><span class="line">    .submit-comment .btn &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        padding: 6px 12px;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        font-weight: 600;</span><br><span class="line">        line-height: 20px;</span><br><span class="line">        white-space: nowrap;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">        -webkit-user-select: none;</span><br><span class="line">        -moz-user-select: none;</span><br><span class="line">        -ms-user-select: none;</span><br><span class="line">        user-select: none;</span><br><span class="line">        background-repeat: repeat-x;</span><br><span class="line">        background-position: -1px -1px;</span><br><span class="line">        background-size: 110% 110%;</span><br><span class="line">        border: 1px solid rgba(27,31,35,0.2);</span><br><span class="line">        border-radius: 0.25em;</span><br><span class="line">        -webkit-appearance: none;</span><br><span class="line">        -moz-appearance: none;</span><br><span class="line">        appearance: none;</span><br><span class="line">    &#125;</span><br><span class="line">    .submit-comment .btn-primary &#123;</span><br><span class="line">        color: #fff;</span><br><span class="line">        background-color: #28a745;</span><br><span class="line">        background-image: -webkit-linear-gradient(270deg, #34d058 0%, #28a745 90%);</span><br><span class="line">        background-image: linear-gradient(-180deg, #34d058 0%, #28a745 90%);</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="4"><li><h5 id="修改-themes-next-layout-macro-post-swig"><a href="#修改-themes-next-layout-macro-post-swig" class="headerlink" title="修改/themes/next/layout/_macro/post.swig"></a>修改/themes/next/layout/_macro/post.swig</h5><p>在文件最后<code>&lt;/footer&gt;</code>前引入github_comments.swig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer class=&quot;post-footer&quot;&gt;</span><br><span class="line">    ...</span><br><span class="line">    &#123;% if page.commentIssueId %&#125;</span><br><span class="line">        &#123;% include &apos;../_partials/github_comments.swig&apos; %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="5"><li><h5 id="修改-themes-next-layout-partials-head-swig"><a href="#修改-themes-next-layout-partials-head-swig" class="headerlink" title="修改/themes/next/layout/_partials/head.swig"></a>修改/themes/next/layout/_partials/head.swig</h5><p>文件最后引入JQuery</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.commentIssueId %&#125;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ol><p><br><br><br></p><h2 id="总有一个适合你"><a href="#总有一个适合你" class="headerlink" title="总有一个适合你"></a>总有一个适合你</h2><hr><h3 id="选择真的太多了-先大概了解一下有哪些"><a href="#选择真的太多了-先大概了解一下有哪些" class="headerlink" title="选择真的太多了,先大概了解一下有哪些"></a>选择真的太多了,先大概了解一下有哪些</h3><ol><li><p>hexo已提供的选择</p><pre><code># Duoshuo ShortName  //多说...# Disqus ...# Hypercomments ...# changyan  //畅言...# Valine...#youyan_uid //友言...#livere_uid...# Gitment </code></pre></li></ol><p><br></p><ol start="2"><li><p>其他选择</p><p>网易云跟帖<br>来必力<br>Gitalk<br>Gitter<br>…</p></li></ol><p><a href="https://blog.shuiba.co/comment-systems-recommendation" target="_blank" rel="noopener">了解各种评论系统的利弊和效果预览&gt;&gt;</a></p><p><strong>But</strong>上面提到的个人都不太钟意~</p><p>一直在寻找!直到发现了<a href="http://wingjay.com/2017/06/08/rebuild-personal-blog/" target="_blank" rel="noopener"><strong>他</strong></a>！！是自己想要的效果！！</p><p><br><br><br></p><h2 id="独立Comments板块"><a href="#独立Comments板块" class="headerlink" title="独立Comments板块"></a>独立Comments板块</h2><hr><p>因为我的blog有背景图片，个人比较喜欢独立出来的效果，花了点时间满足自己的强迫症，<del>是自己瞎捉摸出来的</del>,不是唯一的办法。</p><ol><li><h5 id="修改-themes-next-layout-macro-post-swig-1"><a href="#修改-themes-next-layout-macro-post-swig-1" class="headerlink" title="修改/themes/next/layout/_macro/post.swig"></a>修改/themes/next/layout/_macro/post.swig</h5><p>删除之前引入github_comments.swig文件的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*删除*/</span><br><span class="line">&#123;% if page.commentIssueId %&#125;</span><br><span class="line">&#123;% include &apos;../_partials/github_comments.swig&apos; %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">/*删除结束*/</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="2"><li><h5 id="新建GitHub-Issue-swig"><a href="#新建GitHub-Issue-swig" class="headerlink" title="新建GitHub_Issue.swig"></a>新建GitHub_Issue.swig</h5><p>在/themes/next/layout/_partials文件下新建GitHub_Issue.swig,并加入下面代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.commentIssueId %&#125;</span><br><span class="line">    &#123;% include &apos;../_partials/github_comments.swig&apos; %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="3"><li><h5 id="修改-themes-next-layout-post-swig"><a href="#修改-themes-next-layout-post-swig" class="headerlink" title="修改/themes/next/layout/post.swig"></a>修改/themes/next/layout/post.swig</h5><p>在<span id="inline-green">block content</span>最后 <span id="inline-green">endblock</span> 之前引入GitHub_Issue.swig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">...</span><br><span class="line">    &#123;% include &apos;_partials/GitHub_Issue.swig&apos; %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="4"><li><h5 id="修改-themes-next-source-css-custom-custom-styl"><a href="#修改-themes-next-source-css-custom-custom-styl" class="headerlink" title="修改/themes/next/source/css/_custom/custom.styl"></a>修改/themes/next/source/css/_custom/custom.styl</h5>添加代码如下:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#comments&#123;</span><br><span class="line">    margin-top:20px;</span><br><span class="line">    padding: 40px;</span><br><span class="line">    background: white;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="5"><li><h5 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h5><img src="/img/Comments.png" alt=""></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加评论功能-完结&quot;&gt;&lt;a href=&quot;#添加评论功能-完结&quot; class=&quot;headerlink&quot; title=&quot;添加评论功能   [完结]&quot;&gt;&lt;/a&gt;添加评论功能 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;可以手动添加issue，这样非常简单，但是如果文章越来越多，手动添加肯定不现实。因此可以写脚本来实现自动创建issue。由于本人并不想把别人的脚本直接搬过来，所以自动创建issue暂时被搁置…&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hotYan_博客之路" scheme="https://hotkang.cn/categories/hotYan-%E5%8D%9A%E5%AE%A2%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="Hexo" scheme="https://hotkang.cn/tags/Hexo/"/>
    
      <category term="博客" scheme="https://hotkang.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="GitHub Issue" scheme="https://hotkang.cn/tags/GitHub-Issue/"/>
    
      <category term="Next" scheme="https://hotkang.cn/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Github添加SSH密钥</title>
    <link href="https://hotkang.cn/2018/Github%E6%B7%BB%E5%8A%A0SSH%E5%AF%86%E9%92%A5/"/>
    <id>https://hotkang.cn/2018/Github添加SSH密钥/</id>
    <published>2018-07-18T13:33:55.000Z</published>
    <updated>2018-08-03T10:00:23.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加SSH密钥-完结"><a href="#添加SSH密钥-完结" class="headerlink" title="添加SSH密钥 [完结]"></a>添加SSH密钥 <span style="font-size:.5em">[完结]</span></h2><a id="more"></a><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="noopener">GitHub Help</a></li><li><a href="http://www.cnblogs.com/ayseeing/p/3572582.html" target="_blank" rel="noopener">参考连接</a></li></ul><p>参考链接有整体的流程总结。跟着步骤来没有问题。但我会觉得GitHub Help比较官方？权威？</p></blockquote><hr><h2 id="一、查看现有的SSH密钥"><a href="#一、查看现有的SSH密钥" class="headerlink" title="一、查看现有的SSH密钥"></a>一、查看现有的SSH密钥</h2><pre><code>$ ls -al ~/.ssh</code></pre><p><br></p><h2 id="二、生成新SSH密钥"><a href="#二、生成新SSH密钥" class="headerlink" title="二、生成新SSH密钥"></a>二、生成新SSH密钥</h2><ol><li><h5 id="根据实际情况填写GitHub电子邮件地址"><a href="#根据实际情况填写GitHub电子邮件地址" class="headerlink" title="根据实际情况填写GitHub电子邮件地址"></a>根据实际情况填写GitHub电子邮件地址</h5><pre><code>$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; </code></pre></li><li><h5 id="文件生成位置"><a href="#文件生成位置" class="headerlink" title="文件生成位置"></a>文件生成位置</h5><pre><code>Enter file in which to save the key (/Users/hotkang/.ssh/id_rsa): [Press enter]  /*按回车默认文件位置*/</code></pre></li><li><h5 id="设置push密码"><a href="#设置push密码" class="headerlink" title="设置push密码"></a>设置push密码</h5><pre><code>Enter passphrase (empty for no passphrase):Enter same passphrase again: /*设置push文件时的密码,回车默认没有密码*/</code></pre></li></ol><p><br></p><h2 id="三、添加密钥到GitHub"><a href="#三、添加密钥到GitHub" class="headerlink" title="三、添加密钥到GitHub"></a>三、添加密钥到GitHub</h2><ol><li><h5 id="打开-ssh-id-rsa-pub-文件-将内容复制到剪贴板"><a href="#打开-ssh-id-rsa-pub-文件-将内容复制到剪贴板" class="headerlink" title="打开 /.ssh/id_rsa.pub 文件,将内容复制到剪贴板"></a>打开 /.ssh/id_rsa.pub 文件,将内容复制到剪贴板</h5></li><li><h5 id="单击右上角头像"><a href="#单击右上角头像" class="headerlink" title="单击右上角头像"></a>单击右上角头像</h5></li><li><h5 id="单击-Settings"><a href="#单击-Settings" class="headerlink" title="单击 Settings "></a>单击 <span id="inline-green">Settings</span></h5></li><li><h5 id="单击-SSH-and-GPG-keys"><a href="#单击-SSH-and-GPG-keys" class="headerlink" title="单击 SSH and GPG keys  "></a>单击 <span id="inline-green">SSH and GPG keys</span></h5></li><li><h5 id="单击-New-SSH-Key"><a href="#单击-New-SSH-Key" class="headerlink" title="单击 New SSH Key"></a>单击 <span id="inline-green">New SSH Key</span></h5></li><li><h5 id="填写Title并将-ssh-id-rsa-pub文件内容粘贴到Key"><a href="#填写Title并将-ssh-id-rsa-pub文件内容粘贴到Key" class="headerlink" title="填写Title并将/.ssh/id_rsa.pub文件内容粘贴到Key"></a>填写<span id="inline-green">Title</span>并将/.ssh/id_rsa.pub文件内容粘贴到<span id="inline-green">Key</span></h5></li><li><h5 id="单击Add-SSH-Key完成"><a href="#单击Add-SSH-Key完成" class="headerlink" title="单击Add SSH Key完成"></a>单击<span id="inline-green">Add SSH Key</span>完成</h5></li><li><h5 id="如果出现提示-请确认你的GitHub密码"><a href="#如果出现提示-请确认你的GitHub密码" class="headerlink" title="如果出现提示,请确认你的GitHub密码"></a>如果出现提示,请确认你的GitHub密码</h5></li></ol><p><br></p><h2 id="四、测试SSH连接"><a href="#四、测试SSH连接" class="headerlink" title="四、测试SSH连接"></a>四、测试SSH连接</h2><pre><code>$ ssh -T git@github.com</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加SSH密钥-完结&quot;&gt;&lt;a href=&quot;#添加SSH密钥-完结&quot; class=&quot;headerlink&quot; title=&quot;添加SSH密钥 [完结]&quot;&gt;&lt;/a&gt;添加SSH密钥 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;
    
    </summary>
    
      <category term="GitHub" scheme="https://hotkang.cn/categories/GitHub/"/>
    
    
      <category term="SSH" scheme="https://hotkang.cn/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>我是置顶博文</title>
    <link href="https://hotkang.cn/2018/%E6%88%91%E6%98%AF%E7%BD%AE%E9%A1%B6%E5%8D%9A%E6%96%87/"/>
    <id>https://hotkang.cn/2018/我是置顶博文/</id>
    <published>2018-07-18T13:30:35.000Z</published>
    <updated>2018-08-12T05:39:11.889Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><h2 id="❤️About-Blog"><a href="#❤️About-Blog" class="headerlink" title="❤️About Blog"></a>❤️About Blog</h2><p><br></p><p><strong>作为学习过程的记录总结。</strong></p><p><del><strong>目前没有SEO优化,博客文章也不会被百度、Google搜索引擎收录。</strong></del></p><p><del><strong>如果这都被你发现了❓❓留下你的脚印❓❓</strong></del></p><p><strong>❤已Google SEO优化❤</strong></p><p><strong>来了还是冒个泡❓</strong>🐟🐟</p><p></p><p><br></p></blockquote><a id="more"></a><p><br><br><br></p><h2 id="❤️About-Link"><a href="#❤️About-Link" class="headerlink" title="❤️About Link"></a>❤️About Link</h2><hr><p><strong>本站的参考链接都是自己过滤后的,可能来自各大官网文档、Others’s Blog、简书、掘金、社区或者外网。如果涉及到外网链接打不开也没有关系,可以参考我的文章。</strong></p><p><br><br><br></p><h2 id="❤️About-Post"><a href="#❤️About-Post" class="headerlink" title="❤️About Post"></a>❤️About Post</h2><hr><p><strong>本站文章主要由【 <del>优质</del> 参考文章】和【个人记录总结】构成; 网上资源玲琅满目,如果每个人都一篇篇筛选,浪费时间走弯路; 记录自己 <del>踩坑</del> 完成过程并在参考文章的基础上进行个人总结。</strong></p><p><br><br><br></p><h2 id="❤️About-Comments"><a href="#❤️About-Comments" class="headerlink" title="❤️About Comments"></a>❤️About Comments</h2><hr><p><strong>本站唯一的评论搭建在GitHub Issue上,点击<span id="inline-purple">Comment</span>跳转到博客文章对应的 Github issue 处,在 issue 下进行评论,文章展示时会实时获取数据。还在等什么❓❓【<a href="https://hotkang.cn/2018/%E6%88%91%E6%98%AF%E7%BD%AE%E9%A1%B6%E5%8D%9A%E6%96%87/#comments">测试</a>】一下❓❓</strong></p><p><br><br><br></p><h2 id="❤️Problem"><a href="#❤️Problem" class="headerlink" title="❤️Problem"></a>❤️Problem</h2><hr><p><strong><del>手动生成Issue,<a href="https://hotkang.cn/%E5%9F%BA%E4%BA%8EGitHubIssue%E7%9A%84%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD">实现评论功能</a></del></strong></p><p><strong><del>文章详情界面点击不出现桃心,理论上应该是有效果的吧❓❓<a href="https://hotkang.cn/%E7%94%A8hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E4%BA%8C/#%E5%8D%81%E4%B8%89%E3%80%81%E7%82%B9%E5%87%BB%E5%87%BA%E7%8E%B0%E6%A1%83%E5%BF%83">可能源码被我改砸了❓❓</a></del></strong> 💔</p><p><strong><del>Gulp压缩不成功❓❓已用<a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier</a>替代</del></strong></p><p><strong>刷新一次不蒜子PV统计加2 ❓❓理论上加1才对</strong></p><p><strong><del>文章目录<a href="https://hotkang.cn/2018/05/29/%E7%94%A8hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E4%BA%8C/#%E5%8D%81%E5%9B%9B%E3%80%81%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">只显示大标题</a>❓❓</del></strong></p><p><strong>自动生成Issue❓❓</strong></p><p><br><br><br></p><h3 id="博客文章预览-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-About-Me"><a href="#博客文章预览-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-About-Me" class="headerlink" title="博客文章预览&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;About Me"></a><a href="https://hotkang.cn/archives/"><span id="inline-blue">博客文章预览</span></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://hotkang.cn/about/"><span id="inline-green">About Me</span></a></h3>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;h2 id=&quot;❤️About-Blog&quot;&gt;&lt;a href=&quot;#❤️About-Blog&quot; class=&quot;headerlink&quot; title=&quot;❤️About Blog&quot;&gt;&lt;/a&gt;❤️About Blog&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;作为学习过程的记录总结。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;del&gt;&lt;strong&gt;目前没有SEO优化,博客文章也不会被百度、Google搜索引擎收录。&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;&lt;p&gt;&lt;del&gt;&lt;strong&gt;如果这都被你发现了❓❓留下你的脚印❓❓&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;❤已Google SEO优化❤&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;来了还是冒个泡❓&lt;/strong&gt;🐟🐟&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hotYan_博客之路" scheme="https://hotkang.cn/categories/hotYan-%E5%8D%9A%E5%AE%A2%E4%B9%8B%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>在GitHub Pages上部署自己的简历</title>
    <link href="https://hotkang.cn/2018/%E5%9C%A8GitHub-Pages%E4%B8%8A%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AE%80%E5%8E%86/"/>
    <id>https://hotkang.cn/2018/在GitHub-Pages上部署自己的简历/</id>
    <published>2018-06-28T09:11:27.000Z</published>
    <updated>2018-08-03T10:55:00.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GitHub-Pages-完结"><a href="#GitHub-Pages-完结" class="headerlink" title="GitHub Pages [完结]"></a>GitHub Pages <span style="font-size:.5em">[完结]</span></h2><blockquote><p>包含个人隐私信息(电话、照片)的简历不建议贴在网上哦~</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a></li></ul><p>看了很多教程,发现官网是说的最简洁明了又清楚的,最终解决了我的问题。建议打开<a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>,两边参考着看更简单易懂。</p></blockquote><hr><h2 id="一、什么是GitHub-Pages"><a href="#一、什么是GitHub-Pages" class="headerlink" title="一、什么是GitHub Pages"></a>一、什么是GitHub Pages</h2><ol><li><p>GitHub Pages是一个静态站点托管服务,旨在直接从GitHub存储库托管我们的个人,组织或项目页面。不支持服务器端代码，例如PHP，Ruby或Python。</p></li><li><p>我们可以使用Jekyll Theme Chooser在线创建和发布GitHub Pages网站。我们也可以在本地工作，使用【GitHub Desktop】或【命令行】。</p></li></ol><blockquote><p>注意:</p><ol><li><p><strong><a href="https://desktop.github.com/" target="_blank" rel="noopener">GitHub Desktop</a></strong>:一个上传项目到github的软件。不想用命令行的不二选择。</p></li><li><p><strong><a href="https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/" target="_blank" rel="noopener">命令行</a></strong>:指使用git命令上传项目</p></li></ol><p>PS:不会命令行没关系，谁敢说自己连一个软件都不会用呀？</p></blockquote><p><br></p><h2 id="二、GitHub-Pages-提供什么"><a href="#二、GitHub-Pages-提供什么" class="headerlink" title="二、GitHub Pages 提供什么"></a>二、GitHub Pages 提供什么</h2><p>在官网上有这样一句话:</p><pre><code>You get one site per GitHub account and organization,and unlimited project sites. </code></pre><p>意思是:</p><pre><code>GitHub Pages为每个GitHub帐户/组织提供一个【站点】,以及无限制的【项目站点】。</code></pre><blockquote><p>注意:</p><ol><li><p>我们只能有一个【<code>User or organization site</code>】;但是我们可以有很多【<code>Project site</code>】。</p></li><li><p>部署简历用【<code>User or organization site</code>】简直是大材小用,用【<code>Project site</code>】就可以了。</p></li><li><p>【<code>User or organization site</code>】可以拿来部署个人博客,点击<a href="https://hotyan.github.io/categories/hotYan-%E5%8D%9A%E5%AE%A2%E4%B9%8B%E8%B7%AF/" target="_blank" rel="noopener">用hexo搭建github博客</a>了解如何搭建个人博客。</p></li></ol></blockquote><p><br></p><h2 id="三、准备工作"><a href="#三、准备工作" class="headerlink" title="三、准备工作"></a>三、准备工作</h2><ol><li><h5 id="默认已有GitHub账号-并已创建好存储库或会创建存储库。"><a href="#默认已有GitHub账号-并已创建好存储库或会创建存储库。" class="headerlink" title="默认已有GitHub账号,并已创建好存储库或会创建存储库。"></a>默认已有GitHub账号,并已创建好存储库或会创建存储库。</h5><ul><li><p>没有<code>GitHub</code>账号？？<a href="https://github.com/" target="_blank" rel="noopener">点击注册</a></p></li><li><p>没有存储库？？<a href="https://help.github.com/articles/creating-a-new-repository/" target="_blank" rel="noopener">了解如何创建</a></p></li></ul></li><li><h5 id="默认已有html简历-命名为-index-html"><a href="#默认已有html简历-命名为-index-html" class="headerlink" title="默认已有html简历,命名为 index.html"></a>默认已有html简历,命名为 index.html</h5><ul><li>没有简历？？<a href="http://cv.qiaobutang.com/" target="_blank" rel="noopener">制作并下载</a></li></ul></li></ol><p><br></p><h2 id="四、简历部署"><a href="#四、简历部署" class="headerlink" title="四、简历部署"></a>四、简历部署</h2><ol><li><h5 id="创建新存储库"><a href="#创建新存储库" class="headerlink" title="创建新存储库"></a>创建新存储库</h5><ul><li><p>点击右上角 <strong>+</strong> 选择 <strong><code>New repository</code></strong></p></li><li><p>填写 <strong><code>Repository name</code></strong> 并勾选 <strong><code>Initialize this repository with a README</code></strong></p></li><li>点击 <strong><code>Create repository</code></strong> 完成创建</li></ul></li><li><h5 id="上传简历"><a href="#上传简历" class="headerlink" title="上传简历"></a>上传简历</h5><ul><li><p>在新建的存储库点击 <strong><code>Upload files</code></strong></p></li><li><p>点击 <strong><code>choose your files</code></strong> 上传你的 <strong><code>index.html</code></strong> 文件</p></li><li>点击 <strong><code>Commit changes</code></strong> 完成上传</li></ul></li><li><h5 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h5><ul><li><p>点击 <strong><code>Settings</code></strong> 下滑到 <strong><code>GitHub Pages</code></strong> 部分</p></li><li><p>修改 <strong><code>Source</code></strong> 为 <strong><code>master branch</code></strong> 并点击 <strong><code>Save</code></strong></p></li><li>再次下滑到 <strong><code>GitHub Pages</code></strong> 部分就会看到一个链接</li></ul></li><li><h5 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h5><ul><li><p>如果不成功,再次修改 <strong><code>Source</code></strong> 为 <strong><code>master branch</code></strong> 并点击 <strong><code>Save</code></strong></p></li><li><p>点击链接就可以看到部署的简历</p></li><li><p>将简历链接写在你的<code>README.md</code>或者任何地方</p></li></ul></li></ol><p><br></p><h2 id="五、创建【User-or-organization-site】"><a href="#五、创建【User-or-organization-site】" class="headerlink" title="五、创建【User or organization site】"></a>五、创建【User or organization site】</h2><p>跟创建一般存储库流程一样,只是因为我们每个用户只有一个【<code>User or organization site</code>】,所以存储库的名称比较唯一,必须是<strong><code>username.github.io</code></strong> 格式,其中<code>username</code>是我们在<code>GitHub</code>上的用户名或组织名称</p><p>如果不正确则不起作用，因此请确保正确无误。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GitHub-Pages-完结&quot;&gt;&lt;a href=&quot;#GitHub-Pages-完结&quot; class=&quot;headerlink&quot; title=&quot;GitHub Pages [完结]&quot;&gt;&lt;/a&gt;GitHub Pages &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;包含个人隐私信息(电话、照片)的简历不建议贴在网上哦~&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="GitHub" scheme="https://hotkang.cn/categories/GitHub/"/>
    
    
      <category term="GitHub Pages" scheme="https://hotkang.cn/tags/GitHub-Pages/"/>
    
      <category term="简历" scheme="https://hotkang.cn/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>CSS_属性继承</title>
    <link href="https://hotkang.cn/2018/CSS-%E5%B1%9E%E6%80%A7%E7%BB%A7%E6%89%BF/"/>
    <id>https://hotkang.cn/2018/CSS-属性继承/</id>
    <published>2018-06-21T10:29:02.000Z</published>
    <updated>2018-08-18T17:34:10.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS-属性继承-待完善"><a href="#CSS-属性继承-待完善" class="headerlink" title="CSS_属性继承 [待完善]"></a>CSS_属性继承 <span style="font-size:.5em">[待完善]</span></h2><blockquote><p>哪些属性可继承？？呃。。。往下看。</p></blockquote><a id="more"></a><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://www.cnblogs.com/thislbq/p/5882105.html" target="_blank" rel="noopener">参考链接</a></li><li><a href="http://www.runoob.com/cssref/css-reference.html" target="_blank" rel="noopener">CSS 参考手册</a></li><li><a href="https://www.w3schools.com/cssref/css3_pr_align-content.asp" target="_blank" rel="noopener">CSS Properties</a></li></ul></blockquote><hr><h2 id="一、无继承性的属性"><a href="#一、无继承性的属性" class="headerlink" title="一、无继承性的属性"></a>一、<strong>无继承性</strong>的属性</h2><h3 id="1-display"><a href="#1-display" class="headerlink" title="1. display"></a>1. display</h3><p>定义元素生成的框的类型,下面是常用的属性值:</p><table><thead><tr><th style="text-align:center">display值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">inherit</td><td style="text-align:left">继承父元素 display 属性的值</td></tr><tr><td style="text-align:center"><strong>none</strong></td><td style="text-align:left">不会被显示</td></tr><tr><td style="text-align:center"><strong>block</strong></td><td style="text-align:left">块级元素，前后会带有换行符</td></tr><tr><td style="text-align:center"><strong>inline</strong></td><td style="text-align:left">默认。内联元素，前后没有换行符</td></tr><tr><td style="text-align:center"><strong>inline-block</strong></td><td style="text-align:left">行内块元素</td></tr></tbody></table><h3 id="2-文本属性-部分属性无继承性"><a href="#2-文本属性-部分属性无继承性" class="headerlink" title="2. 文本属性[部分属性无继承性]"></a>2. 文本属性[部分属性无继承性]</h3><table><thead><tr><th style="text-align:center">文本属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">vertical-align</td><td style="text-align:left">垂直文本对齐</td></tr><tr><td style="text-align:center">text-decoration</td><td style="text-align:left">规定添加到文本的装饰</td></tr><tr><td style="text-align:center">text-shadow</td><td style="text-align:left">文本阴影效果</td></tr><tr><td style="text-align:center">white-space</td><td style="text-align:left">空白符的处理</td></tr><tr><td style="text-align:center">unicode-bidi</td><td style="text-align:left">设置文本的方向</td></tr></tbody></table><p></p><h3 id="3-盒子模型"><a href="#3-盒子模型" class="headerlink" title="3.盒子模型"></a>3.盒子模型</h3><table><thead><tr><th style="text-align:center">盒子模型属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">width/height</td><td style="text-align:left">宽/高</td></tr><tr><td style="text-align:center">margin: top right bottom left</td><td style="text-align:left">[上右下左]外边距</td></tr><tr><td style="text-align:center">padding: top right bottom left</td><td style="text-align:left">[上右下左]内边距</td></tr><tr><td style="text-align:center">border: top right bottom left</td><td style="text-align:left">[上右下左]边框</td></tr><tr><td style="text-align:center">border-[top/right/bottom/left]-style</td><td style="text-align:left">边框[上右下左]样式</td></tr><tr><td style="text-align:center">border-[top/right/bottom/left]-width</td><td style="text-align:left">边框[上右下左]宽度</td></tr><tr><td style="text-align:center">border-[top/right/bottom/left]-color</td><td style="text-align:left">边框[上右下左]颜色</td></tr></tbody></table><h3 id="4-背景属性-均无继承性"><a href="#4-背景属性-均无继承性" class="headerlink" title="4.背景属性[均无继承性]"></a>4.背景属性[均无继承性]</h3><table><thead><tr><th style="text-align:center">背景属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">background</td><td style="text-align:left">[颜色/图片/位置/大小/重复/原点/素材/附件]</td></tr><tr><td style="text-align:center">background-color</td><td style="text-align:left">颜色</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:left">图片</td></tr><tr><td style="text-align:center">background-position</td><td style="text-align:left">位置</td></tr><tr><td style="text-align:center">background-size</td><td style="text-align:left">大小</td></tr><tr><td style="text-align:center">background-repeat</td><td style="text-align:left">重复</td></tr><tr><td style="text-align:center">background-origin</td><td style="text-align:left">指定原点位置</td></tr><tr><td style="text-align:center">background-clip</td><td style="text-align:left">背景(颜色或图像)应在元素内延伸的距离</td></tr><tr><td style="text-align:center">background-attachment</td><td style="text-align:left">背景图像是否与页面的其余部分一起滚动,或者是否已修复。</td></tr></tbody></table><h3 id="5-定位属性"><a href="#5-定位属性" class="headerlink" title="5.定位属性"></a>5.定位属性</h3><table><thead><tr><th style="text-align:center">定位属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">float</td><td style="text-align:left">指定元素应该如何浮动</td></tr><tr><td style="text-align:center">clear</td><td style="text-align:left">指定元素浮动元素的哪些边不允许浮动</td></tr><tr><td style="text-align:center">position</td><td style="text-align:left">指定用于元素的定位方法的类型(static/relative/absolute/fixed/sticky)</td></tr><tr><td style="text-align:center">top/bottom</td><td style="text-align:left">影响定位元素的垂直位置</td></tr><tr><td style="text-align:center">left/right</td><td style="text-align:left">影响定位元素的水平位置</td></tr><tr><td style="text-align:center">min-[width/height]</td><td style="text-align:left">定义了元素的最小宽度/高度</td></tr><tr><td style="text-align:center">max-[width/height]</td><td style="text-align:left">定义了元素的最大宽度/高度</td></tr><tr><td style="text-align:center">overflow</td><td style="text-align:left">溢出</td></tr><tr><td style="text-align:center">clip</td><td style="text-align:left">指定一个矩形来剪切绝对定位的元素</td></tr><tr><td style="text-align:center">z-index</td><td style="text-align:left">指定元素的堆栈顺序</td></tr></tbody></table><h3 id="6-生成内容属性"><a href="#6-生成内容属性" class="headerlink" title="6.生成内容属性"></a>6.生成内容属性</h3><table><thead><tr><th style="text-align:center">内容属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">content</td><td style="text-align:left">::before和::after伪元素一起使用,以插入生成的内容</td></tr><tr><td style="text-align:center">counter-reset</td><td style="text-align:left">创建或重置一个或多个CSS计数器</td></tr><tr><td style="text-align:center">counter-increment</td><td style="text-align:left">增加或减少一个或多个CSS计数器的值</td></tr></tbody></table><h3 id="7-轮廓属性"><a href="#7-轮廓属性" class="headerlink" title="7.轮廓属性"></a>7.轮廓属性</h3><table><thead><tr><th style="text-align:center">内容属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">outline</td><td style="text-align:left">轮廓[宽度/*样式/颜色]</td></tr><tr><td style="text-align:center">outline-style</td><td style="text-align:left">样式</td></tr><tr><td style="text-align:center">outline-width</td><td style="text-align:left">宽度</td></tr><tr><td style="text-align:center">outline-color</td><td style="text-align:left">颜色</td></tr></tbody></table><h3 id="8-打印属性"><a href="#8-打印属性" class="headerlink" title="8.打印属性"></a>8.打印属性</h3><table><thead><tr><th style="text-align:center">内容属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">size</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">page-break-before</td><td style="text-align:left">元素之前添加分页符</td></tr><tr><td style="text-align:center">page-break-after</td><td style="text-align:left">元素后添加分页符</td></tr><tr><td style="text-align:center">page-break-inside</td><td style="text-align:left">指定元素内避免分页符</td></tr></tbody></table><h3 id="9-声音样式属性"><a href="#9-声音样式属性" class="headerlink" title="9.声音样式属性"></a>9.声音样式属性</h3><table><thead><tr><th style="text-align:center">内容属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">pause-before</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">pause-after</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">pause</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">cue-before</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">cue-after</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">cue</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">play-during</td><td style="text-align:left"></td></tr></tbody></table><h2 id="二、有继承性的属性"><a href="#二、有继承性的属性" class="headerlink" title="二、有继承性的属性"></a>二、<strong>有继承性</strong>的属性</h2><h3 id="1-字体系列属性-均继承"><a href="#1-字体系列属性-均继承" class="headerlink" title="1.字体系列属性[均继承]"></a>1.字体系列属性[均继承]</h3><table><thead><tr><th style="text-align:center">字体属性</th><th style="text-align:left"> 描述</th></tr></thead><tbody><tr><td style="text-align:center">font</td><td style="text-align:left">[*size/* family/weight/style]</td></tr><tr><td style="text-align:center">font-style</td><td style="text-align:left">样式</td></tr><tr><td style="text-align:center">font-variant</td><td style="text-align:left">变形</td></tr><tr><td style="text-align:center">font-weight</td><td style="text-align:left">粗细</td></tr><tr><td style="text-align:center">font-size/line-height</td><td style="text-align:left">尺寸</td></tr><tr><td style="text-align:center">font-family</td><td style="text-align:left">字体系列</td></tr><tr><td style="text-align:center">font-stretch</td><td style="text-align:left">对字体进行伸缩变形</td></tr><tr><td style="text-align:center">font-size-adjust</td><td style="text-align:left">更好地控制字体大小。</td></tr></tbody></table><h3 id="2-文本属性-部分继承"><a href="#2-文本属性-部分继承" class="headerlink" title="2. 文本属性[部分继承]"></a>2. 文本属性[部分继承]</h3><table><thead><tr><th style="text-align:center">文本属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">text-indent</td><td style="text-align:left">文本缩进</td></tr><tr><td style="text-align:center">text-align</td><td style="text-align:left">文本水平对齐</td></tr><tr><td style="text-align:center">line-height</td><td style="text-align:left">行高</td></tr><tr><td style="text-align:center">word-spacing</td><td style="text-align:left">增加或减少<strong>单词间</strong>的空白（即字间隔）</td></tr><tr><td style="text-align:center">letter-spacing</td><td style="text-align:left">增加或减少<strong>字符间</strong>的空白（字符间距）</td></tr><tr><td style="text-align:center">text-transform</td><td style="text-align:left">控制文本大小写</td></tr><tr><td style="text-align:center">direction</td><td style="text-align:left">规定文本的书写方向</td></tr><tr><td style="text-align:center">color</td><td style="text-align:left">文本颜色</td></tr></tbody></table><h3 id="3-visibility"><a href="#3-visibility" class="headerlink" title="3.visibility"></a>3.visibility</h3><h3 id="4-表格布局属性"><a href="#4-表格布局属性" class="headerlink" title="4.表格布局属性"></a>4.表格布局属性</h3><table><thead><tr><th style="text-align:center">表格布局属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">aption-side</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">border-collapse</td><td style="text-align:left">表格边框是应折叠为单个边框还是按标准HTML分隔</td></tr><tr><td style="text-align:center">border-spacing</td><td style="text-align:left">相邻单元格边界之间的距离</td></tr><tr><td style="text-align:center">empty-cells</td><td style="text-align:left">是否在表格中的空单元格上显示边框</td></tr><tr><td style="text-align:center">table-layout</td><td style="text-align:left">布置表格单元格，行和列的算法</td></tr></tbody></table><h3 id="5-列表布局属性-均继承"><a href="#5-列表布局属性-均继承" class="headerlink" title="5.列表布局属性[均继承]"></a>5.列表布局属性[均继承]</h3><table><thead><tr><th style="text-align:center">盒子模型属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">list-style</td><td style="text-align:left">[type/image/position]</td></tr><tr><td style="text-align:center">list-style-type</td><td style="text-align:left">类型</td></tr><tr><td style="text-align:center">list-style-image</td><td style="text-align:left">图像</td></tr><tr><td style="text-align:center">list-style-position</td><td style="text-align:left">位置[inside/outside/initial/inherit];</td></tr></tbody></table><h3 id="6-引用属性-quotes"><a href="#6-引用属性-quotes" class="headerlink" title="6.引用属性:quotes"></a>6.引用属性:quotes</h3><p>引用的引号类型:none|string|initial|inherit;</p><h3 id="7-鼠标光标-cursor"><a href="#7-鼠标光标-cursor" class="headerlink" title="7.鼠标光标:cursor"></a>7.鼠标光标:cursor</h3><h3 id="8-打印属性-1"><a href="#8-打印属性-1" class="headerlink" title="8.打印属性"></a>8.打印属性</h3><table><thead><tr><th style="text-align:center">盒子模型属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">page</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">windows</td><td style="text-align:left">发生分页时必须在页面<strong>顶部</strong>保留的最少行数</td></tr><tr><td style="text-align:center">orphans</td><td style="text-align:left">生分页时必须在页面<strong>底部</strong>保留的最少行数</td></tr></tbody></table><h3 id="9-声音样式属性-1"><a href="#9-声音样式属性-1" class="headerlink" title="9.声音样式属性"></a>9.声音样式属性</h3><table><thead><tr><th style="text-align:center">盒子模型属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">speak</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">speak-punctuation</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">speak-numeral</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">speak-header</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">speech-rate</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">volume</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">voice-family</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">pitch</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">pitch-range</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">stress</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">richness</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">azimuth</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">elevation</td><td style="text-align:left"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS-属性继承-待完善&quot;&gt;&lt;a href=&quot;#CSS-属性继承-待完善&quot; class=&quot;headerlink&quot; title=&quot;CSS_属性继承 [待完善]&quot;&gt;&lt;/a&gt;CSS_属性继承 &lt;span style=&quot;font-size:.5em&quot;&gt;[待完善]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;哪些属性可继承？？呃。。。往下看。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="好记性不如烂笔头" scheme="https://hotkang.cn/categories/%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
      <category term="CSS" scheme="https://hotkang.cn/tags/CSS/"/>
    
      <category term="属性继承" scheme="https://hotkang.cn/tags/%E5%B1%9E%E6%80%A7%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>图书管理系统四</title>
    <link href="https://hotkang.cn/2018/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%9B%9B/"/>
    <id>https://hotkang.cn/2018/图书管理系统四/</id>
    <published>2018-06-19T15:49:33.000Z</published>
    <updated>2018-08-04T07:28:17.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现具体功能-完结"><a href="#实现具体功能-完结" class="headerlink" title="实现具体功能 [完结]"></a>实现具体功能 <span style="font-size:.5em">[完结]</span></h2><blockquote><p>所有的功能实现都在写在这里了。</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="http://www.alloyteam.com/2015/03/sexpressmysql/" target="_blank" rel="noopener">参考教程1</a></li><li><a href="https://www.xiabingbao.com/node/2017/02/20/node-express-forum.html" target="_blank" rel="noopener">参考教程2</a>(划重点!)</li></ul><p>虽然前期看了教程1之后，功能没有实现，但是给教程2奠定一定的知识储备,建议都看看。</p></blockquote><hr><h2 id="了解整体架构"><a href="#了解整体架构" class="headerlink" title="了解整体架构"></a>了解整体架构</h2><p>仔细看看<a href="http://blog.fens.me/nodejs-express4/" target="_blank" rel="noopener">Node.js开发框架Express4.x</a> 下的以下部分</p><pre><code>2. 目录结构3. package.json项目配置4. app.js核心文件5.Bootstrap界面框架(选看,里面涉及到的重复代码前面讲过)6. 路由功能</code></pre><p><br></p><h2 id="完成注册-登录"><a href="#完成注册-登录" class="headerlink" title="完成注册/登录"></a>完成注册/登录</h2><p>看了很多网上的教程吧,只有<a href="https://www.xiabingbao.com/node/2017/02/20/node-express-forum.html" target="_blank" rel="noopener">参考教程2</a>让我成功了,作者写的也非常用心超级仔细！！！！我只跟着敲了用户注册登录,后面基本很顺畅~</p><p><br></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>看了所有推荐的链接,基本上就没有什么问题啦。靠谱的教程让我们少走弯路,少踏坑。</p><p><br><br><br></p><h2 id="项目具体细节记录"><a href="#项目具体细节记录" class="headerlink" title="项目具体细节记录"></a>项目具体细节记录</h2><hr><h2 id="一、保持用户登录状态-app-js"><a href="#一、保持用户登录状态-app-js" class="headerlink" title="一、保持用户登录状态(app.js)"></a>一、保持用户登录状态(app.js)</h2><ol><li><h5 id="加载依赖库"><a href="#加载依赖库" class="headerlink" title="加载依赖库"></a>加载依赖库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var cookieParser = require(&apos;cookie-parser&apos;);  </span><br><span class="line">var session = require(&apos;express-session&apos;);</span><br></pre></td></tr></table></figure></li><li><h5 id="定义cookie解析器"><a href="#定义cookie解析器" class="headerlink" title="定义cookie解析器"></a>定义cookie解析器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    secret: &apos;hotyan&apos;,  // 用来对session id相关的cookie进行签名</span><br><span class="line">    saveUninitialized: true,  // 是否自动保存未初始化的会话，建议false</span><br><span class="line">    resave: false,  // 是否每次都重新保存会话，建议false</span><br><span class="line">    cookie: &#123;maxAge:  60*60 * 1000 &#125; // 有效期，单位是毫秒</span><br><span class="line">    &#125;))</span><br></pre></td></tr></table></figure></li><li><h5 id="在app-js文件下添加自定义中间件-实现保持用户登录状态"><a href="#在app-js文件下添加自定义中间件-实现保持用户登录状态" class="headerlink" title="在app.js文件下添加自定义中间件,实现保持用户登录状态"></a>在app.js文件下添加自定义中间件,实现保持用户登录状态</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app.use(function(req, res, next)&#123;</span><br><span class="line">    // 如果session中存在，则说明已经登录</span><br><span class="line">    if( req.session.hotyan )&#123;</span><br><span class="line">        res.locals.hotyan = &#123;</span><br><span class="line">            UserId : req.session.hotyan.UserId,</span><br><span class="line">            UserName : req.session.hotyan.UserName</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        res.locals.hotyan = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    next();//此处必须有</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p><br></p><h2 id="二、数据库连接"><a href="#二、数据库连接" class="headerlink" title="二、数据库连接"></a>二、数据库连接</h2><ul><li><h5 id="在-models-下新建-db-js"><a href="#在-models-下新建-db-js" class="headerlink" title="在 models 下新建 db.js"></a>在 models 下新建 <code>db.js</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var mysql = require(&apos;mysql&apos;);</span><br><span class="line">var pool = mysql.createPool(&#123;</span><br><span class="line">    host: &apos;localhost&apos;,</span><br><span class="line">    user: &apos;root&apos;,</span><br><span class="line">    password: &apos;XXXXXX&apos;,</span><br><span class="line">    database: &apos;XXXXXX&apos;</span><br><span class="line">&#125;);</span><br><span class="line">module.exports = pool;</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h2 id="三、Mysql语句"><a href="#三、Mysql语句" class="headerlink" title="三、Mysql语句"></a>三、Mysql语句</h2><ul><li><h5 id="以对图书管理员进行增删改查为例"><a href="#以对图书管理员进行增删改查为例" class="headerlink" title="以对图书管理员进行增删改查为例"></a>以对图书管理员进行增删改查为例</h5><p>方法总结于教程2,新建(SQL/adminSql.js)文件,将需要的Mysql语句全部独立出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//对bookadmin进行增删改查</span><br><span class="line">var admin = &#123;</span><br><span class="line">    /**添加图书管理员 */</span><br><span class="line">    insert :&apos;INSERT INTO `bookadmin` SET `BAId`=?, `BAName`=? ,`BAPassword`=?,`BAPhone`=?,`BAEmail`=?&apos;,</span><br><span class="line">    </span><br><span class="line">    /**修改图书管理员信息 */</span><br><span class="line">    update : &apos;UPDATE `bookadmin` SET `BAName`=? ,`BAPhone`=?,`BAEmail`=? WHERE `BAId`=?&apos;,</span><br><span class="line">    </span><br><span class="line">    /**删除图书管理员 */</span><br><span class="line">    delete: &apos;DELETE FROM `bookadmin` WHERE `BAId`=?&apos;,</span><br><span class="line">    </span><br><span class="line">    /**精确查看图书管理员信息 */</span><br><span class="line">    queryById : &apos;SELECT * FROM `bookadmin` WHERE `BAId`=?&apos;,</span><br><span class="line">    </span><br><span class="line">    /**查看全部图书管理员信息 */</span><br><span class="line">    queryAll : &apos;SELECT * FROM `bookadmin` &apos;</span><br><span class="line">&#125;;</span><br><span class="line">module.exports = admin;</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h2 id="四、函数"><a href="#四、函数" class="headerlink" title="四、函数"></a>四、函数</h2><p>实现功能的函数放置在<code>models/users.js</code></p><ol><li><h5 id="加载依赖文件"><a href="#加载依赖文件" class="headerlink" title="加载依赖文件"></a>加载依赖文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var pool = require(&apos;./db&apos;), // 连接数据库</span><br><span class="line">    admin = require(&apos;../SQL/adminSql&apos;),//图书管理员的Mysql语句</span><br><span class="line">    crypto = require(&apos;crypto&apos;); // 对密码进行加密</span><br></pre></td></tr></table></figure></li><li><h5 id="以添加图书管理员为例学习如何使用封装的函数"><a href="#以添加图书管理员为例学习如何使用封装的函数" class="headerlink" title="以添加图书管理员为例学习如何使用封装的函数"></a>以添加图书管理员为例学习如何使用封装的函数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">adminadd: function (BAId, BAName, BAPassword, BAPhone, BAEmail, cb) &#123;</span><br><span class="line">    pool.getConnection(function (err, connection) &#123;</span><br><span class="line">        if (err) throw err;</span><br><span class="line"></span><br><span class="line">            connection.query(admin.insert, [BAId, BAName, BAPassword, BAPhone, BAEmail], function (err, result) &#123;</span><br><span class="line">                if (err) throw err;</span><br><span class="line">                    cb(result);</span><br><span class="line">                    connection.release();</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>此处应了解一下query()方法,参数可2可3,query(mysql语句,内容数组,回调函数）;我把Mysql语句独立了出去,看了教程2就知道。</p></li></ol><p><br></p><h2 id="五、表单提交POST请求"><a href="#五、表单提交POST请求" class="headerlink" title="五、表单提交POST请求"></a>五、表单提交POST请求</h2><ul><li><h5 id="以添加图书管理员为例"><a href="#以添加图书管理员为例" class="headerlink" title="以添加图书管理员为例:"></a>以添加图书管理员为例:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;/badAddAdmin&quot; method=&quot;POST&quot; class=&quot;ad_data&quot;&gt;//注意1</span><br><span class="line">    &lt;div class=&quot;data&quot;&gt;</span><br><span class="line">        &lt;label&gt;管理号&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;输入图书管理员编号&quot; name=&quot;BAId&quot; /&gt;//注意2</span><br><span class="line">    &lt;/div&gt;   </span><br><span class="line">    ...     </span><br><span class="line">    &lt;div class=&quot;data&quot;&gt;</span><br><span class="line">        &lt;label&gt;邮箱&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;输入图书管理员邮箱&quot; name=&quot;BAEmail&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;input class=&quot;add_btn&quot; type=&quot;submit&quot; value=&quot;确认添加&quot; /&gt;//注意3    </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>注意三个地方:</p><ol><li><code>action=&quot;/badAddAdmin&quot; method=&quot;POST&quot;</code></li><li><code>name=&quot;BAId&quot;</code></li><li><code>type=&quot;submit&quot;</code></li></ol></li></ul><p><br></p><h2 id="六、添加POST代码"><a href="#六、添加POST代码" class="headerlink" title="六、添加POST代码"></a>六、添加POST代码</h2><ul><li><h5 id="以添加图书管理员界面为例-routes-index-js"><a href="#以添加图书管理员界面为例-routes-index-js" class="headerlink" title="以添加图书管理员界面为例(routes/index.js):"></a>以添加图书管理员界面为例(<code>routes/index.js</code>):</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">router.post(&apos;/badAddAdmin&apos;, function (req, res, next) &#123;</span><br><span class="line">/*获取表单传来的数据*/</span><br><span class="line">    var BAId = req.body.BAId || &apos;&apos;,</span><br><span class="line">        BAName = req.body.BAName || &apos;&apos;,</span><br><span class="line">        BAPassword = req.body.BAPassword || &apos;&apos;,</span><br><span class="line">        BAPhone = req.body.BAPhone || &apos;&apos;,</span><br><span class="line">        BAEmail = req.body.BAEmail || &apos;&apos;;</span><br><span class="line">    /*调用密码加密函数*/</span><br><span class="line">    var password_hash = user_m.hash(BAPassword);</span><br><span class="line">    /*调用添加图书管理员函数*/</span><br><span class="line">    user_m.adminadd(BAId, BAName, password_hash, BAPhone, BAEmail, function (result) &#123;</span><br><span class="line">        console.log(&quot;添加成功&quot;);</span><br><span class="line">        res.redirect(&apos;/badAddAdmin&apos;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h2 id="七、EJS循环渲染"><a href="#七、EJS循环渲染" class="headerlink" title="七、EJS循环渲染"></a>七、EJS循环渲染</h2><ol><li><h5 id="在-routes-index-js-中加入"><a href="#在-routes-index-js-中加入" class="headerlink" title="在(routes/index.js)中加入:"></a>在(<code>routes/index.js</code>)中加入:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router.post(&apos;/badCheckAdmin&apos;, function (req, res, next) &#123;</span><br><span class="line">    console.log(req.body);</span><br><span class="line">    var BAId = req.body.BAId;</span><br><span class="line">    user_m.adminId(BAId, function (result) &#123;</span><br><span class="line">        console.log(&quot;精确查看成功&quot;);</span><br><span class="line">        res.render(&apos;badCheckAdmin&apos;, &#123;</span><br><span class="line">            title: &apos;查看图书管理员信息&apos;,</span><br><span class="line">            datas: result     //返回json数据,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>返回json数据,需要依赖模块body-parser,此处应了解一下res.render()</p></li><li><h5 id="在-views-badCheckAdmin-ejs-中渲染代码"><a href="#在-views-badCheckAdmin-ejs-中渲染代码" class="headerlink" title="在(views/badCheckAdmin.ejs)中渲染代码:"></a>在(views/badCheckAdmin.ejs)中渲染代码:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;tbody&gt;</span><br><span class="line">    &lt;% for(var i=0;i&lt; datas.length;i++)&#123; %&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td &gt;&lt;%= datas[i].BAId %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%= datas[i].BAName %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%= datas[i].BAPhone %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%= datas[i].BAEmail %&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;% &#125;%&gt;</span><br><span class="line">&lt;/tbody&gt;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><h2 id="八、日期格式YYYY-MM-DD"><a href="#八、日期格式YYYY-MM-DD" class="headerlink" title="八、日期格式YYYY-MM-DD"></a>八、日期格式YYYY-MM-DD</h2><ul><li><h5 id="在-routes-index-js-文件中"><a href="#在-routes-index-js-文件中" class="headerlink" title="在(routes/index.js)文件中:"></a>在(routes/index.js)文件中:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*加载依赖模块*/</span><br><span class="line">var time = require(&apos;silly-datetime&apos;)</span><br><span class="line"></span><br><span class="line">/*在需要的地方使用,以注册时间为例*/</span><br><span class="line">RegTime = time.format(new Date(), &apos;YYYY-MM-DD&apos;);</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h2 id="九、图书应该归还日期-30天后"><a href="#九、图书应该归还日期-30天后" class="headerlink" title="九、图书应该归还日期(30天后)"></a>九、图书应该归还日期(30天后)</h2><ol><li><h5 id="在-models-users-js-中添加date方法"><a href="#在-models-users-js-中添加date方法" class="headerlink" title="在(models/users.js)中添加date方法:"></a>在(models/users.js)中添加date方法:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">date: function (AddDay) &#123;</span><br><span class="line">    var date = new Date();</span><br><span class="line">    /*****获取AddDay天后的日期 ********/</span><br><span class="line">    date.setDate(date.getDate() + AddDay);</span><br><span class="line"></span><br><span class="line">    var Y = date.getFullYear(),</span><br><span class="line"></span><br><span class="line">    /***** 获取当前月份的日期，不足10补0 *****/</span><br><span class="line">        M = (date.getMonth() + 1) &lt; 10 ? &quot;0&quot; + (date.getMonth() + 1) : (date.getMonth() + 1),</span><br><span class="line"></span><br><span class="line">        /****获取当前几号，不足10补0  ****/</span><br><span class="line">        D = date.getDate() &lt; 10 ? &quot;0&quot; + date.getDate() : date.getDate();</span><br><span class="line"></span><br><span class="line">    return Y + &quot;-&quot; + M + &quot;-&quot; + D;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="在-routes-index-js-借书界面调用date方法"><a href="#在-routes-index-js-借书界面调用date方法" class="headerlink" title="在(routes/index.js)借书界面调用date方法:"></a>在(routes/index.js)借书界面调用date方法:</h5><pre><code>var ShouldTime = user_m.date(30);</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实现具体功能-完结&quot;&gt;&lt;a href=&quot;#实现具体功能-完结&quot; class=&quot;headerlink&quot; title=&quot;实现具体功能 [完结]&quot;&gt;&lt;/a&gt;实现具体功能 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;所有的功能实现都在写在这里了。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Express+ejs+Mysql图书管理系统" scheme="https://hotkang.cn/categories/Express-ejs-Mysql%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="图书管理系统" scheme="https://hotkang.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Mysql命令小结</title>
    <link href="https://hotkang.cn/2018/Mysql%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/"/>
    <id>https://hotkang.cn/2018/Mysql命令小结/</id>
    <published>2018-06-19T14:04:20.000Z</published>
    <updated>2018-07-26T18:16:42.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mysql语句-持续完善"><a href="#Mysql语句-持续完善" class="headerlink" title="Mysql语句 [持续完善]"></a>Mysql语句 <span style="font-size:.5em">[持续完善]</span></h2><blockquote><p>常用命令小结</p></blockquote><a id="more"></a><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://juejin.im/post/5ae55861f265da0ba062ec71" target="_blank" rel="noopener">参考链接</a></li></ul></blockquote><hr><h2 id="一、DATABASE"><a href="#一、DATABASE" class="headerlink" title="一、DATABASE"></a>一、DATABASE</h2><p>新建数据库：</p><pre><code>CREATE DATABASE database_name;</code></pre><p>删除数据库：</p><pre><code>DROP DATABASE database_name;</code></pre><p>查看所有可用的数据库：</p><pre><code>SHOW DATABASES;  </code></pre><p>选择数据库：</p><pre><code>USE database_name;</code></pre><p>显示数据库服务器的状态信息：</p><pre><code>SHOW STATUS;  </code></pre><p>获取当前所选的数据库中所有可用的表：</p><pre><code>SHOW TABLES; </code></pre><p>获取表中所有列的信息：</p><pre><code>SHOW COLUMNS FROM table_name; </code></pre><p><br></p><h2 id="二、TABLE"><a href="#二、TABLE" class="headerlink" title="二、TABLE"></a>二、TABLE</h2><p>新建表:</p><pre><code>CREATE TABLE table_name;</code></pre><p>删除表,使用DROP TABLE子句:</p><pre><code>DROP TABLE table_name。</code></pre><p>清空表中记录:</p><pre><code>delete from table_name;</code></pre><p>显示表中的记录:</p><pre><code>select * from table_name;</code></pre><p><br></p><h2 id="三、导入导出"><a href="#三、导入导出" class="headerlink" title="三、导入导出"></a>三、导入导出</h2><p>导入.sql</p><pre><code>source .sql文件路径</code></pre><p>备份数据,导出.sql文件</p><pre><code>cd 存放目录mysqldump -u root_name -p database_name&gt;file_name.sql例如:mysqldump -u root -p hotyan&gt;db.sql</code></pre><p>退出MYSQL命令:</p><pre><code>exit(回车)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mysql语句-持续完善&quot;&gt;&lt;a href=&quot;#Mysql语句-持续完善&quot; class=&quot;headerlink&quot; title=&quot;Mysql语句 [持续完善]&quot;&gt;&lt;/a&gt;Mysql语句 &lt;span style=&quot;font-size:.5em&quot;&gt;[持续完善]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;常用命令小结&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Express+ejs+Mysql图书管理系统" scheme="https://hotkang.cn/categories/Express-ejs-Mysql%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Mysql" scheme="https://hotkang.cn/categories/Express-ejs-Mysql%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/Mysql/"/>
    
    
      <category term="图书管理系统" scheme="https://hotkang.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Mysql" scheme="https://hotkang.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>图书管理系统三</title>
    <link href="https://hotkang.cn/2018/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%89/"/>
    <id>https://hotkang.cn/2018/图书管理系统三/</id>
    <published>2018-06-11T15:24:23.000Z</published>
    <updated>2018-08-03T11:00:02.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Use-Homebre-Install-Mysql-完结"><a href="#Use-Homebre-Install-Mysql-完结" class="headerlink" title="Use Homebre Install Mysql [完结]"></a>Use Homebre Install Mysql <span style="font-size:.5em">[完结]</span></h2><blockquote><p>安装Mysql,你可能会进入Mysql官网,下载安装适合你自己电脑的版本,我用的Mac,所以我继续看了一下在【macOS上安装MySQL】,然后就跟着操作,结果不成功,解决不了？？？卸载试试？？？重新安装,依旧失败~</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://dev.mysql.com/doc/refman/8.0/en/installing.html" target="_blank" rel="noopener">Mysql官网</a></li><li><a href="https://dev.mysql.com/doc/refman/8.0/en/osx-installation.html" target="_blank" rel="noopener">在macOS上安装MySQL</a></li><li><a href="https://brew.sh/" target="_blank" rel="noopener">homebrew官网</a></li><li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/Homebrew/index.html" target="_blank" rel="noopener">本文参考链接</a></li><li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/MySql/index.html" target="_blank" rel="noopener">YouTube视频教程</a>(划重点,是这个视频让我成功的！！！)</li></ul></blockquote><hr><h2 id="一、安装homebrew"><a href="#一、安装homebrew" class="headerlink" title="一、安装homebrew"></a>一、安装homebrew</h2><p>请参考<a href="https://hotyan.github.io/2018/use%20homebrew%20install%20mongodb" target="_blank" rel="noopener">Mac Use Homebrew Install Mongodb</a>,那里有详细记录,这边不再赘述</p><p><br></p><h2 id="二、安装Mysql"><a href="#二、安装Mysql" class="headerlink" title="二、安装Mysql"></a>二、安装Mysql</h2><ol><li><h5 id="终端下运行以下命令"><a href="#终端下运行以下命令" class="headerlink" title="终端下运行以下命令"></a>终端下运行以下命令</h5><pre><code>$ brew install mysql</code></pre><p>【暂时忽略你看到的一些提示！！！】</p></li><li><h5 id="启动Mysql服务器"><a href="#启动Mysql服务器" class="headerlink" title="启动Mysql服务器"></a>启动Mysql服务器</h5><p>先把服务器start再说</p><pre><code>$ brew services start mysql</code></pre><p>【现在可以跟着你看到的提示一步一步来！！！】</p></li><li><h5 id="先安全登录Mysql"><a href="#先安全登录Mysql" class="headerlink" title="先安全登录Mysql"></a>先安全登录Mysql</h5><p>运行提示一:</p><pre><code>$ mysql_secure_installation  </code></pre><ul><li><p>根据提示设置user root密码</p><pre><code>Enter password for user root：（此处输入你的密码）</code></pre></li><li><p>根据提示进行设置</p><pre><code>可一路yes</code></pre></li><li><p>设置完后，你会看到提示</p><pre><code>All done！</code></pre></li></ul></li><li><h5 id="连接Mysql"><a href="#连接Mysql" class="headerlink" title="连接Mysql"></a>连接Mysql</h5><p>运行提示二:</p><pre><code>$ mysql -uroot</code></pre><p>或者</p><pre><code>$ mysql -u root -p    </code></pre><p>回车后,输入刚刚设置的密码：</p><pre><code>Enter password：</code></pre></li><li><h5 id="success！"><a href="#success！" class="headerlink" title="success！"></a>success！</h5><p>成功之后,就可以对Mysql进行操作啦</p></li><li><h5 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出mysql</h5><pre><code>mysql&gt; exitBye</code></pre></li><li><h5 id="关闭mysql服务器"><a href="#关闭mysql服务器" class="headerlink" title="关闭mysql服务器"></a>关闭mysql服务器</h5><pre><code>$ brew services start mysql</code></pre></li><li><h5 id="配置-bash-profile"><a href="#配置-bash-profile" class="headerlink" title="配置.bash_profile"></a>配置.bash_profile</h5><p>先查看你的mysql安装在哪:</p><pre><code>$ which mysql</code></pre><p>比如我返回的是:</p><pre><code>/usr/local/Cellar/mysql/5.7.22/bin/mysql</code></pre><p>打开.bash_profile文件:</p><pre><code>$ open ~/.bash_profile</code></pre><p>将下面这行代码加入.bash_profile文件:</p><pre><code>export PATH=&quot;/usr/local/Cellar/mysql/5.7.22/bin:$PATH&quot;</code></pre><p>保存,退出后,保存新配置:</p><pre><code>$ source ~/.bash_profile</code></pre></li><li><h5 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h5><p>开启服务器:</p><pre><code>$ brew services start mysql</code></pre><p>登录Mysql:</p><pre><code>$ mysql -u root -p</code></pre><p>操作Mysql:</p><p>【<a href="https://hotyan.github.io/2018/Mysql%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93" target="_blank" rel="noopener">Mysql指令小结</a> 】</p><p>退出Mysql:</p><pre><code>mysql&gt;exitBye</code></pre><p>关闭服务器:</p><pre><code>$ brew services stop mysql</code></pre></li><li><h5 id="基本完成"><a href="#基本完成" class="headerlink" title="基本完成"></a>基本完成</h5><p>其实我遇到过很多问题，也尝试解决，Google了很多，并没有很成功的解决问题，课设期间时间也比较有限，所以在尝试解决不成功后，出现问题我选择卸载，重新安装~</p><p>根据上面打开流程，基本不会再出差啦</p></li></ol><p><br></p><h2 id="三、卸载Mysql"><a href="#三、卸载Mysql" class="headerlink" title="三、卸载Mysql"></a>三、卸载Mysql</h2><ol><li><h5 id="打开终端-依次输入"><a href="#打开终端-依次输入" class="headerlink" title="打开终端,依次输入"></a>打开终端,依次输入</h5><pre><code>$ brew remove mysql$ brew cleanup$ sudo rm /usr/local/mysql$ sudo rm -rf /usr/local/var/mysql$ sudo rm -rf /usr/local/mysql*$ sudo rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist$ sudo rm -rf /Library/StartupItems/MySQLCOM$ sudo rm -rf /Library/PreferencePanes/My*</code></pre></li><li><h5 id="查看是否成功"><a href="#查看是否成功" class="headerlink" title="查看是否成功"></a>查看是否成功</h5><pre><code>$ mysql</code></pre><p>提示mysql 没有发现，多半就可以了。（其实我也不确定哈，只是我这样就可以~）</p></li><li><h5 id="最后重启电脑重新安装即可"><a href="#最后重启电脑重新安装即可" class="headerlink" title="最后重启电脑重新安装即可"></a>最后重启电脑重新安装即可</h5></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Use-Homebre-Install-Mysql-完结&quot;&gt;&lt;a href=&quot;#Use-Homebre-Install-Mysql-完结&quot; class=&quot;headerlink&quot; title=&quot;Use Homebre Install Mysql [完结]&quot;&gt;&lt;/a&gt;Use Homebre Install Mysql &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;安装Mysql,你可能会进入Mysql官网,下载安装适合你自己电脑的版本,我用的Mac,所以我继续看了一下在【macOS上安装MySQL】,然后就跟着操作,结果不成功,解决不了？？？卸载试试？？？重新安装,依旧失败~&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Install" scheme="https://hotkang.cn/categories/Install/"/>
    
      <category term="Mysql" scheme="https://hotkang.cn/categories/Install/Mysql/"/>
    
    
      <category term="图书管理系统" scheme="https://hotkang.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Mysql" scheme="https://hotkang.cn/tags/Mysql/"/>
    
      <category term="Homebrew" scheme="https://hotkang.cn/tags/Homebrew/"/>
    
      <category term="Node.js" scheme="https://hotkang.cn/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>图书管理系统二</title>
    <link href="https://hotkang.cn/2018/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BA%8C/"/>
    <id>https://hotkang.cn/2018/图书管理系统二/</id>
    <published>2018-06-11T15:24:16.000Z</published>
    <updated>2018-08-04T07:28:08.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="EJS模板引擎-完结"><a href="#EJS模板引擎-完结" class="headerlink" title="EJS模板引擎 [完结]"></a>EJS模板引擎 <span style="font-size:.5em">[完结]</span></h2><blockquote><p>初步渲染页面~</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://ejs.bootcss.com/" target="_blank" rel="noopener">EJS官网</a></li></ul></blockquote><hr><h2 id="一、首先来了解一下项目结构"><a href="#一、首先来了解一下项目结构" class="headerlink" title="一、首先来了解一下项目结构"></a>一、首先来了解一下项目结构</h2><pre><code>.├── app.js  //程序启动文件├── bin│   └── www├── package.json  //项目依赖配置及开发者信息├── public        //静态文件(存css,js,img)│   ├── images│   ├── javascripts│   └── stylesheets│       └── style.css├── routes          //路由文件│   ├── index.js│   └── users.js└── views           //页面文件(ejs模板)    ├── error.ejs    ├── index.ejs    └── layout.ejs</code></pre><p><br></p><h2 id="二、渲染界面"><a href="#二、渲染界面" class="headerlink" title="二、渲染界面"></a>二、渲染界面</h2><ol><li><h5 id="对views文件夹进行操作"><a href="#对views文件夹进行操作" class="headerlink" title="对views文件夹进行操作:"></a>对views文件夹进行操作:</h5><pre><code>在现有的首页index.ejs里面加入你的首页界面代码新建注册界面reg.ejs,并加入该界面代码新建登录界面login.ejs,并加入该界面代码...</code></pre></li></ol><p><br></p><ol start="2"><li><h5 id="对routes文件夹进行操作"><a href="#对routes文件夹进行操作" class="headerlink" title="对routes文件夹进行操作"></a>对routes文件夹进行操作</h5><p>在<code>index.js</code>文件里面分别渲染<code>index.ejs</code>、<code>reg.ejs</code> 、<code>login.ejs</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.get(&apos;/&apos;, function (req, res, next) &#123;</span><br><span class="line">    res.render(&apos;index&apos;, &#123;</span><br><span class="line">        title: &apos;index&apos;</span><br><span class="line">    &#125;) </span><br><span class="line">&#125;)</span><br><span class="line">router.get(&apos;/reg&apos;, function (req, res, next) &#123;</span><br><span class="line">    res.render(&apos;reg&apos;, &#123;</span><br><span class="line">        title: &apos;reg&apos;</span><br><span class="line">    &#125;) </span><br><span class="line">&#125;)</span><br><span class="line">router.get(&apos;/login&apos;, function (req, res, next) &#123;</span><br><span class="line">    res.render(&apos;login&apos;, &#123;</span><br><span class="line">        title: &apos;login&apos;</span><br><span class="line">    &#125;) </span><br><span class="line">&#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="3"><li><h5 id="将相同代码独立出来"><a href="#将相同代码独立出来" class="headerlink" title="将相同代码独立出来"></a>将相同代码独立出来</h5><p>比如我的(基本资料/修改资料/借书/还书/借阅记录)这5个界面,上半部分是重复代码。</p><p>新建<code>TopBar.ejs</code>,放置重复代码,在其他五个界面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- include TopBar %&gt;</span><br></pre></td></tr></table></figure><p>所有重复代码以此类推</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;EJS模板引擎-完结&quot;&gt;&lt;a href=&quot;#EJS模板引擎-完结&quot; class=&quot;headerlink&quot; title=&quot;EJS模板引擎 [完结]&quot;&gt;&lt;/a&gt;EJS模板引擎 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;初步渲染页面~&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Express+ejs+Mysql图书管理系统" scheme="https://hotkang.cn/categories/Express-ejs-Mysql%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="图书管理系统" scheme="https://hotkang.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Mysql" scheme="https://hotkang.cn/tags/Mysql/"/>
    
      <category term="Express" scheme="https://hotkang.cn/tags/Express/"/>
    
      <category term="EJS" scheme="https://hotkang.cn/tags/EJS/"/>
    
  </entry>
  
  <entry>
    <title>图书管理系统一</title>
    <link href="https://hotkang.cn/2018/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%80/"/>
    <id>https://hotkang.cn/2018/图书管理系统一/</id>
    <published>2018-06-11T15:24:02.000Z</published>
    <updated>2018-08-11T09:40:02.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Express-完结"><a href="#Express-完结" class="headerlink" title="Express [完结]"></a>Express <span style="font-size:.5em">[完结]</span></h2><blockquote><p>图书管理系统大家应该都不陌生~<br>老师对大一的说：写一个图书管理系统吧？！！！<br>老师对大二的说：写一个图书管理系统！！！！<br>老师对大三的说：写一个图书管理系统！<br>大一的图书管理系统VS大三的图书管理系统？？</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><h3 id="个人比较喜欢先甩参考链接-可以选择直接去看参考链接。"><a href="#个人比较喜欢先甩参考链接-可以选择直接去看参考链接。" class="headerlink" title="个人比较喜欢先甩参考链接,可以选择直接去看参考链接。"></a>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</h3><ul><li><a href="http://www.expressjs.com.cn/" target="_blank" rel="noopener">Express官网</a></li></ul></blockquote><hr><p>首先默认你已经安装了 Node.js,没有装的可以参考<a href="https://hotkang.cn/2018/%E7%94%A8nvm%E8%A3%85node-js">用nvm装node.js</a></p><h2 id="一、为你的应用创建一个目录（-hotyan）"><a href="#一、为你的应用创建一个目录（-hotyan）" class="headerlink" title="一、为你的应用创建一个目录（/hotyan）"></a>一、为你的应用创建一个目录（/hotyan）</h2><pre><code>$ mkdir hotyan</code></pre><p><br></p><h2 id="二、进入此目录并将其作为当前工作目录"><a href="#二、进入此目录并将其作为当前工作目录" class="headerlink" title="二、进入此目录并将其作为当前工作目录"></a>二、进入此目录并将其作为当前工作目录</h2><pre><code>$ cd hotyan</code></pre><p><br></p><h2 id="三、install-Express应用生成器"><a href="#三、install-Express应用生成器" class="headerlink" title="三、install Express应用生成器"></a>三、install Express应用生成器</h2><p>通过应用生成器工具 express 可以快速创建一个应用的骨架。</p><p>通过如下命令安装：</p><pre><code>$ npm install express-generator -g</code></pre><p><br></p><h2 id="四、创建工作项目"><a href="#四、创建工作项目" class="headerlink" title="四、创建工作项目"></a>四、创建工作项目</h2><p>当前工作目录下（/hotyan）创建一个命名为 Librarys 的工作项目。</p><pre><code>$ express --view=ejs  Libraryscreate : Librarys/create : Librarys/public/create : Librarys/public/javascripts/create : Librarys/public/images/create : Librarys/public/stylesheets/create : Librarys/public/stylesheets/style.csscreate : Librarys/routes/create : Librarys/routes/index.jscreate : Librarys/routes/users.jscreate : Librarys/views/create : Librarys/views/error.ejscreate : Librarys/views/index.ejscreate : Librarys/app.jscreate : Librarys/package.jsoncreate : Librarys/bin/create : Librarys/bin/wwwchange directory:    $ cd Librarysinstall dependencies:    $ npm installrun the app:    $ DEBUG=librarys:* npm start</code></pre><p><br></p><h2 id="五、进入Library并安装依赖包"><a href="#五、进入Library并安装依赖包" class="headerlink" title="五、进入Library并安装依赖包"></a>五、进入Library并安装依赖包</h2><pre><code>$ cd Librarys$ npm install</code></pre><p><br></p><h2 id="六、启动这个项目（MacOS-或-Linux-平台）"><a href="#六、启动这个项目（MacOS-或-Linux-平台）" class="headerlink" title="六、启动这个项目（MacOS 或 Linux 平台）"></a>六、启动这个项目（MacOS 或 Linux 平台）</h2><pre><code>$ DEBUG=librarys:* npm start</code></pre><p><br></p><h2 id="七、在浏览器打开-http-localhost-3000"><a href="#七、在浏览器打开-http-localhost-3000" class="headerlink" title="七、在浏览器打开 http://localhost:3000/"></a>七、在浏览器打开 <code>http://localhost:3000/</code></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Express-完结&quot;&gt;&lt;a href=&quot;#Express-完结&quot; class=&quot;headerlink&quot; title=&quot;Express [完结]&quot;&gt;&lt;/a&gt;Express &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;图书管理系统大家应该都不陌生~&lt;br&gt;老师对大一的说：写一个图书管理系统吧？！！！&lt;br&gt;老师对大二的说：写一个图书管理系统！！！！&lt;br&gt;老师对大三的说：写一个图书管理系统！&lt;br&gt;大一的图书管理系统VS大三的图书管理系统？？&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Express+ejs+Mysql图书管理系统" scheme="https://hotkang.cn/categories/Express-ejs-Mysql%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="图书管理系统" scheme="https://hotkang.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Express" scheme="https://hotkang.cn/tags/Express/"/>
    
      <category term="EJS" scheme="https://hotkang.cn/tags/EJS/"/>
    
      <category term="Node.js" scheme="https://hotkang.cn/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>用nvm装node.js</title>
    <link href="https://hotkang.cn/2018/%E7%94%A8nvm%E8%A3%85node-js/"/>
    <id>https://hotkang.cn/2018/用nvm装node-js/</id>
    <published>2018-05-30T14:23:44.000Z</published>
    <updated>2018-08-03T16:42:39.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于node安装-完结"><a href="#关于node安装-完结" class="headerlink" title="关于node安装  [完结]"></a>关于node安装 <span style="font-size:.5em">[完结]</span></h2><blockquote><p>本地安装？全局安装？nvm安装？傻傻分不清楚？<br>使用 nvm 管理不同版本的 node 与 npm</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li>了解<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">NVM</a></li><li>了解<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li>了解<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">通过包管理器安装Node.js</a>NVM部分</li><li>了解<a href="https://www.npmjs.com/get-npm" target="_blank" rel="noopener">NPM</a></li><li><a href="https://www.runoob.com/w3cnote/nvm-manager-node-versions.html" target="_blank" rel="noopener">本文参考链接</a></li></ul></blockquote><hr><h2 id="一、卸载全局安装的-node"><a href="#一、卸载全局安装的-node" class="headerlink" title="一、卸载全局安装的 node"></a>一、卸载全局安装的 node</h2><p>在官网下载的 node 安装包,运行后会自动安装在全局目录,使用过程中经常会遇到一些权限问题,用以下方法卸载全局安装的 node。(不需要卸载则跳过此步骤)</p><ol><li><h5 id="删除-node-和-node-modules-相关的文件和文件夹"><a href="#删除-node-和-node-modules-相关的文件和文件夹" class="headerlink" title="删除 node 和 node_modules 相关的文件和文件夹"></a>删除 node 和 node_modules 相关的文件和文件夹</h5><p>打开Finder,按 shift+command+G 来打开前往文件夹的窗口,分别进入下列目录,删除 node 和 node_modules 相关的文件和文件夹</p><pre><code>/usr/local/lib/usr/local/include</code></pre></li><li><h5 id="如果你是使用的-brew-install-node-安装的-还需要在终端中执行以下命令来卸载"><a href="#如果你是使用的-brew-install-node-安装的-还需要在终端中执行以下命令来卸载" class="headerlink" title="如果你是使用的 brew install node 安装的,还需要在终端中执行以下命令来卸载"></a>如果你是使用的 brew install node 安装的,还需要在终端中执行以下命令来卸载</h5><pre><code>$ brew uninstall node </code></pre></li><li><h5 id="检查-node-和-node-modules-相关文件-文件夹是否删除成功"><a href="#检查-node-和-node-modules-相关文件-文件夹是否删除成功" class="headerlink" title="检查 node 和 node_modules 相关文件/文件夹是否删除成功"></a>检查 node 和 node_modules 相关文件/文件夹是否删除成功</h5><p>检查个人主文件夹下面的所有的 local、lib 以及 include 文件夹，并且删除所有与 node 和 node_modules 相关的文件以及文件夹</p></li><li><h5 id="进入-usr-local-bin-并删除-node-可执行文件"><a href="#进入-usr-local-bin-并删除-node-可执行文件" class="headerlink" title="进入 /usr/local/bin 并删除 node 可执行文件"></a>进入 /usr/local/bin 并删除 node 可执行文件</h5></li></ol><ol start="5"><li><h5 id="你可能还需要在终端中输入一些额外的指令"><a href="#你可能还需要在终端中输入一些额外的指令" class="headerlink" title="你可能还需要在终端中输入一些额外的指令"></a>你可能还需要在终端中输入一些额外的指令</h5><pre><code>$ sudo rm /usr/local/bin/npm$ sudo rm /usr/local/share/man/man1/node.1$ sudo rm /usr/local/lib/dtrace/node.d$ sudo rm -rf ~/.npm$ sudo rm -rf ~/.node-gyp$ sudo rm /opt/local/bin/node$ sudo rm /opt/local/include/node$ sudo rm -rf /opt/local/lib/node_modules</code></pre></li></ol><p><br></p><h2 id="二、OSX-安装-NVM"><a href="#二、OSX-安装-NVM" class="headerlink" title="二、OSX 安装 NVM"></a>二、OSX 安装 NVM</h2><ul><li><h5 id="用-X-Code-的命令行工具"><a href="#用-X-Code-的命令行工具" class="headerlink" title="用 X-Code 的命令行工具"></a>用 X-Code 的命令行工具</h5><p>运行以下命令</p><pre><code>$ xcode-select --install$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash</code></pre></li></ul><p><br></p><h2 id="三、安装多版本-node"><a href="#三、安装多版本-node" class="headerlink" title="三、安装多版本 node"></a>三、安装多版本 node</h2><ul><li><h5 id="查看远程服务器上所有的可用版本"><a href="#查看远程服务器上所有的可用版本" class="headerlink" title="查看远程服务器上所有的可用版本"></a>查看远程服务器上所有的可用版本</h5><pre><code>$ nvm ls-remote</code></pre></li><li><h5 id="安装最新版-Node"><a href="#安装最新版-Node" class="headerlink" title="安装最新版 Node"></a>安装最新版 Node</h5><pre><code>$ nvm install node </code></pre></li><li><h5 id="安装某一版本-4-2-2"><a href="#安装某一版本-4-2-2" class="headerlink" title="安装某一版本(4.2.2)"></a>安装某一版本(4.2.2)</h5><pre><code>$ nvm install 4.2.2</code></pre></li><li><h5 id="安装4-2-系列的最新的一个版本"><a href="#安装4-2-系列的最新的一个版本" class="headerlink" title="安装4.2 系列的最新的一个版本"></a>安装4.2 系列的最新的一个版本</h5><pre><code>$ nvm install 4.2</code></pre></li></ul><p>nvm 遵守语义化版本命名规则,nvm 会寻找 4.2.x 中最高的版本来安装。</p><p><br></p><h2 id="四、在不同版本间切换"><a href="#四、在不同版本间切换" class="headerlink" title="四、在不同版本间切换"></a>四、在不同版本间切换</h2><p>每当安装了一个新版本 Node 后,全局环境会自动把这个新版本设置为默认。</p><ul><li><h5 id="nvm-提供-nvm-use-命令用于版本切换"><a href="#nvm-提供-nvm-use-命令用于版本切换" class="headerlink" title="nvm 提供 nvm use 命令用于版本切换"></a>nvm 提供 nvm use 命令用于版本切换</h5><ul><li><h5 id="切换到最新版："><a href="#切换到最新版：" class="headerlink" title="切换到最新版："></a>切换到最新版：</h5><pre><code>$ nvm use node</code></pre></li><li><h5 id="切换到-4-2-2："><a href="#切换到-4-2-2：" class="headerlink" title="切换到 4.2.2："></a>切换到 4.2.2：</h5><pre><code>$ nvm use 4.2.2</code></pre></li><li><h5 id="切换到最新的-4-2-x："><a href="#切换到最新的-4-2-x：" class="headerlink" title="切换到最新的 4.2.x："></a>切换到最新的 4.2.x：</h5><pre><code>$ nvm use 4.2</code></pre><p>每次执行切换的时候，系统都会把 node 的可执行文件链接放到特定版本的文件上。</p></li></ul></li></ul><p><br></p><h2 id="五、用-nvm-给不同的版本号设置别名"><a href="#五、用-nvm-给不同的版本号设置别名" class="headerlink" title="五、用 nvm 给不同的版本号设置别名"></a>五、用 nvm 给不同的版本号设置别名</h2><ul><li><h5 id="给4-2-2-版本号起个别名hotyan-version"><a href="#给4-2-2-版本号起个别名hotyan-version" class="headerlink" title="给4.2.2 版本号起个别名hotyan-version"></a>给4.2.2 版本号起个别名hotyan-version</h5><pre><code>$ nvm alias hotyan-version 4.2.2</code></pre></li><li><h5 id="运行"><a href="#运行" class="headerlink" title="运行:"></a>运行:</h5><pre><code>$ nvm use hotyan-version</code></pre></li><li><h5 id="取消别名："><a href="#取消别名：" class="headerlink" title="取消别名："></a>取消别名：</h5><pre><code>$ nvm unalias hotyan-version  </code></pre></li></ul><p><br></p><h2 id="六、列出已安装实例"><a href="#六、列出已安装实例" class="headerlink" title="六、列出已安装实例"></a>六、列出已安装实例</h2><pre><code>$ nvm ls</code></pre><p><br></p><h2 id="七、确认某个版本Node的路径"><a href="#七、确认某个版本Node的路径" class="headerlink" title="七、确认某个版本Node的路径"></a>七、确认某个版本Node的路径</h2><pre><code>$ nvm which 4.2.2</code></pre><p><br></p><h2 id="八、检查是否成功安装node和npm"><a href="#八、检查是否成功安装node和npm" class="headerlink" title="八、检查是否成功安装node和npm"></a>八、检查是否成功安装node和npm</h2><p>当成功下载Node.js时,会自动安装npm。</p><ul><li><h5 id="检查Node"><a href="#检查Node" class="headerlink" title="检查Node:"></a>检查Node:</h5><pre><code>$ node -v</code></pre></li><li><h5 id="确认npm"><a href="#确认npm" class="headerlink" title="确认npm:"></a>确认npm:</h5><pre><code>$ npm -v</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于node安装-完结&quot;&gt;&lt;a href=&quot;#关于node安装-完结&quot; class=&quot;headerlink&quot; title=&quot;关于node安装  [完结]&quot;&gt;&lt;/a&gt;关于node安装 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;本地安装？全局安装？nvm安装？傻傻分不清楚？&lt;br&gt;使用 nvm 管理不同版本的 node 与 npm&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Install" scheme="https://hotkang.cn/categories/Install/"/>
    
      <category term="Node.js" scheme="https://hotkang.cn/categories/Install/Node-js/"/>
    
    
      <category term="Node.js" scheme="https://hotkang.cn/tags/Node-js/"/>
    
      <category term="NVM" scheme="https://hotkang.cn/tags/NVM/"/>
    
      <category term="NPM" scheme="https://hotkang.cn/tags/NPM/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建github博客二</title>
    <link href="https://hotkang.cn/2018/%E7%94%A8hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E4%BA%8C/"/>
    <id>https://hotkang.cn/2018/用hexo搭建github博客二/</id>
    <published>2018-05-29T07:39:01.000Z</published>
    <updated>2018-08-10T13:56:47.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="优化博客-持续完善"><a href="#优化博客-持续完善" class="headerlink" title="优化博客 [持续完善]"></a>优化博客 <span style="font-size:.5em">[持续完善]</span></h2><blockquote><p>搜索了很多Next主题的效果，总结了自己比较喜欢或者已运用到Blog的效果~</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next使用文档</a></li><li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">参考链接1</a></li><li><a href="https://www.jianshu.com/p/efbeddc5eb19" target="_blank" rel="noopener">参考链接2</a></li><li><a href="https://www.vincentqin.tech/posts/build-a-website-using-hexo/" target="_blank" rel="noopener">参考链接3</a></li><li><a href="http://devinol.com/Hexo/Next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96-%E4%B8%89/" target="_blank" rel="noopener">参考链接4</a></li><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网主题</a></li></ul></blockquote><hr><h2 id="一、修改Next主题模式"><a href="#一、修改Next主题模式" class="headerlink" title="一、修改Next主题模式"></a>一、修改Next主题模式</h2><ol><li><h5 id="修改themes-next-config-yml文件Schemes属性"><a href="#修改themes-next-config-yml文件Schemes属性" class="headerlink" title="修改themes/next/_config.yml文件Schemes属性"></a>修改themes/next/_config.yml文件Schemes属性</h5><p>注意不要跟根目录下的_config.yml混淆</p><pre><code># Schemes# scheme: Muse   # scheme: Mist  scheme: Pisces# scheme: Gemini</code></pre><p>NexT主题默认使用Muse模式,根据自己的喜好选择。</p><p><del>我比较喜欢Pisces ,对源码做了些样式修改。</del></p><p>后来我喜欢上了<code>Gemini</code>。<code>Gemini</code>跟<code>Pisce</code>相似,而且<code>Gemini</code>的源码样式是在<code>Pisce</code>的基础上重写的。</p></li></ol><p><br></p><ol start="2"><li><h5 id="更新Hexo部署"><a href="#更新Hexo部署" class="headerlink" title="更新Hexo部署"></a>更新Hexo部署</h5><p>每次修改后都可以更新部署,也可最后再一次性部署。后面不再赘述。</p><pre><code>$ cd  HotYan_Blog //进入博客文件夹目录$ hexo clean    // 清理缓存$ hexo generate // 生成文件$ hexo deploy   // 线上部署/*简写如下*/$ hexo clean$ hexo g$ hexo d</code></pre></li></ol><p><br></p><h2 id="二、设置首页预览摘要"><a href="#二、设置首页预览摘要" class="headerlink" title="二、设置首页预览摘要"></a>二、设置首页预览摘要</h2><p>了解一下官网【Next使用文档】【<a href="https://theme-next.iissnan.com/faqs.html#read-more" target="_blank" rel="noopener">如何设置阅读全文</a>】介绍的三种方法</p><p>我使用的是用<code>&lt;!-- more --&gt;</code>进行手动截断</p><p><br></p><h2 id="三、侧边栏显示效果"><a href="#三、侧边栏显示效果" class="headerlink" title="三、侧边栏显示效果"></a>三、侧边栏显示效果</h2><ul><li><h5 id="修改themes-next-config-yml文件sidebar属性"><a href="#修改themes-next-config-yml文件sidebar属性" class="headerlink" title="修改themes/next/_config.yml文件sidebar属性"></a>修改themes/next/_config.yml文件sidebar属性</h5><pre><code>sidebar:    # Sidebar Position, available value: left | right (only for Pisces | Gemini).      position: left    # position: right //修改侧边栏位置    # Sidebar Display, available value (only for Muse | Mist):    #  - post    expand on posts automatically. Default.    #  - always  expand for all pages automatically    #  - hide    expand only when click on the sidebar toggle icon.    #  - remove  Totally remove sidebar including sidebar toggle.    # display: post      //默认      display: always     //一直显示    # display: hide      //初始隐藏    # display: remove    //移除侧边栏</code></pre><p>根据提示,设置自己喜欢的样式,我是Pisces主题,设置侧边栏在左边,且一直显示。</p></li></ul><p><br></p><h2 id="四、侧边栏社交链接"><a href="#四、侧边栏社交链接" class="headerlink" title="四、侧边栏社交链接"></a>四、侧边栏社交链接</h2><ul><li><h5 id="修改themes-next-config-yml文件social属性"><a href="#修改themes-next-config-yml文件social属性" class="headerlink" title="修改themes/next/_config.yml文件social属性"></a>修改themes/next/_config.yml文件social属性</h5><pre><code>/*文字链接*/social:    GitHub: https://github.com/hotYan || github    E-Mail: mailto:hotyann@163.com || envelope/*链接前图标*/social_icons:    enable: true    GitHub: github </code></pre><p>我只添加了GitHub、E-Mail。</p></li></ul><p><br></p><h2 id="五、设置RSS"><a href="#五、设置RSS" class="headerlink" title="五、设置RSS"></a>五、设置RSS</h2><ol><li><h5 id="安装-hexo-generator-feed-插件"><a href="#安装-hexo-generator-feed-插件" class="headerlink" title="安装 hexo-generator-feed 插件"></a>安装 hexo-generator-feed 插件</h5><p>RSS需要有一个Feed链接，而这个链接需要靠hexo-generator-feed插件来生成</p><pre><code>$ cd HotYan_Blog$ npm install hexo-generator-feed --save</code></pre></li></ol><p><br></p><ol start="2"><li><h5 id="修改-config-yml文件"><a href="#修改-config-yml文件" class="headerlink" title="修改/_config.yml文件"></a>修改/_config.yml文件</h5><pre><code>#type: RSS的类型(atom/rss2)#path: 文件路径,默认是atom.xml/rss2.xml#limit:展示文章的数量,使用0或则false代表展示全部#RSS订阅插件feed:     type: atom    path: atom.xml    limit: 0#RSS订阅支持plugins: hexo-generate-feed</code></pre></li></ol><p><br></p><ol start="3"><li><h5 id="修改themes-next-config-yml文件rss属性"><a href="#修改themes-next-config-yml文件rss属性" class="headerlink" title="修改themes/next/_config.yml文件rss属性"></a>修改themes/next/_config.yml文件rss属性</h5><pre><code>rss: /atom.xml </code></pre></li></ol><p><br></p><h2 id="六、添加菜单选项"><a href="#六、添加菜单选项" class="headerlink" title="六、添加菜单选项"></a>六、添加菜单选项</h2><p>默认情况下，菜单导航栏有首页、归档、关于三个选项，我们可以自行添加</p><ol><li><h5 id="修改themes-next-config-yml文件menu属性"><a href="#修改themes-next-config-yml文件menu属性" class="headerlink" title="修改themes/next/_config.yml文件menu属性"></a>修改themes/next/_config.yml文件menu属性</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">    home: / || home                //默认有</span><br><span class="line">    about: /about/ || user         // 默认有</span><br><span class="line">    tags: /tags/ || tags            //自行添加</span><br><span class="line">    categories: /categories/ || th  //自行添加</span><br><span class="line">    archives: /archives/ || archive   //默认有</span><br></pre></td></tr></table></figure><p>比如我添加了tags、categories</p></li></ol><p><br></p><ol start="2"><li><h5 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h5><pre><code>$ cd  HotYan_Blog //进入博客文件夹目录$ hexo new page &quot;tags&quot;$ hexo new page &quot;categories&quot;</code></pre></li></ol><p><br></p><ol start="3"><li><h5 id="修改index-md"><a href="#修改index-md" class="headerlink" title="修改index.md"></a>修改<code>index.md</code></h5><p>在/source/目录下创建了categories、tags文件夹,在这些文件夹中分别会创建一个index.md文件,对内容type进行修改，使之分别为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-05-29 00:02:39</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-05-29 00:02:54</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><p><br></p><h2 id="七、修改文章底部标签样式"><a href="#七、修改文章底部标签样式" class="headerlink" title="七、修改文章底部标签样式"></a>七、修改文章底部标签样式</h2><ul><li><h5 id="修改-themes-next-layout-macro-post-swig文件"><a href="#修改-themes-next-layout-macro-post-swig文件" class="headerlink" title="修改/themes/next/layout/_macro/post.swig文件"></a>修改/themes/next/layout/_macro/post.swig文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;post-tags&quot;&gt;  </span><br><span class="line">        &#123;% for tag in post.tags %&#125;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 <code>#</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p></li></ul><p><br></p><h2 id="八、文章末尾添加结束标记"><a href="#八、文章末尾添加结束标记" class="headerlink" title="八、文章末尾添加结束标记"></a>八、文章末尾添加结束标记</h2><ol><li><h5 id="在-themes-next-layout-macro新建passage-end-tag-swig"><a href="#在-themes-next-layout-macro新建passage-end-tag-swig" class="headerlink" title="在/themes/next/layout/_macro新建passage-end-tag.swig"></a>在/themes/next/layout/_macro新建passage-end-tag.swig</h5><p>添加以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #555;font-size:14px;&quot;&gt; - END - &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="2"><li><h5 id="修改-themes-next-layout-macro-post-swig文件-1"><a href="#修改-themes-next-layout-macro-post-swig文件-1" class="headerlink" title="修改/themes/next/layout/_macro/post.swig文件"></a>修改/themes/next/layout/_macro/post.swig文件</h5><p>在下面相应的位置添加添加相应的代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;#####################&#125;</span><br><span class="line">&#123;### END POST BODY ###&#125;</span><br><span class="line">&#123;#####################&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">/*插入代码如下*/</span><br><span class="line">&lt;div&gt;</span><br><span class="line">        &#123;% if not is_index %&#125;</span><br><span class="line">                &#123;% include&apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">/*插入到此处结束*/</span><br><span class="line"></span><br><span class="line">&lt;footer class=&quot;post-footer&quot;&gt;</span><br><span class="line">        &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><del>看参考文档的时候觉得代码插入的地方描述的不是很清楚!!在这个地方自己尽量描述的不能再清楚了</del></p></li></ol><p><br></p><ol start="3"><li><h5 id="修改themes-next-config-yml文件"><a href="#修改themes-next-config-yml文件" class="headerlink" title="修改themes/next/_config.yml文件"></a>修改themes/next/_config.yml文件</h5><p>在任意地方添加下面代码:</p><pre><code># 文章末尾添加结束标记passage_end_tag:        enabled: true</code></pre></li></ol><p><br></p><h2 id="九、访问量统计"><a href="#九、访问量统计" class="headerlink" title="九、访问量统计"></a>九、访问量统计</h2><ol><li><h5 id="busuanzi统计"><a href="#busuanzi统计" class="headerlink" title="busuanzi统计"></a>busuanzi统计</h5><blockquote><p>修改themes/next/_config.yml文件busuanzi_count属性</p></blockquote><pre><code>busuanzi_count:        # count values only if the other configs are false        enable: true         # 站点UV配置 总访问人次(一个人访问多篇文章记录一次)        site_uv: false        site_uv_header: 总访问量        site_uv_footer:        # 站点PV配置 总访问量(一个人访问多篇文章记录多次)        site_pv: false        site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;        site_pv_footer: 次        # 文章PV配置 访问量        page_pv: true        page_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;        page_pv_footer: </code></pre><p><del>我只设置了文章访问量</del></p><p><a href="https://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="noopener">更多&gt;&gt;</a></p></li></ol><p><br></p><ol start="2"><li><h5 id="LeanCloud统计文章阅读量"><a href="#LeanCloud统计文章阅读量" class="headerlink" title="LeanCloud统计文章阅读量"></a>LeanCloud统计文章阅读量</h5>【<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">为NexT主题添加文章阅读量统计功能</a>】</li></ol><p><br></p><h2 id="十、修改头像"><a href="#十、修改头像" class="headerlink" title="十、修改头像"></a>十、修改头像</h2><ol><li><h5 id="在themes-next-source-images下放置头像"><a href="#在themes-next-source-images下放置头像" class="headerlink" title="在themes/next/source/images下放置头像"></a>在themes/next/source/images下放置头像</h5></li><li><h5 id="修改themes-next-config-yml文件avatar属性"><a href="#修改themes-next-config-yml文件avatar属性" class="headerlink" title="修改themes/next/_config.yml文件avatar属性"></a>修改themes/next/_config.yml文件avatar属性</h5><pre><code>#avatar: 路径为头像目录avatar: ../images/avata.gif     </code></pre></li></ol><p><br></p><h2 id="十一、添加背景图"><a href="#十一、添加背景图" class="headerlink" title="十一、添加背景图"></a>十一、添加背景图</h2><ul><li><h5 id="修改themes-next-source-css-custom-custom-styl"><a href="#修改themes-next-source-css-custom-custom-styl" class="headerlink" title="修改themes/next/source/css _custom/custom.styl"></a>修改themes/next/source/css _custom/custom.styl</h5>添加如下代码:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">        background:url(../images/xx.jpg);</span><br><span class="line">        background-size:cover;</span><br><span class="line">        background-repeat:no-repeat;</span><br><span class="line">        background-attachment:fixed;</span><br><span class="line">        background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><br></p><h2 id="十二、修改各版块透明度"><a href="#十二、修改各版块透明度" class="headerlink" title="十二、修改各版块透明度"></a>十二、修改各版块透明度</h2><ol><li><h5 id="内容板块"><a href="#内容板块" class="headerlink" title="内容板块"></a>内容板块</h5><ul><li><p>修改在对应主题的对应.yml文件中,ID为【.content-wrap】标签下的background属性</p><pre><code>background: rgba(255,255,255,0.7); </code></pre></li><li><p>以主题Pisces为例,对应内容板块文件路径为:</p><pre><code>themes/next/source/css/_schemes/Pisces/_layout.styl</code></pre></li></ul></li></ol><p><br></p><ol start="2"><li><h5 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h5><ul><li><p>修改在对应主题的对应.yml文件中,ID为【.header-inner】标签下的background属性。</p></li><li><p>以主题Pisces为例,对应菜单栏文件路径为:</p><pre><code>themes/next/source/css/_schemes/Pisces/_layout.styl</code></pre></li></ul></li></ol><p><br></p><ol start="3"><li><h5 id="站点概况"><a href="#站点概况" class="headerlink" title="站点概况"></a>站点概况</h5><ul><li><p>修改在对应主题的对应.yml文件中,ID为【.sidebar-inner】标签下的background属性</p></li><li><p>以主题Pisces为例,对应站点概况文件路径为:</p><pre><code>themes/next/source/css/_schemes/Pisces/_sidebar.styl</code></pre></li><li><p>修改在对应主题的对应.yml文件中,ID为【.sidebar】标签下的background属性</p></li><li><p>以主题Pisces为例,对应站点概况文件路径为:</p><pre><code>themes/next/source/css/_schemes/Pisces/_layout.styl</code></pre></li></ul></li></ol><p><br></p><ol start="4"><li><h5 id="按钮背景"><a href="#按钮背景" class="headerlink" title="按钮背景"></a>按钮背景</h5><p>主题共享的文件,文件位置:</p><pre><code>themes/next/source/css _custom/components/post/post-button.styl</code></pre></li></ol><p><br></p><h2 id="十三、点击出现桃心"><a href="#十三、点击出现桃心" class="headerlink" title="十三、点击出现桃心"></a>十三、点击出现桃心</h2><ol><li><p>copy<a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="noopener">网页</a>代码</p></li><li><p>在<code>/themes/next/source/js/src</code>目录下新建love.js文件,把copy的代码粘贴到此文件。</p></li><li><p>在/themes/next/layout/_layout.swig 文件引入love.js</p><pre><code>...&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;   //在&lt;/body&gt;标签前引入love.js</code></pre><p><del>我发现在文章详情界面,没有效果,理论上应该是有效果的吧？？可能源码被我改砸了？</del></p><p><del>检查发现因为我love.js位置放错了！！</del>一定要放在紧挨<code>&lt;/body&gt;</code>标签前！！</p></li></ol><p><br><br></p><h2 id="十四、文章目录"><a href="#十四、文章目录" class="headerlink" title="十四、文章目录"></a>十四、文章目录</h2><p>目录不能跨级,否则会导致编号会错误。<a href="https://github.com/iissnan/hexo-theme-next/issues/1259" target="_blank" rel="noopener">More&gt;&gt;</a></p><ol><li><h5 id="取消文章目录自动编号"><a href="#取消文章目录自动编号" class="headerlink" title="取消文章目录自动编号"></a>取消文章目录自动编号</h5><blockquote><p>修改themes/next/_config.yml文件toc属性</p></blockquote><pre><code># Table Of Contents in the Sidebar  toc:  enable: true# Automatically add list number to toc.  number: false      /*修改这里*/# If true, all words will placed on next lines if header width longer then sidebar width.  wrap: false</code></pre></li></ol><p><br></p><ol start="2"><li><h5 id="自定义文章目录全显示"><a href="#自定义文章目录全显示" class="headerlink" title="自定义文章目录全显示"></a>自定义文章目录全显示</h5><blockquote><p>修改/themes/next/source/css/_custom/custom.styl,添加以下代码</p></blockquote><pre><code>.post-toc .nav .nav-child {        display: block;} </code></pre><p>并不确定是否成功<a href="https://github.com/iissnan/hexo-theme-next/issues/531" target="_blank" rel="noopener">More &gt;&gt;</a></p></li></ol><p><br></p><ol start="3"><li><h5 id="自定义文章目录级数"><a href="#自定义文章目录级数" class="headerlink" title="自定义文章目录级数"></a>自定义文章目录级数</h5><pre><code>h1      # h2      ## h3      ### h4      #### </code></pre><p>我的标题从h2开始。</p><pre><code>## 十四、文章目录### 1.取消文章目录自动编号#### 修改themes/next/_config.yml文件toc属性  </code></pre><p>不喜欢阅读的时候左边目录一直动,也不喜欢目录全部显示。想要只显示大标题的效果</p><pre><code>一、修改Next主题模式二、设置首页预览摘要三、侧边栏显示效果...</code></pre><p>没有Google到解决方法,以下方法是自己乱改的！！！</p><p><br></p><blockquote><p>修改根目录下/node_modules/hexo/lib/plugins/helper/toc.js</p></blockquote><pre><code>/*修改前*/const headingsMaxDepth = options.hasOwnProperty(&apos;max_depth&apos;) ? options.max_depth : 6;/*修改后*/const headingsMaxDepth = options.hasOwnProperty(&apos;max_depth&apos;) ? options.max_depth : 2;</code></pre></li></ol><p><br></p><h2 id="十五、博文置顶"><a href="#十五、博文置顶" class="headerlink" title="十五、博文置顶"></a>十五、博文置顶</h2><ol><li><h5 id="修改-node-modules-hexo-generator-index-lib-generator-js-文件"><a href="#修改-node-modules-hexo-generator-index-lib-generator-js-文件" class="headerlink" title="修改 node_modules/hexo-generator-index/lib/generator.js 文件"></a>修改 node_modules/hexo-generator-index/lib/generator.js 文件</h5><p>代码全部替换为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">    var config = this.config;</span><br><span class="line">    var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">    if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">        if(a.top == b.top) </span><br><span class="line">            return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">        else </span><br><span class="line">            return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else </span><br><span class="line">            return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">        &#125;);</span><br><span class="line">        var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">        return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">            perPage: config.index_generator.per_page,</span><br><span class="line">            layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">            format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                __index: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="2"><li><h5 id="在文章添加top字段"><a href="#在文章添加top字段" class="headerlink" title="在文章添加top字段"></a>在文章添加top字段</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我是置顶博文</span><br><span class="line">date: 2018-07-18 21:30:35</span><br><span class="line">tags: 留言板</span><br><span class="line">categories: hotYan_博客之路</span><br><span class="line">top: 100                   //值越大,越靠前</span><br><span class="line">commentIssueId: 1</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><p><br></p><h2 id="十六、博客压缩"><a href="#十六、博客压缩" class="headerlink" title="十六、博客压缩"></a>十六、博客压缩</h2><blockquote><p>【<a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier</a>】</p></blockquote><p><br></p><h2 id="十七、精简部署命令"><a href="#十七、精简部署命令" class="headerlink" title="十七、精简部署命令"></a>十七、精简部署命令</h2><ol><li><h5 id="修改根目录下-package-json文件"><a href="#修改根目录下-package-json文件" class="headerlink" title="修改根目录下/package.json文件"></a>修改根目录下/package.json文件</h5><p>添加下面代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">        &quot;update&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><br></p><ol start="2"><li><h5 id="更新Hexo部署-1"><a href="#更新Hexo部署-1" class="headerlink" title="更新Hexo部署"></a>更新Hexo部署</h5><pre><code>$ npm run update</code></pre></li></ol><p><br></p><h2 id="十八、文章categories字段多级"><a href="#十八、文章categories字段多级" class="headerlink" title="十八、文章categories字段多级"></a>十八、文章categories字段多级</h2><ol><li><h5 id="写法一"><a href="#写法一" class="headerlink" title="写法一"></a>写法一</h5><pre><code>categories: [博客,Hexo]</code></pre></li></ol><p><br></p><ol start="2"><li><h5 id="写法二"><a href="#写法二" class="headerlink" title="写法二"></a>写法二</h5><pre><code>categories:         - 博客        - Hexo</code></pre></li></ol><p><br></p><ol start="3"><li><h5 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h5><ul><li>博客<ul><li>Next</li></ul></li></ul></li></ol><p><br></p><h2 id="十九、文章多个Tags字段值"><a href="#十九、文章多个Tags字段值" class="headerlink" title="十九、文章多个Tags字段值"></a>十九、文章多个Tags字段值</h2><p>写法同十八,表达意思不一样,tags表示多个标签,categories表示多级分类</p><p><br></p><h2 id="二十、SEO优化"><a href="#二十、SEO优化" class="headerlink" title="二十、SEO优化"></a>二十、SEO优化</h2><p>我只进行了GoogleSEO优化,好的参考链接有很多,便不重复总结一遍。这个<a href="https://hoxis.github.io/Hexo+Next%20SEO%E4%BC%98%E5%8C%96.html" target="_blank" rel="noopener">参考链接</a>总结的非常全面仔细,连我踩得坑都一模一样(HTML上传一直验证失败,最后选择的HTML标记验证)。其中【网站结构自身优化】部分,很全面。👍👍</p><h4 id="BUT"><a href="#BUT" class="headerlink" title="BUT"></a>BUT</h4><p>建议把</p><pre><code>permalink: :title.html</code></pre><p>修改为</p><pre><code>permalink: :title/</code></pre><p>避免出现想跳转到页面某个特定位置时找不到(即出现404界面)</p><p>修改后:</p><ol><li><p>文章将全部移到public根目录下,后面文章越来越多…github【code】部分列表将越来越长！逼死强迫症患者！</p></li><li><p>文章的阅读量将从0重新统计！！！💔</p></li><li><p>现链接格式必须改为<code>yoursite.com/title/</code>,之前贴的链接将失效。</p></li></ol><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;优化博客-持续完善&quot;&gt;&lt;a href=&quot;#优化博客-持续完善&quot; class=&quot;headerlink&quot; title=&quot;优化博客 [持续完善]&quot;&gt;&lt;/a&gt;优化博客 &lt;span style=&quot;font-size:.5em&quot;&gt;[持续完善]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;搜索了很多Next主题的效果，总结了自己比较喜欢或者已运用到Blog的效果~&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hotYan_博客之路" scheme="https://hotkang.cn/categories/hotYan-%E5%8D%9A%E5%AE%A2%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="Hexo" scheme="https://hotkang.cn/tags/Hexo/"/>
    
      <category term="博客" scheme="https://hotkang.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Next" scheme="https://hotkang.cn/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Mac Use Homebrew Install Mongodb</title>
    <link href="https://hotkang.cn/2018/use%20homebrew%20install%20mongodb/"/>
    <id>https://hotkang.cn/2018/use homebrew install mongodb/</id>
    <published>2018-05-29T07:38:51.000Z</published>
    <updated>2018-08-03T08:38:33.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac-Use-Homebrew-Install-Mongodb-完结"><a href="#Mac-Use-Homebrew-Install-Mongodb-完结" class="headerlink" title="Mac Use Homebrew Install Mongodb [完结]"></a>Mac Use Homebrew Install Mongodb <span style="font-size:.5em">[完结]</span></h2><blockquote><p>图书管理系统,一开始是打算用Express+ejs+Mongodb,但是后期,使用mongoose出现了问题,尝试解决,没有成功后,就放弃了,转而使用Mysql。将安装过程记录一下。</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接,以下内容作为我的个人记录,以我的角度去记录,总结。</p><ul><li><a href="https://brew.sh/" target="_blank" rel="noopener">homebrew官网</a></li><li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/Homebrew/index.html" target="_blank" rel="noopener">参考链接</a></li></ul></blockquote><hr><h2 id="一、安装Homebrew"><a href="#一、安装Homebrew" class="headerlink" title="一、安装Homebrew"></a>一、安装Homebrew</h2><p>打开Terminal并运行以下命令</p><pre><code>$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></pre><p>【注意】 Homebrew将作为安装过程的一部分下载并安装Xcode 8.0的命令行工具。</p><p><br></p><h2 id="二、安装MongoDB"><a href="#二、安装MongoDB" class="headerlink" title="二、安装MongoDB"></a>二、安装MongoDB</h2><ol><li><p>运行以下命令进行安装mongodb</p><pre><code>$ brew install mongodb</code></pre></li><li><p>将mongodb升级，确保版本最新</p><pre><code>$ brew upgrade mongodb</code></pre></li><li><p>创建一个目录，用来保存mongo默认的数据</p><pre><code>$ mkdir -p /data/db</code></pre></li><li><p>给目录以可读可写的权限</p><pre><code>$ chown `id -u` /data/db</code></pre></li><li><p>启动</p><pre><code>$ brew services start mongodb</code></pre></li></ol><p><br></p><h2 id="三、未正常关闭导致数据库突然启动不了"><a href="#三、未正常关闭导致数据库突然启动不了" class="headerlink" title="三、未正常关闭导致数据库突然启动不了"></a>三、未正常关闭导致数据库突然启动不了</h2><ol><li>删除掉mongod.lock文件，然后重新启动</li></ol><ol start="2"><li><p>如果还是不可以，先查看一下进程</p><pre><code>$ ps -aef | grep mongo</code></pre></li><li><p>然后根据进程ID杀掉进程</p><pre><code>$ sudo kill 6955</code></pre></li><li><p>重新启动mongodb服务</p><pre><code>$ brew services start mongodb</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mac-Use-Homebrew-Install-Mongodb-完结&quot;&gt;&lt;a href=&quot;#Mac-Use-Homebrew-Install-Mongodb-完结&quot; class=&quot;headerlink&quot; title=&quot;Mac Use Homebrew Install Mongodb [完结]&quot;&gt;&lt;/a&gt;Mac Use Homebrew Install Mongodb &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;图书管理系统,一开始是打算用Express+ejs+Mongodb,但是后期,使用mongoose出现了问题,尝试解决,没有成功后,就放弃了,转而使用Mysql。将安装过程记录一下。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Install" scheme="https://hotkang.cn/categories/Install/"/>
    
      <category term="Mongodb" scheme="https://hotkang.cn/categories/Install/Mongodb/"/>
    
    
      <category term="Homebrew" scheme="https://hotkang.cn/tags/Homebrew/"/>
    
      <category term="Mongodb" scheme="https://hotkang.cn/tags/Mongodb/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建github博客一</title>
    <link href="https://hotkang.cn/2018/%E7%94%A8hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E4%B8%80/"/>
    <id>https://hotkang.cn/2018/用hexo搭建github博客一/</id>
    <published>2018-05-29T07:38:51.000Z</published>
    <updated>2018-08-04T06:54:34.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建博客-完结"><a href="#搭建博客-完结" class="headerlink" title="搭建博客 [完结]"></a>搭建博客 <span style="font-size:.5em">[完结]</span></h2><blockquote><p>一直想搭个人博客,却无从下手？？</p></blockquote><a id="more"></a><p><br></p><h2 id="链接自取"><a href="#链接自取" class="headerlink" title="链接自取"></a>链接自取</h2><blockquote><p>个人比较喜欢先甩参考链接,可以选择直接去看参考链接。</p><ul><li><a href="http://dmkf.xyz/2017/03/12/6272440/" target="_blank" rel="noopener">参考教程1</a></li><li><a href="https://sunny73.github.io/2018/02/10/Build-my-first-blog/" target="_blank" rel="noopener">参考教程2</a></li><li><a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo官网文档</a></li></ul><p>第二个链接也是参考第一个写的,第一个链接加载超级慢,可以选择看第二个。</p></blockquote><hr><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ol><li><h5 id="默认已有GitHub账号"><a href="#默认已有GitHub账号" class="headerlink" title="默认已有GitHub账号"></a>默认已有GitHub账号</h5><ul><li>没有GitHub账号？？<a href="https://github.com/" target="_blank" rel="noopener">点击注册</a></li></ul></li></ol><p><br></p><ol start="2"><li><h5 id="默认已安装Git"><a href="#默认已安装Git" class="headerlink" title="默认已安装Git"></a>默认已安装Git</h5><ul><li>没有安装Git？？<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">了解如何安装</a></li></ul></li></ol><p><br></p><ol start="3"><li><h5 id="默认已安装-Node-js"><a href="#默认已安装-Node-js" class="headerlink" title="默认已安装 Node.js"></a>默认已安装 Node.js</h5><ul><li>没有安装Node.js??<a href="https://hotyan.github.io/2018/%E7%94%A8nvm%E8%A3%85node-js/" target="_blank" rel="noopener">了解如何安装</a></li></ul></li></ol><p><br></p><ol start="4"><li><h5 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h5><ul><li><p>全局下载hexo</p><pre><code>$ npm install -g hexo-cli</code></pre></li><li><p>查看是否成功</p><pre><code>$ hexo</code></pre><p>进入<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo官网文档</a>了解更多</p></li></ul></li></ol><p><br></p><h2 id="二、初始化博客"><a href="#二、初始化博客" class="headerlink" title="二、初始化博客"></a>二、初始化博客</h2><pre><code>$ hexo init HotYan_Bolg //创建一个放在博客项目的文件$ cd HotYan_Bolg       //进入该文件$ npm install       //安装依赖包</code></pre><p><br>进入HotYan_Bolg,已自动生成以下文件</p><pre><code>.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes</code></pre><p><br></p><h2 id="三、本地搭建"><a href="#三、本地搭建" class="headerlink" title="三、本地搭建"></a>三、本地搭建</h2><ol><li><h5 id="修改-config-yml文件"><a href="#修改-config-yml文件" class="headerlink" title="修改_config.yml文件"></a>修改_config.yml文件</h5><p>根据个人情况修改以下部分:</p><pre><code>/*修改前*/# Site  title: # The title of your website  subtitle: # The subtitle of your website  description: # The description of your website  author: # Your name  language: # The language of your website  timezone:/*修改后*/# Site  title: hotYan&apos;s Blog   subtitle: 爱美的程序媛  description: 毒鸡汤Yan  keywords:  author: hotYan  language: zh-CN  timezone: Asia/Shanghai</code></pre><p>注意:每一项的填写,其 <strong>:</strong> 后面都要保留一个空格,下同。</p></li></ol><p><br></p><ol start="2"><li><h5 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h5><pre><code>$ cd  HotYan_Blog //进入博客文件夹目录$ hexo generate // 生成文件$ hexo server   //本地部署/*简写如下*/$ hexo g$ hexo s</code></pre><p>可在浏览器输入地址 <code>http://host:4000</code>进行查看</p></li></ol><p><br></p><h2 id="四、配置远程环境-线上运行"><a href="#四、配置远程环境-线上运行" class="headerlink" title="四、配置远程环境,线上运行"></a>四、配置远程环境,线上运行</h2><ol><li><h5 id="github新建一个库"><a href="#github新建一个库" class="headerlink" title="github新建一个库"></a>github新建一个库</h5><pre><code>库名格式为: username.github.io //非常重要！！！</code></pre><p>你可能想了解一下<a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a></p></li></ol><p><br></p><ol start="2"><li><h5 id="GitHub添加SSH密钥"><a href="#GitHub添加SSH密钥" class="headerlink" title="GitHub添加SSH密钥"></a><a href="https://hotkang.cn/2018/Github%E6%B7%BB%E5%8A%A0SSH%E5%AF%86%E9%92%A5/">GitHub添加SSH密钥</a></h5></li></ol><p><br></p><ol start="3"><li><h5 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h5><ul><li><p>配置统一资源定位符（个人域名）</p><pre><code>/*配置前*/# URL# If your site is put in a subdirectory, .....url: http://yoursite.com/child/*配置后*/  # URL# If your site is put in a subdirectory,......url: http://github.com</code></pre></li><li><p>配置部署</p><pre><code># Deployment# Docs: https://hexo.io/docs/deployment.html  deploy:      type: git       repo: https://github.com/hotYan/hotYan.github.io.git  //repo项是之前Github上创建好的仓库地址      branch: master</code></pre></li></ul></li></ol><p><br></p><ol start="4"><li><h5 id="线上运行"><a href="#线上运行" class="headerlink" title="线上运行"></a>线上运行</h5><pre><code>$ cd  HotYan_Blog //进入博客文件夹目录$ hexo generate // 生成文件$ hexo deploy   // 线上部署/*简写如下*/$ hexo g$ hexo d</code></pre><p>可在浏览器输入博客地址 <code>https://hotyan.github.io/</code> 进行查看</p></li></ol><p><br></p><h2 id="五、修改主题"><a href="#五、修改主题" class="headerlink" title="五、修改主题"></a>五、修改主题</h2><ol><li><h5 id="下载Next主题"><a href="#下载Next主题" class="headerlink" title="下载Next主题"></a><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">下载Next主题</a></h5></li><li><h5 id="下载后-将压缩包解压缩-复制其中名称为next的文件夹到你博客文件的themes下"><a href="#下载后-将压缩包解压缩-复制其中名称为next的文件夹到你博客文件的themes下" class="headerlink" title="下载后,将压缩包解压缩,复制其中名称为next的文件夹到你博客文件的themes下"></a>下载后,将压缩包解压缩,复制其中名称为next的文件夹到你博客文件的themes下</h5></li><li><h5 id="修改博客文件根目录下的-config-yml-将主题改为next"><a href="#修改博客文件根目录下的-config-yml-将主题改为next" class="headerlink" title="修改博客文件根目录下的_config.yml,将主题改为next"></a>修改博客文件根目录下的_config.yml,将主题改为next</h5><pre><code># Extensions# Plugins: https://hexo.io/plugins/# Themes: https://hexo.io/themes/# theme: landscape  theme: next   </code></pre></li></ol><p><br></p><h2 id="六、创建新文章"><a href="#六、创建新文章" class="headerlink" title="六、创建新文章"></a>六、创建新文章</h2><ol><li><h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><pre><code>$ cd  HotYan_Blog   //进入博客文件夹目录$ hexo new &quot;用hexo搭建github博客一&quot;  // 新建一篇文章</code></pre><p>可在博客文件夹下的source/_post查看你新建的markdown文件</p></li></ol><p><br></p><ol start="2"><li><h5 id="编写内容"><a href="#编写内容" class="headerlink" title="编写内容"></a>编写内容</h5><p>如果不清楚如何编写markdown文件,你可能需要先了解一下。</p><ul><li><a href="https://github.com/younghz/Markdown" target="_blank" rel="noopener">参考链接1</a></li><li><a href="http://xianbai.me/learn-md/article/syntax/blockquotes.html" target="_blank" rel="noopener">参考链接2</a></li></ul></li></ol><p><br></p><h2 id="七、更新Hexo部署"><a href="#七、更新Hexo部署" class="headerlink" title="七、更新Hexo部署"></a>七、更新Hexo部署</h2><pre><code>$ cd  HotYan_Blog //进入博客文件夹目录$ hexo clean    // 清理缓存$ hexo generate // 生成文件$ hexo deploy   // 线上部署/*简写如下*/$ hexo clean$ hexo g$ hexo d</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建博客-完结&quot;&gt;&lt;a href=&quot;#搭建博客-完结&quot; class=&quot;headerlink&quot; title=&quot;搭建博客 [完结]&quot;&gt;&lt;/a&gt;搭建博客 &lt;span style=&quot;font-size:.5em&quot;&gt;[完结]&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;一直想搭个人博客,却无从下手？？&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hotYan_博客之路" scheme="https://hotkang.cn/categories/hotYan-%E5%8D%9A%E5%AE%A2%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="Hexo" scheme="https://hotkang.cn/tags/Hexo/"/>
    
      <category term="博客" scheme="https://hotkang.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>高性能网站建设指南14条规则</title>
    <link href="https://hotkang.cn/2018/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE%E6%8C%87%E5%8D%9714%E6%9D%A1%E8%A7%84%E5%88%99/"/>
    <id>https://hotkang.cn/2018/高性能网站建设指南14条规则/</id>
    <published>2018-05-29T00:54:54.000Z</published>
    <updated>2018-07-10T11:03:36.002Z</updated>
    
    <content type="html"><![CDATA[<h2 id="14条常用性能规则-待完善"><a href="#14条常用性能规则-待完善" class="headerlink" title="14条常用性能规则[待完善]"></a>14条常用性能规则<span style="font-size:.5em">[待完善]</span></h2><p><img src="/img/XN.png" alt=""></p><a id="more"></a><h1 id="高性能网站建设指南"><a href="#高性能网站建设指南" class="headerlink" title="高性能网站建设指南"></a>高性能网站建设指南</h1><p>按照优先级顺序依次介绍14个性能规则</p><p><a href="#减少http请求"><code>1. 减少HTTP请求</code></a><br><a href="#使用内容分发网络cdn"><code>2. 使用内容分发网络CDN</code></a><br><a href="#添加Expires头"><code>3. 添加Expires头</code></a><br><a href="#压缩组件"><code>4. 压缩组件</code></a><br><a href="#将样式表放在顶部"><code>5. 将样式表放在顶部</code></a><br><a href="#将脚本放在底部"><code>6. 将脚本放在底部</code></a><br><a href="#避免使用css表达式"><code>7. 避免使用CSS表达式</code></a><br><a href="#使用外部JavaScript和CSS"><code>8. 使用外部JavaScript和CSS</code></a><br><a href="#减少dns查找"><code>9. 减少DNS查找</code></a><br><a href="#精简javascript"><code>10. 精简JavaScript</code></a><br><a href="#避免重定向"><code>11. 避免重定向</code></a><br><a href="#删除重复的脚本"><code>12. 删除重复的脚本</code></a><br><a href="#配置etags"><code>13. 配置ETags</code></a><br><a href="#使ajax可缓存"><code>14. 使Ajax可缓存</code></a></p><hr><p>终端用户响应时间的80％用于前端。大部分时间都在下载页面中的所有组件：图像、样式表、脚本、Flash等。</p><h2 id="减少HTTP请求"><a href="#减少HTTP请求" class="headerlink" title="减少HTTP请求"></a>减少HTTP请求</h2><ul><li><p>图片地图</p><ul><li><p>假设导航栏上有五幅图片，点击每张图片都会进入一个链接，这样五张导航的图片在加载时会产生5个HTTP请求。然而，使用一个图片地图可以提高效率，这样就只需要一个HTTP请求。</p><p><img src="/img/JL.png" alt=""></p></li><li>服务器端图片地图：将所有点击提交到同一个url，同时提交用户点击的x、y坐标，服务器端根据坐标映射响应</li><li>客户端图片地图：直接将点击映射到操作</li></ul></li><li><p>CSS Sprites ：将背景图像组合成单个图像</p><ul><li><p>优点 ：</p><pre><code>1.减少HTTP请求，响应时间短  2.图片数量变少，降低下载量</code></pre></li><li><p>方法：</p><pre><code>使用  CSSbackground-image  background-position  属性显示所需的图像片段。      </code></pre></li></ul></li></ul><ul><li><p>内内联图片</p><ul><li><p>使用 data:URL 模式，允许将小块数据内联为“立即数”，数据就在URL自身中。</p><pre><code>格式：data:[&lt;mediatype&gt;][;base64],&lt;data&gt;</code></pre><ul><li>合并脚本和样式表</li></ul></li><li>通过将所有脚本合并为一个脚本来减少HTTP请求数量的方法，同样也可以将所有CSS合并到一个样式表中，能够缩短响应时间。</li></ul></li></ul><h3 id="使用内容分发网络CDN"><a href="#使用内容分发网络CDN" class="headerlink" title="使用内容分发网络CDN"></a>使用内容分发网络CDN</h3><ul><li>用户与Web服务器的距离对响应时间有影响。在多个地理位置分散的服务器上部署您的内容将使您的网页从用户的角度更快加载。但是你应该从哪里开始？</li></ul><p>作为实现地理上分散的内容的第一步，不要尝试重新设计您的Web应用程序以在分布式架构中工作。根据应用程序的不同，更改体系结构可能包括艰巨的任务，例如同步会话状态和跨服务器位置复制数据库事务。尝试缩短用户与内容之间的距离可能会延迟或不能通过此应用程序体系结构步骤。</p><p>请记住，80-90％的最终用户响应时间用于下载页面中的所有组件：图像，样式表，脚本，Flash等。这是性能黄金法则。</p><p>不要从重新设计应用程序体系结构的艰巨任务开始，最好先分散您的静态内容。这不仅实现了响应时间的更大缩短，而且由于内容交付网络，这更容易实现。</p><p><code>内容传送网络（CDN）</code>是分布在多个位置的网络服务器的集合，以更高效地向用户传送内容。选择用于将内容递送给特定用户的服务器通常基于网络邻近度的度量。例如，选择网络跳数最少的服务器或响应时间最快的服务器。</p><p>一些大型互联网公司拥有自己的CDN，但使用CDN服务提供商（如Akamai Technologies，EdgeCast或level3）具有成本效益。对于创业公司和私人网站来说，CDN服务的成本可能会很高，但随着您的目标受众不断扩大并变得更加全球化，CDN是实现快速响应所必需的。</p><h3 id="添加Expires头"><a href="#添加Expires头" class="headerlink" title="添加Expires头"></a>添加Expires头</h3><p>这条规则有两个方面：</p><ul><li>对于静态组件：通过设置远期<code>Expires</code>标题实现“永不过期”策略</li><li>对于动态组件：使用适当的<code>Cache-Control</code>头文件来帮助浏览器提供有条件的请求</li></ul><p>网页设计越来越丰富，这意味着更多的脚本，样式表，图像和Flash在页面中。</p><p>首次访问您的页面可能需要发出多个HTTP请求，但通过使用Expires标头，可以使这些组件可缓存。这避免了后续页面浏览中不必要的HTTP请求。</p><p>过期标头最常用于图像，但它们应该用于所有组件，包括脚本，样式表和Flash组件。</p><p>浏览器（和代理）使用缓存来减少HTTP请求的数量和大小，使网页加载速度更快。<br>Web服务器使用HTTP响应中的Expires标头告诉客户端可以缓存组件的时间。</p><p>请记住，如果您使用远期未来的Expires头文件，则只要组件更改，就必须更改组件的文件名。</p><p>只有在用户已经访问过您的网站后，使用远期未来的Expires标题才会影响页面浏览。</p><p>当用户第一次访问您的网站并且浏览器的缓存为空时，它对HTTP请求的数量没有影响。</p><p>因此，这种性能改进的影响取决于用户多久访问一次带有缓冲区的页面。（一个“准备好的缓存”已经包含了页面中的所有组件。）我们在Yahoo!上测试了这一点。并发现带有引导缓存的页面浏览量为75-85％。通过使用远期未来的Expires标题，您可以增加浏览器缓存的组件数量，并在后续页面浏览中重新使用，而无需在用户的Internet连接上发送单个字节。</p><h3 id="Gzip压缩传输文件"><a href="#Gzip压缩传输文件" class="headerlink" title="Gzip压缩传输文件"></a>Gzip压缩传输文件</h3><p>通过网络传输HTTP请求和响应所需的时间可以通过前端工程师做出的决策大大减少。</p><p>确实，最终用户的带宽速度，互联网服务提供商，邻近对等交换点等是超出了开发团队的控制范围。</p><p>但还有其他一些影响响应时间的因素。</p><p>压缩通过减少HTTP响应的大小来缩短响应时间。</p><p>从HTTP / 1.1开始，Web客户端通过HTTP请求中的Accept-Encoding标头指示对压缩的支持。</p><pre><code>Accept-Encoding：gzip，deflate</code></pre><p>如果Web服务器在请求中看到该头部，则可能使用客户端列出的方法之一压缩响应。</p><p>Web服务器通过响应中的Content-Encoding标头通知Web客户端。</p><pre><code>内容编码：gzip</code></pre><blockquote><p>Gzip是目前最流行和最有效的压缩方法。它由GNU项目开发并由RFC 1952标准化。您可能会看到的唯一的其他压缩格式是压缩，但效果不太好，不太受欢迎。Gzipping通常将响应大小减少约70％。目前大约90％的互联网流量都通过声称支持gzip的浏览器。</p></blockquote><blockquote><p>浏览器和代理存在已知的问题，这些问题可能会导致浏览器期望的不匹配和接收到的有关压缩内容的不匹配。幸运的是，随着旧版浏览器的使用下降，这些边缘案例正在减少。Apache模块通过自动添加适当的Vary响应头来提供帮助。</p></blockquote><p>服务器根据文件类型选择要压缩的内容，但在决定压缩的内容时通常太有限。</p><p>大多数网站gzip他们的HTML文件。gzip脚本和样式表也是值得的，但很多网站都错过了这个机会。事实上，压缩包括XML和JSON的任何文本响应都是值得的。</p><p>图像和PDF文件不应该被压缩，因为它们已经被压缩。试图压缩它们不仅浪费CPU，而且可能会增加文件大小。</p><p>尽可能多地缩放文件类型是减少页面重量和加速用户体验的简单方法。</p><h3 id="将样式表放在顶部"><a href="#将样式表放在顶部" class="headerlink" title="将样式表放在顶部"></a>将样式表放在顶部</h3><p>将样式表移动到文档HEAD中,页面显示加载速度更快。这是因为将样式表放在HEAD中允许页面逐步呈现。这改善了整体用户体验。</p><p>将样式表放在文档底部附近的问题:它禁止在许多浏览器（包括Internet Explorer）中进行渐进式呈现。这些浏览器会阻止渲染，以避免在样式更改时重新绘制页面元素。用户停留在查看空白页面。</p><p>没有任何替代方案，空白屏幕或无风格内容的闪光都值得冒这个风险。最佳解决方案是遵循HTML规范，并将样式表加载到文档HEAD中。</p><h3 id="将脚本放在底部"><a href="#将脚本放在底部" class="headerlink" title="将脚本放在底部"></a>将脚本放在底部</h3><p>脚本导致的问题是它们会阻止并行下载。</p><p>在HTTP / 1.1规范建议的浏览器下载不超过两种组分在每主机名平行。如果您从多个主机名提供图像，则可以同时发生两个以上的下载。然而，当脚本正在下载时，浏览器将不会启动任何其他下载，即使是在不同的主机名上。</p><p>在某些情况下，将脚本移动到底部并不容易。例如，如果脚本用于document.write插入页面内容的一部分，则不能在页面中移动较小的内容。也可能存在范围问题。在很多情况下，有办法解决这些情况。</p><p>经常出现的另一个建议是使用延迟脚本。<br>该DEFER属性指示该脚本不包含document.write，并且是浏览器可以继续呈现的线索。不幸的是，Firefox不支持该DEFER属性。在Internet Explorer中，该脚本可能会延迟，但不如预期的那么多。如果脚本可以被延期，它也可以被移动到页面的底部。这会让你的网页加载速度更快。</p><h3 id="避免使用CSS表达式"><a href="#避免使用CSS表达式" class="headerlink" title="避免使用CSS表达式"></a>避免使用CSS表达式</h3><p>CSS表达式是动态设置CSS属性的强大（也是危险的）方法。<br>从版本5开始，它们在Internet Explorer中受支持，但从IE8开始已弃用。</p><p>表达式的问题在于它们比大多数人期望的更频繁地进行评估。</p><p>减少CSS表达式评估次数的一种方法是使用一次性表达式，第一次评估表达式时，它将style属性设置为一个显式值，该值将替换CSS表达式。</p><p>如果样式属性必须在页面的整个生命周期中动态设置，则使用事件处理程序而不是CSS表达式是一种替代方法。</p><p>如果您必须使用CSS表达式，请记住它们可能会被评估数千次，并且可能会影响页面的性能。</p><h3 id="使用外部JavaScript和CSS"><a href="#使用外部JavaScript和CSS" class="headerlink" title="使用外部JavaScript和CSS"></a>使用外部JavaScript和CSS</h3><p>许多这些性能规则涉及如何管理外部组件。但是，在出现这些问题之前，您应该提出一个更基本的问题：JavaScript和CSS应该包含在外部文件中还是包含在页面本身中？</p><p>在现实世界中<code>使用外部文件通常会产生更快的页面</code>，因为浏览器会缓存JavaScript和CSS文件。</p><ul><li>内联的JavaScript和CSS: 减少HTTP请求数量，增加了HTML文档的大小。</li><li>JavaScript和CSS位于浏览器缓存的外部文件中：HTML文档的大小会减少，不会增加HTTP请求的数量。</li></ul><blockquote><p>关键因素是外部JavaScript和CSS组件相对于所请求HTML文档数量的缓存频率。这个因素尽管难以量化，但可以使用各种指标进行衡量。如果您的网站上的用户每个会话有多个页面浏览量，并且许多网页重复使用相同的脚本和样式表，则缓存的外部文件可能带来更大的潜在收益。</p></blockquote><p>许多网站都处于这些指标的中间。对于这些网站，最好的解决方案通常是将JavaScript和CSS作为外部文件进行部署。首选内联的唯一例外是主页，例如雅虎的首页和My Yahoo! 。每个会话只有很少（可能只有一个）页面视图的主页可能会发现内嵌JavaScript和CSS可以缩短最终用户的响应时间。</p><p>对于通常是许多页面视图中的第一个的首页，有一些技术可以利用内联提供的HTTP请求的减少以及通过使用外部文件实现的缓存优点。其中一种方法是在首页内嵌JavaScript和CSS，但在页面加载完成后动态下载外部文件。后续页面将引用应该已经在浏览器缓存中的外部文件。</p><h3 id="减少DNS查找"><a href="#减少DNS查找" class="headerlink" title="减少DNS查找"></a>减少DNS查找</h3><p><code>域名系统（DNS）</code>将主机名映射到IP地址，就像电话本将人名映射到他们的电话号码一样。<br>当您在浏览器中输入<a href="http://www.yahoo.com时，浏览器联系的DNS解析器会返回该服务器的IP地址。" target="_blank" rel="noopener">www.yahoo.com时，浏览器联系的DNS解析器会返回该服务器的IP地址。</a><br>DNS有成本。DNS通常需要20-120毫秒才能查找给定主机名的IP地址。直到DNS查找完成后，浏览器才能从此主机名下载任何内容。</p><p>DNS查找缓存以获得更好的性能。这种高速缓存可以发生在用户的ISP或局域网维护的特殊高速缓存服务器上，但也可以在个人用户的计算机上进行高速缓存。DNS信息保留在操作系统的DNS缓存中（Microsoft Windows上的“DNS客户端服务”）。大多数浏览器都有自己的缓存，与操作系统的缓存分开。只要浏览器在自己的缓存中保存了一条DNS记录，它就不会打扰操作系统请求记录。</p><p>按照DnsCacheTimeout注册表设置的指定，Internet Explorer默认缓存DNS查找30分钟 。Firefox缓存DNS查找1分钟，由network.dnsCacheExpiration配置设置控制。（Fasterfox将此更改为1小时。）</p><p>当客户端的DNS缓存为空（对于浏览器和操作系统）时，DNS查找的数量等于网页中唯一主机名的数量。这包括页面URL，图像，脚本文件，样式表，Flash对象等中使用的主机名。减少唯一主机名的数量可减少DNS查找的数量。</p><p>减少唯一主机名的数量有可能减少页面中发生的并行下载量。避免DNS查找会缩短响应时间，但减少并行下载可能会增加响应时间。我的准则是将这些组件分成至少两个但不超过四个主机名。这在减少DNS查找和允许高度并行下载之间取得了很好的折衷。</p><h3 id="精简JavaScript"><a href="#精简JavaScript" class="headerlink" title="精简JavaScript"></a>精简JavaScript</h3><ul><li>在JavaScript的情况下，由于下载文件的大小减小，这提高了响应时间性能。</li><li>从代码中移除不必要的字符以减少其大小，减少加载时间。</li><li><p>减少JavaScript 文件大小的有几种手段:</p><ul><li><p>精简:去除JavaScript代码中的空格、注释等多余的字符，这种方式基本上没有什么缺点。</p></li><li><p>混淆:在精简的基础上，把函数、变量名都用较短小的字符来替换，从而达到减少文件大小的效果。</p></li><li>但是混淆会产生不少麻烦，很有可能会引入错误，虽然有利于防止逆向工程，当同时也增加了自己在线上环境调试的难度。</li><li>现在普遍的做法是发布前利用 Gulp、Grunt等自动化构建工具对资源进行压缩。</li></ul></li></ul><h3 id="避免重定向"><a href="#避免重定向" class="headerlink" title="避免重定向"></a>避免重定向</h3><p>重定向是使用301和302状态码完成的。</p><p>浏览器会自动将用户转到该Location字段中指定的URL 。重定向所需的所有信息都在标题中,响应的主体通常是空的。</p><p>尽管名称不同，301和302响应在实践中都不会被缓存，除非额外的标头（例如Expires或Cache-Control）指示它应该是。</p><p>元刷新标记和JavaScript是将用户引导到不同URL的其他方式，但是如果您必须执行重定向，首选方法是使用标准的3xx HTTP状态代码，主要是为了确保后退按钮正常工作。</p><p>要记住的重点是<code>重定向会减慢用户体验</code>。在用户和HTML文档之间插入重定向会延迟页面中的所有内容，因为可以呈现页面中的任何内容，并且在HTML文档到达之前不会开始下载任何组件。</p><p>将旧网站连接到新网站是重定向的另一个常见用途。</p><p>其他包括连接网站的不同部分，并根据特定条件（浏览器类型，用户帐户类型等）指导用户。</p><p>使用重定向来连接两个网站很简单，只需要很少的附加编码。虽然在这些情况下使用重定向会降低开发人员的复杂性，但会降低用户体验。</p><p>这种重定向的替代方案包括使用Alias和mod_rewrite如果两个代码路径托管在同一台服务器上。</p><p>如果域名更改是使用重定向的原因，另一种方法是创建一个CNAME（一个DNS记录，用于创建一个别名从一个域名指向另一个域名）与Alias或mod_rewrite。</p><h3 id="删除重复的脚本"><a href="#删除重复的脚本" class="headerlink" title="删除重复的脚本"></a>删除重复的脚本</h3><p>在一个页面中包含两次相同的JavaScript文件会使性能受损。</p><p>当它发生时，通过创建不必要的HTTP请求和浪费JavaScript执行，重复脚本会损害性能。</p><p>不必要的HTTP请求发生在Internet Explorer中，但不在Firefox中。</p><p>在Internet Explorer中，如果外部脚本包含两次并且不可缓存，则会在加载页面期间生成两个HTTP请求。如果脚本可缓存，当用户重新加载页面时也会发生额外的HTTP请求。</p><p>除了生成浪费的HTTP请求之外，还会浪费多次时间评估脚本。无论脚本是否可缓存，此冗余JavaScript执行都会在Firefox和Internet Explorer中发生。</p><h3 id="配置ETags"><a href="#配置ETags" class="headerlink" title="配置ETags"></a>配置ETags</h3><p>实体标签（ETags）是Web服务器和浏览器用来确定浏览器缓存中的组件是否与源服务器上的组件匹配的机制。（一个“实体”是另一个词“组件”：图像，脚本，样式表等）</p><p>ETag被添加来提供一种机制来验证比上一次修改日期更灵活的实体。</p><p>ETag是唯一标识组件特定版本的字符串。唯一的格式约束是字符串被引用。原始服务器使用ETag响应头指定组件的ETag 。</p><pre><code>HTTP / 1.1 200 OKLast-Modified：Tue，2006年12月12日03:03:59 GMTETag：“10c24bc-4ab-457e1c1f”内容长度：12195</code></pre><p>之后，如果浏览器必须验证组件，它将使用If-None-Match标头将ETag传递回原始服务器。如果ETags匹配，则返回一个304状态码，在此示例中将响应减少12195字节。</p><pre><code>GET /i/yahoo.gif HTTP / 1.1主持人：us.yimg.comIf-Modified-Since：星期二，2006年12月12日03:03:59 GMTIf-None-Match：“10c24bc-4ab-457e1c1f”HTTP / 1.1 304未修改</code></pre><p>ETags的问题在于，它们通常使用属性来构建，这些属性使它们对托管站点的特定服务器是唯一的。</p><p>当浏览器从一台服务器获取原始组件并稍后尝试在另一台服务器上验证该组件时，ETags将不匹配，这种情况在使用服务器集群处理请求的网站上非常常见。</p><p>虽然给定的文件可能位于多个服务器的相同目录中，并且具有相同的文件大小，权限，时间戳等，但其inode不同于一台服务器。</p><p>IIS 5.0和6.0与ETags有类似的问题。IIS上ETags的格式是Filetimestamp:ChangeNumber。A ChangeNumber是用于跟踪IIS配置更改的计数器。ChangeNumber在网站后面的所有IIS服务器上都不可能是相同的。</p><p>最终结果是由Apache和IIS生成的ETags完全相同的组件不会从一台服务器到另一台服务器进行匹配。如果ETags不匹配，用户不会收到ETags设计的小而快的304响应; 相反，他们会得到一个正常的200响应以及组件的所有数据。</p><p>如果您只在一台服务器上托管您的网站，这不是问题。但是，如果您有多台服务器托管您的网站，并且您使用的是默认的ETag配置的Apache或IIS，那么您的用户的页面速度会变慢，您的服务器的负载会更高，消耗的带宽也会更大，高效地缓存您的内容。即使你的组件有一个遥远的将来Expires头，当用户点击重新加载或刷新时，仍然会发出条件GET请求。</p><p>如果您没有充分利用ETags提供的灵活验证模型，最好完全删除ETag。</p><p>该Last-Modified头验证基于对组件的时间戳。</p><p>删除ETag可以减少响应和后续请求中HTTP头的大小。</p><h3 id="使Ajax可缓存"><a href="#使Ajax可缓存" class="headerlink" title="使Ajax可缓存"></a>使Ajax可缓存</h3><p>Ajax引用的好处之一是，它向用户提供即时反馈，因为它从后端Web服务器异步请求信息。但是，使用Ajax并不能保证用户不会在等待这些异步JavaScript和XML响应返回时扭动拇指。</p><p>在许多应用程序中，用户是否在等待取决于如何使用Ajax。例如，在基于Web的电子邮件客户端中，用户将不断等待Ajax请求的结果，以查找与其搜索条件匹配的所有电子邮件。记住“异步”并不意味着“即时”。</p><p>为了提高性能，优化这些Ajax响应非常重要。</p><p>提高Ajax性能的最重要方法是使响应可缓存，如<code>添加过期或缓存控制头</code>中所述。</p><ul><li>其他一些规则也适用于Ajax：<br>Gzip组件<br>减少DNS查找<br>缩小JavaScript<br>避免重定向<br>配置ETags</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;14条常用性能规则-待完善&quot;&gt;&lt;a href=&quot;#14条常用性能规则-待完善&quot; class=&quot;headerlink&quot; title=&quot;14条常用性能规则[待完善]&quot;&gt;&lt;/a&gt;14条常用性能规则&lt;span style=&quot;font-size:.5em&quot;&gt;[待完善]&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/XN.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="换个角度看性能优化" scheme="https://hotkang.cn/categories/%E6%8D%A2%E4%B8%AA%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="性能优化" scheme="https://hotkang.cn/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>7类35条网页性能优化</title>
    <link href="https://hotkang.cn/2018/7%E7%B1%BB35%E6%9D%A1%E7%BD%91%E9%A1%B5%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>https://hotkang.cn/2018/7类35条网页性能优化/</id>
    <published>2018-05-29T00:52:55.000Z</published>
    <updated>2018-07-19T15:42:13.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="小结于"><a href="#小结于" class="headerlink" title="小结于"></a>小结于</h2><blockquote><p><a href="https://developer.yahoo.com/performance/rules.html?guccounter=1#menu" target="_blank" rel="noopener">参考链接</a></p></blockquote><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="一、内容"><a href="#一、内容" class="headerlink" title="一、内容"></a><a href="#内容">一、内容</a></h3><p><a href="#减少http请求次数"><code>1. 减少HTTP请求次数</code></a><br><a href="#减少dns查询次数"><code>2. 减少DNS查询次数</code></a><br><a href="#避免重定向"><code>3. 避免重定向</code></a><br><a href="#使ajax可缓存"><code>4. 使Ajax可缓存</code></a><br><a href="#延迟加载组件"><code>5. 延迟加载组件</code></a><br><a href="#预加载组件"><code>6. 预加载组件</code></a><br><a href="#减少dom元素的数量"><code>7. 减少DOM元素的数量</code></a><br><a href="#拆分组件跨域"><code>8. 拆分组件跨域</code></a><br><a href="#尽量减少iframe的数量"><code>9. 尽量减少iframe的数量</code></a><br><a href="#避免404"><code>10. 避免404</code></a></p><h3 id="二、CSS"><a href="#二、CSS" class="headerlink" title="二、CSS"></a><a href="#css">二、CSS</a></h3><p><a href="#将样式表放置在顶部"><code>11. 将样式表放置在顶部</code></a><br><a href="#避免使用css表达式"><code>12. 避免使用CSS表达式</code></a><br><a href="#用link替代import"><code>13. 用&lt;link&gt;替代@import</code></a><br><a href="#避免过滤器filters"><code>14. 避免过滤器Filters</code></a></p><h3 id="三、JavaScript"><a href="#三、JavaScript" class="headerlink" title="三、JavaScript"></a><a href="#javascript">三、JavaScript</a></h3><p><a href="#将脚本放在底部"><code>15. 将脚本放在底部</code></a><br><a href="#使javascript和css在外部"><code>16. 使JavaScript和CSS在外部</code></a><br><a href="#精简javascript和css"><code>17. 精简JavaScript和CSS</code></a><br><a href="#删除重复的脚本"><code>18. 删除重复的脚本</code></a><br><a href="#最小化dom访问"><code>19. 最小化DOM访问</code></a><br><a href="#开发智能事件处理程序"><code>20. 开发智能事件处理程序</code></a></p><h3 id="四、图片"><a href="#四、图片" class="headerlink" title="四、图片"></a><a href="#图片">四、图片</a></h3><p><a href="#优化图像"><code>21. 优化图像</code></a><br><a href="#优化css精灵"><code>22. 优化CSS精灵</code></a><br><a href="#不要在html中缩放图像"><code>23. 不要在HTML中缩放图像</code></a><br><a href="#制作faviconicosmall和cacheable"><code>24. 制作favicon.ico Small和Cacheable</code></a></p><h3 id="五、Cookie"><a href="#五、Cookie" class="headerlink" title="五、Cookie"></a><a href="#cookie">五、Cookie</a></h3><p><a href="#减小cookie大小"><code>25. 减小Cookie大小</code></a><br><a href="#页面内容使用无cookie域"><code>26. 页面内容使用无Cookie域</code></a></p><h3 id="六、服务器"><a href="#六、服务器" class="headerlink" title="六、服务器"></a><a href="#服务器">六、服务器</a></h3><p><a href="#使用内容分发网络cdn"><code>27. 使用内容分发网络CDN</code></a><br><a href="#添加expires或cache-control标题"><code>28. 添加Expires或Cache-Control标题</code></a><br><a href="#gzip压缩传输文件"><code>29. Gzip压缩传输文件</code></a><br><a href="#配置etags"><code>30. 配置ETags</code></a><br><a href="#尽早flush输出"><code>31. 尽早flush输出</code></a><br><a href="#使用get获取ajax请求"><code>32. 使用GET获取AJAX请求</code></a><br><a href="#避免空图像src"><code>33. 避免空图像src</code></a></p><h3 id="七、手机"><a href="#七、手机" class="headerlink" title="七、手机"></a><a href="#手机">七、手机</a></h3><p><a href="#保持组件低于25k"><code>34. 保持组件低于25K</code></a><br><a href="#将组件打包成多部分文档"><code>35. 将组件打包成多部分文档</code></a></p><hr><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="减少HTTP请求次数"><a href="#减少HTTP请求次数" class="headerlink" title="减少HTTP请求次数"></a>减少HTTP请求次数</h3><p>终端用户响应时间的80％用于前端。大部分时间都在下载页面中的所有组件：图像、样式表、脚本、Flash等。<br>减少组件数量又会减少呈现页面所需的HTTP请求数量。这是更快页面的关键。</p><p>减少页面中组件数量的一种方法是简化页面的设计。但是，有没有办法构建更丰富的内容，同时实现快速响应时间？</p><p>以下是一些减少HTTP请求数量的技术，同时还支持丰富的页面设计。</p><ul><li><p><code>组合文件</code>是一种通过将所有脚本合并为一个脚本来减少HTTP请求数量的方法，同样也可以将所有CSS合并到一个样式表中。当脚本和样式表因页面而异时，将文件组合起来更具挑战性，但使发布过程的这一部分能够缩短响应时间。</p></li><li><p><code>CSS Sprites</code>是减少图片请求数量的首选方法。将背景图像组合成单个图像，并使用CSSbackground-image和background-position属性显示所需的图像片段。</p></li><li><p><code>图像映射</code>将多个图像组合成单个图像。整体大小大致相同，但减少HTTP请求的数量会加快页面的速度。仅当图像在页面中连续存在时（例如导航栏），图像映射才起作用。定义图像映射的坐标可能很乏味且容易出错。使用图像地图进行导航也无法访问，因此不推荐。</p></li><li><p><code>内联图像</code>使用data:URL方案将图像数据嵌入到实际页面中。这可以增加HTML文档的大小。将内嵌图像合并到缓存的样式表中是减少HTTP请求并避免增加页面大小的一种方法。所有主流浏览器都不支持内嵌图像。</p></li></ul><p>减少页面中的HTTP请求数量是开始的地方。这是提高初次访问者性能的最重要指导方针。</p><h3 id="减少DNS查询次数"><a href="#减少DNS查询次数" class="headerlink" title="减少DNS查询次数"></a>减少DNS查询次数</h3><p><code>域名系统（DNS）</code>将主机名映射到IP地址，就像电话本将人名映射到他们的电话号码一样。<br>当您在浏览器中输入<a href="http://www.yahoo.com时，浏览器联系的DNS解析器会返回该服务器的IP地址。" target="_blank" rel="noopener">www.yahoo.com时，浏览器联系的DNS解析器会返回该服务器的IP地址。</a><br>DNS有成本。DNS通常需要20-120毫秒才能查找给定主机名的IP地址。直到DNS查找完成后，浏览器才能从此主机名下载任何内容。</p><p>DNS查找缓存以获得更好的性能。这种高速缓存可以发生在用户的ISP或局域网维护的特殊高速缓存服务器上，但也可以在个人用户的计算机上进行高速缓存。DNS信息保留在操作系统的DNS缓存中（Microsoft Windows上的“DNS客户端服务”）。大多数浏览器都有自己的缓存，与操作系统的缓存分开。只要浏览器在自己的缓存中保存了一条DNS记录，它就不会打扰操作系统请求记录。</p><p>按照DnsCacheTimeout注册表设置的指定，Internet Explorer默认缓存DNS查找30分钟 。Firefox缓存DNS查找1分钟，由network.dnsCacheExpiration配置设置控制。（Fasterfox将此更改为1小时。）</p><p>当客户端的DNS缓存为空（对于浏览器和操作系统）时，DNS查找的数量等于网页中唯一主机名的数量。这包括页面URL，图像，脚本文件，样式表，Flash对象等中使用的主机名。减少唯一主机名的数量可减少DNS查找的数量。</p><p>减少唯一主机名的数量有可能减少页面中发生的并行下载量。避免DNS查找会缩短响应时间，但减少并行下载可能会增加响应时间。我的准则是将这些组件分成至少两个但不超过四个主机名。这在减少DNS查找和允许高度并行下载之间取得了很好的折衷。</p><h3 id="避免重定向"><a href="#避免重定向" class="headerlink" title="避免重定向"></a>避免重定向</h3><p>重定向是使用301和302状态码完成的。</p><p>浏览器会自动将用户转到该Location字段中指定的URL 。重定向所需的所有信息都在标题中,响应的主体通常是空的。</p><p>尽管名称不同，301和302响应在实践中都不会被缓存，除非额外的标头（例如Expires或Cache-Control）指示它应该是。</p><p>元刷新标记和JavaScript是将用户引导到不同URL的其他方式，但是如果您必须执行重定向，首选方法是使用标准的3xx HTTP状态代码，主要是为了确保后退按钮正常工作。</p><p>要记住的重点是<code>重定向会减慢用户体验</code>。在用户和HTML文档之间插入重定向会延迟页面中的所有内容，因为可以呈现页面中的任何内容，并且在HTML文档到达之前不会开始下载任何组件。</p><p>将旧网站连接到新网站是重定向的另一个常见用途。</p><p>其他包括连接网站的不同部分，并根据特定条件（浏览器类型，用户帐户类型等）指导用户。</p><p>使用重定向来连接两个网站很简单，只需要很少的附加编码。虽然在这些情况下使用重定向会降低开发人员的复杂性，但会降低用户体验。</p><p>这种重定向的替代方案包括使用Alias和mod_rewrite如果两个代码路径托管在同一台服务器上。</p><p>如果域名更改是使用重定向的原因，另一种方法是创建一个CNAME（一个DNS记录，用于创建一个别名从一个域名指向另一个域名）与Alias或mod_rewrite。</p><h3 id="使Ajax可缓存"><a href="#使Ajax可缓存" class="headerlink" title="使Ajax可缓存"></a>使Ajax可缓存</h3><p>Ajax引用的好处之一是，它向用户提供即时反馈，因为它从后端Web服务器异步请求信息。但是，使用Ajax并不能保证用户不会在等待这些异步JavaScript和XML响应返回时扭动拇指。</p><p>在许多应用程序中，用户是否在等待取决于如何使用Ajax。例如，在基于Web的电子邮件客户端中，用户将不断等待Ajax请求的结果，以查找与其搜索条件匹配的所有电子邮件。记住“异步”并不意味着“即时”。</p><p>为了提高性能，优化这些Ajax响应非常重要。</p><p>提高Ajax性能的最重要方法是使响应可缓存，如<code>添加过期或缓存控制头</code>中所述。</p><ul><li>其他一些规则也适用于Ajax：<br>Gzip组件<br>减少DNS查找<br>缩小JavaScript<br>避免重定向<br>配置ETags</li></ul><h3 id="延迟加载组件"><a href="#延迟加载组件" class="headerlink" title="延迟加载组件"></a>延迟加载组件</h3><p>你可以仔细看看你的页面，并问自己：“为了最初呈现页面，绝对需要什么？”。其余的内容和组件可以等待。</p><p>JavaScript是在onload事件之前和之后进行分割的理想人选。</p><p>例如，如果您有JavaScript代码和用于拖放和动画的库，则可以等待，因为在初始渲染之后拖动页面上的元素。其他要查找候选人进行后加载的地方包括隐藏内容（用户操作后显示的内容）和低于该对象的图像。</p><p>性能目标与其他Web开发最佳实践保持一致是很好的。在这种情况下，逐步增强的想法告诉我们，JavaScript在受支持的情况下可以改善用户体验，但是即使没有JavaScript，您也必须确保页面能够正常工作。</p><p>因此，在确保页面正常工作后，您可以使用一些后期加载的脚本来增强它，从而为您提供更多的细节和哨音，例如拖放和动画。</p><h3 id="预加载组件"><a href="#预加载组件" class="headerlink" title="预加载组件"></a>预加载组件</h3><p>预加载看起来可能与后加载相反，但它实际上有一个不同的目标。通过预加载组件，您可以利用浏览器闲置的时间以及将来需要的组件（如图像，样式和脚本）。通过这种方式，当用户访问下一页时，您可以将大部分组件都存储在缓存中，并且您的页面将为用户加载得更快。</p><p>实际上有几种类型的预加载：</p><ul><li><p>无条件预加载:只要onload激活，您就可以继续并获取一些额外的组件。</p></li><li><p>有条件预加载:根据用户操作，您可以根据用户的行为猜测下一个用户前进的位置并相应地进行预加载。</p></li><li>预期的预加载:在启动重新设计之前提前预加载。它经常发生在重新设计之后，您会听到：“新网站很酷，但速度比以前慢”。部分问题可能在于用户使用完全缓存访问旧网站，但新网站总是空的缓存体验。您甚至可以在启动重新设计之前通过预加载某些组件来减轻这种副作用。您的旧网站可以使用浏览器闲置的时间，并请求将由新网站使用的图像和脚本</li></ul><h3 id="减少DOM元素的数量"><a href="#减少DOM元素的数量" class="headerlink" title="减少DOM元素的数量"></a>减少DOM元素的数量</h3><p>复杂的页面意味着需要下载更多的字节，这也意味着JavaScript中的DOM访问速度较慢。例如，当您想要添加事件处理程序时，如果在页面上循环遍历500或5000个DOM元素，则会有所不同。</p><p>大量的DOM元素可能是一种症状，应该通过页面的标记来改善某些内容，而不必删除内容。</p><p>DOM元素的数量很容易测试，只需输入Firebug的控制台：<br>document.getElementsByTagName(‘*’).length</p><h3 id="拆分组件跨域"><a href="#拆分组件跨域" class="headerlink" title="拆分组件跨域"></a>拆分组件跨域</h3><p>拆分组件可让您最大限度地平行下载。由于DNS查找惩罚，请确保您使用的域不超过2-4个。</p><h3 id="尽量减少iframe的数量"><a href="#尽量减少iframe的数量" class="headerlink" title="尽量减少iframe的数量"></a>尽量减少iframe的数量</h3><p>Iframe允许将HTML文档插入到父文档中。了解iframe如何工作以便可以有效使用非常重要。</p><ul><li><p><code>&lt;iframe&gt;</code>优点：</p><ul><li>像徽章和广告等缓慢的第三方内容</li><li>安全沙箱</li><li>并行下载脚本</li></ul></li><li><p><code>&lt;iframe&gt;</code>缺点：</p><ul><li>即使空白也很昂贵</li><li>阻止页面载入</li><li>非语义</li></ul></li></ul><h3 id="避免404"><a href="#避免404" class="headerlink" title="避免404"></a>避免404</h3><p>HTTP请求很昂贵，因此提出HTTP请求并获得无用的响应（即404 Not Found）是完全没有必要的，并且会减慢用户体验而没有任何好处。</p><p>有些网站有帮助的404s“你的意思是X？”，这对用户体验很好，但也浪费了服务器资源（如数据库等）。特别糟糕的是，当到外部JavaScript的链接错误并且结果是404时。首先，此下载将阻止并行下载。接下来，浏览器可能会尝试解析404响应正文，就好像它是JavaScript代码一样，试图找到可用的东西。</p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="将样式表放置在顶部"><a href="#将样式表放置在顶部" class="headerlink" title="将样式表放置在顶部"></a>将样式表放置在顶部</h3><p>将样式表移动到文档HEAD中,页面显示加载速度更快。这是因为将样式表放在HEAD中允许页面逐步呈现。这改善了整体用户体验。</p><p>将样式表放在文档底部附近的问题:它禁止在许多浏览器（包括Internet Explorer）中进行渐进式呈现。这些浏览器会阻止渲染，以避免在样式更改时重新绘制页面元素。用户停留在查看空白页面。</p><p>没有任何替代方案，空白屏幕或无风格内容的闪光都值得冒这个风险。最佳解决方案是遵循HTML规范，并将样式表加载到文档HEAD中。</p><h3 id="避免使用CSS表达式"><a href="#避免使用CSS表达式" class="headerlink" title="避免使用CSS表达式"></a>避免使用CSS表达式</h3><p>CSS表达式是动态设置CSS属性的强大（也是危险的）方法。<br>从版本5开始，它们在Internet Explorer中受支持，但从IE8开始已弃用。</p><p>表达式的问题在于它们比大多数人期望的更频繁地进行评估。</p><p>减少CSS表达式评估次数的一种方法是使用一次性表达式，第一次评估表达式时，它将style属性设置为一个显式值，该值将替换CSS表达式。</p><p>如果样式属性必须在页面的整个生命周期中动态设置，则使用事件处理程序而不是CSS表达式是一种替代方法。</p><p>如果您必须使用CSS表达式，请记住它们可能会被评估数千次，并且可能会影响页面的性能。</p><h3 id="用-lt-link-gt-替代-import"><a href="#用-lt-link-gt-替代-import" class="headerlink" title="用&lt;link&gt;替代@import"></a>用<code>&lt;link&gt;</code>替代@import</h3><p>以前的最佳实践之一指出，为了允许渐进式渲染，CSS应该处于顶端。</p><p>在IE中的@import行为与<link>在页面底部使用的行为相同，因此最好不要使用它。</p><h3 id="避免过滤器Filters"><a href="#避免过滤器Filters" class="headerlink" title="避免过滤器Filters"></a>避免过滤器Filters</h3><p>IE专有AlphaImageLoader过滤器旨在解决IE版本&lt;7中的半透明真彩色PNG问题。该过滤器的问题在于，它会在图像下载时阻止渲染并冻结浏览器。它也增加了内存消耗，并且每个元素应用，而不是每个图像，因此问题倍增。</p><p>最好的方法是AlphaImageLoader完全避免使用PNG8而不是降级，这在IE中是很好的。如果您绝对需要AlphaImageLoader，请使用下划线黑客_filter来惩罚您的IE7 +用户。</p><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h3 id="将脚本放在底部"><a href="#将脚本放在底部" class="headerlink" title="将脚本放在底部"></a>将脚本放在底部</h3><p>脚本导致的问题是它们会阻止并行下载。</p><p>在HTTP / 1.1规范建议的浏览器下载不超过两种组分在每主机名平行。如果您从多个主机名提供图像，则可以同时发生两个以上的下载。然而，当脚本正在下载时，浏览器将不会启动任何其他下载，即使是在不同的主机名上。</p><p>在某些情况下，将脚本移动到底部并不容易。例如，如果脚本用于document.write插入页面内容的一部分，则不能在页面中移动较小的内容。也可能存在范围问题。在很多情况下，有办法解决这些情况。</p><p>经常出现的另一个建议是使用延迟脚本。<br>该DEFER属性指示该脚本不包含document.write，并且是浏览器可以继续呈现的线索。不幸的是，Firefox不支持该DEFER属性。在Internet Explorer中，该脚本可能会延迟，但不如预期的那么多。如果脚本可以被延期，它也可以被移动到页面的底部。这会让你的网页加载速度更快。</p><h3 id="使JavaScript和CSS在外部"><a href="#使JavaScript和CSS在外部" class="headerlink" title="使JavaScript和CSS在外部"></a>使JavaScript和CSS在外部</h3><p>许多这些性能规则涉及如何管理外部组件。但是，在出现这些问题之前，您应该提出一个更基本的问题：JavaScript和CSS应该包含在外部文件中还是包含在页面本身中？</p><p>在现实世界中<code>使用外部文件通常会产生更快的页面</code>，因为浏览器会缓存JavaScript和CSS文件。</p><ul><li>内联的JavaScript和CSS: 减少HTTP请求数量，增加了HTML文档的大小。</li><li>JavaScript和CSS位于浏览器缓存的外部文件中：HTML文档的大小会减少，不会增加HTTP请求的数量。</li></ul><blockquote><p>关键因素是外部JavaScript和CSS组件相对于所请求HTML文档数量的缓存频率。这个因素尽管难以量化，但可以使用各种指标进行衡量。如果您的网站上的用户每个会话有多个页面浏览量，并且许多网页重复使用相同的脚本和样式表，则缓存的外部文件可能带来更大的潜在收益。</p></blockquote><p>许多网站都处于这些指标的中间。对于这些网站，最好的解决方案通常是将JavaScript和CSS作为外部文件进行部署。首选内联的唯一例外是主页，例如雅虎的首页和My Yahoo! 。每个会话只有很少（可能只有一个）页面视图的主页可能会发现内嵌JavaScript和CSS可以缩短最终用户的响应时间。</p><p>对于通常是许多页面视图中的第一个的首页，有一些技术可以利用内联提供的HTTP请求的减少以及通过使用外部文件实现的缓存优点。其中一种方法是在首页内嵌JavaScript和CSS，但在页面加载完成后动态下载外部文件。后续页面将引用应该已经在浏览器缓存中的外部文件。</p><h3 id="精简JavaScript和CSS"><a href="#精简JavaScript和CSS" class="headerlink" title="精简JavaScript和CSS"></a>精简JavaScript和CSS</h3><ul><li>在JavaScript的情况下，由于下载文件的大小减小，这提高了响应时间性能。</li><li>从代码中移除不必要的字符以减少其大小，减少加载时间。</li><li><p>减少JavaScript 文件大小的有几种手段:</p><ul><li><p>精简:去除JavaScript代码中的空格、注释等多余的字符，这种方式基本上没有什么缺点。</p></li><li><p>混淆:在精简的基础上，把函数、变量名都用较短小的字符来替换，从而达到减少文件大小的效果。</p></li><li>但是混淆会产生不少麻烦，很有可能会引入错误，虽然有利于防止逆向工程，当同时也增加了自己在线上环境调试的难度。</li><li>现在普遍的做法是发布前利用 Gulp、Grunt等自动化构建工具对资源进行压缩。</li></ul></li></ul><h3 id="删除重复的脚本"><a href="#删除重复的脚本" class="headerlink" title="删除重复的脚本"></a>删除重复的脚本</h3><p>在一个页面中包含两次相同的JavaScript文件会使性能受损。</p><p>当它发生时，通过创建不必要的HTTP请求和浪费JavaScript执行，重复脚本会损害性能。</p><p>不必要的HTTP请求发生在Internet Explorer中，但不在Firefox中。</p><p>在Internet Explorer中，如果外部脚本包含两次并且不可缓存，则会在加载页面期间生成两个HTTP请求。如果脚本可缓存，当用户重新加载页面时也会发生额外的HTTP请求。</p><p>除了生成浪费的HTTP请求之外，还会浪费多次时间评估脚本。无论脚本是否可缓存，此冗余JavaScript执行都会在Firefox和Internet Explorer中发生。</p><h3 id="最小化DOM访问"><a href="#最小化DOM访问" class="headerlink" title="最小化DOM访问"></a>最小化DOM访问</h3><p>使用JavaScript访问DOM元素很慢，所以为了获得更响应的页面，您应该：</p><ul><li>缓存对访问元素的引用</li><li>更新节点“脱机”，然后将它们添加到树中</li><li>避免使用JavaScript修复布局</li></ul><h3 id="开发智能事件处理程序"><a href="#开发智能事件处理程序" class="headerlink" title="开发智能事件处理程序"></a>开发智能事件处理程序</h3><p>有时由于过多的事件处理程序附加到DOM树的不同元素上，而这些事件处理程序过于频繁地执行，有时页面的响应速度会降低 这就是为什么使用事件授权是一个好方法。</p><p>如果在a中有10个按钮div，则只将一个事件处理程序附加到div包装器，而不是每个按钮的一个处理程序。事件冒泡，所以你可以捕捉事件并找出它起源于哪个按钮。</p><p>您也不需要等待onload事件才能开始使用DOM树进行操作。通常你需要的是你想访问的元素在树中可用。您不必等待下载所有图像。</p><p>DOMContentLoaded是您可能考虑使用而不是onload的事件.</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><h3 id="优化图像"><a href="#优化图像" class="headerlink" title="优化图像"></a>优化图像</h3><ul><li><p>减少图像周围的空白。 一些开发人员使用空白的填充这是万万要不得的。裁剪图像，删除图像周围任何空白，并使用CSS来填充。</p></li><li><p>使用正确的文件格式。如果你有图标，或者没有太多颜色的图形，可以保存为GIF这种较少颜色的图形。如果你有更详细的图形，可以使用JPG文件格式，降低质量保存图像。</p></li><li>以适当的尺寸保存图像。如果您正在使用HTML和CSS来调整您的图像，那么不要这样。以期望的大小保存你的图像，从而减少文件大小。</li></ul><blockquote><p>恰当的图片格式：</p><ul><li>PNG格式几乎一直优于GIF格式，尽管某些旧版浏览器只能为PNG格式提供部分支持。</li><li>为较小或简单的图形（例如，小于10x10像素的图形或调色板小于3色的图形）以及包含动画的图片使用GIF格式。</li><li>为所有摄影风格的图片使用JPG格式。</li><li>请勿使用BMP格式或TIFF格式。</li></ul></blockquote><h3 id="优化CSS精灵"><a href="#优化CSS精灵" class="headerlink" title="优化CSS精灵"></a>优化CSS精灵</h3><p>一种网页图片应用处理方式。允许你将一个页面涉及到的所有零星图片都包含到一张大图中去，再利用CSS的以下属性精确的定位出背景图片的位置。</p><blockquote><p>background-image<br>background- repeat<br>background-position</p></blockquote><h3 id="不要在HTML中缩放图像"><a href="#不要在HTML中缩放图像" class="headerlink" title="不要在HTML中缩放图像"></a>不要在HTML中缩放图像</h3><p>指定所有图片的宽度和高度可以加速渲染，因为省去了不必要的回流和重绘。</p><h3 id="制作favicon-icoSmall和Cacheable"><a href="#制作favicon-icoSmall和Cacheable" class="headerlink" title="制作favicon.icoSmall和Cacheable"></a>制作<code>favicon.icoSmall</code>和Cacheable</h3><p>favicon.ico是保留在服务器根目录中的映像。这是一个必要的罪恶，因为即使你不关心它，浏览器仍然会请求它，所以最好不要回应404 Not Found。</p><p>另外，由于它位于同一台服务器上，每次请求时都会发送Cookie。此图片还会干扰下载顺序，例如在IE中，当您在onload中请求额外的组件时，favicon会在这些额外的组件之前下载。</p><p>因此，要减轻拥有favicon.ico的缺点，请确保：</p><ul><li>它很小，最好在1K以下。</li><li>设置过期标题与你感觉舒适（因为你不能重命名，如果你决定改变它）。您几乎可以在将来几个月安全地设置Expires标题。您可以查看您当前的favicon.ico的最后修改日期，以做出明智的决定。</li><li>Imagemagick可以帮助您创建小型图标</li></ul><h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><h3 id="减小Cookie大小"><a href="#减小Cookie大小" class="headerlink" title="减小Cookie大小"></a>减小Cookie大小</h3><p>HTTP cookie由于各种原因（如身份验证和个性化）而被使用。有关cookie的信息在Web服务器和浏览器之间的HTTP标头中交换。尽可能降低cookies的大小以尽量减少对用户响应时间的影响，这一点很重要。</p><ul><li>消除不必要的cookie</li><li>尽可能降低Cookie大小，以尽量减少对用户响应时间的影响</li><li>请注意在适当的域级别设置cookie，以便其他子域不受影响</li><li>适当设置过期日期。更早的过期日期或不更早删除cookie，提高用户响应时间</li></ul><h3 id="页面内容使用无Cookie域"><a href="#页面内容使用无Cookie域" class="headerlink" title="页面内容使用无Cookie域"></a>页面内容使用无Cookie域</h3><p>当浏览器发出静态图像请求并将cookie与请求一起发送时，服务器对这些cookie没有任何用处。所以他们只是没有理由地创建网络流量。您应该确保使用无cookie请求来请求静态组件。创建一个子域，并在其中托管所有静态组件。</p><p>在无Cookie域上托管静态组件的另一个好处是，某些代理可能会拒绝缓存使用cookie请求的组件。</p><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h3 id="使用内容分发网络CDN"><a href="#使用内容分发网络CDN" class="headerlink" title="使用内容分发网络CDN"></a>使用内容分发网络CDN</h3><ul><li>用户与Web服务器的距离对响应时间有影响。在多个地理位置分散的服务器上部署您的内容将使您的网页从用户的角度更快加载。但是你应该从哪里开始？</li></ul><p>作为实现地理上分散的内容的第一步，不要尝试重新设计您的Web应用程序以在分布式架构中工作。根据应用程序的不同，更改体系结构可能包括艰巨的任务，例如同步会话状态和跨服务器位置复制数据库事务。尝试缩短用户与内容之间的距离可能会延迟或不能通过此应用程序体系结构步骤。</p><p>请记住，80-90％的最终用户响应时间用于下载页面中的所有组件：图像，样式表，脚本，Flash等。这是性能黄金法则。</p><p>不要从重新设计应用程序体系结构的艰巨任务开始，最好先分散您的静态内容。这不仅实现了响应时间的更大缩短，而且由于内容交付网络，这更容易实现。</p><p><code>内容传送网络（CDN）</code>是分布在多个位置的网络服务器的集合，以更高效地向用户传送内容。选择用于将内容递送给特定用户的服务器通常基于网络邻近度的度量。例如，选择网络跳数最少的服务器或响应时间最快的服务器。</p><p>一些大型互联网公司拥有自己的CDN，但使用CDN服务提供商（如Akamai Technologies，EdgeCast或level3）具有成本效益。对于创业公司和私人网站来说，CDN服务的成本可能会很高，但随着您的目标受众不断扩大并变得更加全球化，CDN是实现快速响应所必需的。</p><h3 id="添加Expires或Cache-Control标题"><a href="#添加Expires或Cache-Control标题" class="headerlink" title="添加Expires或Cache-Control标题"></a>添加Expires或<code>Cache-Control</code>标题</h3><p>这条规则有两个方面：</p><ul><li>对于静态组件：通过设置远期<code>Expires</code>标题实现“永不过期”策略</li><li>对于动态组件：使用适当的<code>Cache-Control</code>头文件来帮助浏览器提供有条件的请求</li></ul><p>网页设计越来越丰富，这意味着更多的脚本，样式表，图像和Flash在页面中。</p><p>首次访问您的页面可能需要发出多个HTTP请求，但通过使用Expires标头，可以使这些组件可缓存。这避免了后续页面浏览中不必要的HTTP请求。</p><p>过期标头最常用于图像，但它们应该用于所有组件，包括脚本，样式表和Flash组件。</p><p>浏览器（和代理）使用缓存来减少HTTP请求的数量和大小，使网页加载速度更快。<br>Web服务器使用HTTP响应中的Expires标头告诉客户端可以缓存组件的时间。</p><p>请记住，如果您使用远期未来的Expires头文件，则只要组件更改，就必须更改组件的文件名。</p><p>只有在用户已经访问过您的网站后，使用远期未来的Expires标题才会影响页面浏览。</p><p>当用户第一次访问您的网站并且浏览器的缓存为空时，它对HTTP请求的数量没有影响。</p><p>因此，这种性能改进的影响取决于用户多久访问一次带有缓冲区的页面。（一个“准备好的缓存”已经包含了页面中的所有组件。）我们在Yahoo!上测试了这一点。并发现带有引导缓存的页面浏览量为75-85％。通过使用远期未来的Expires标题，您可以增加浏览器缓存的组件数量，并在后续页面浏览中重新使用，而无需在用户的Internet连接上发送单个字节。</p><h3 id="Gzip压缩传输文件"><a href="#Gzip压缩传输文件" class="headerlink" title="Gzip压缩传输文件"></a>Gzip压缩传输文件</h3><p>通过网络传输HTTP请求和响应所需的时间可以通过前端工程师做出的决策大大减少。</p><p>确实，最终用户的带宽速度，互联网服务提供商，邻近对等交换点等是超出了开发团队的控制范围。</p><p>但还有其他一些影响响应时间的因素。</p><p>压缩通过减少HTTP响应的大小来缩短响应时间。</p><p>从HTTP / 1.1开始，Web客户端通过HTTP请求中的Accept-Encoding标头指示对压缩的支持。</p><pre><code>Accept-Encoding：gzip，deflate</code></pre><p>如果Web服务器在请求中看到该头部，则可能使用客户端列出的方法之一压缩响应。</p><p>Web服务器通过响应中的Content-Encoding标头通知Web客户端。</p><pre><code>内容编码：gzip</code></pre><blockquote><p>Gzip是目前最流行和最有效的压缩方法。它由GNU项目开发并由RFC 1952标准化。您可能会看到的唯一的其他压缩格式是压缩，但效果不太好，不太受欢迎。Gzipping通常将响应大小减少约70％。目前大约90％的互联网流量都通过声称支持gzip的浏览器。</p></blockquote><blockquote><p>浏览器和代理存在已知的问题，这些问题可能会导致浏览器期望的不匹配和接收到的有关压缩内容的不匹配。幸运的是，随着旧版浏览器的使用下降，这些边缘案例正在减少。Apache模块通过自动添加适当的Vary响应头来提供帮助。</p></blockquote><p>服务器根据文件类型选择要压缩的内容，但在决定压缩的内容时通常太有限。</p><p>大多数网站gzip他们的HTML文件。gzip脚本和样式表也是值得的，但很多网站都错过了这个机会。事实上，压缩包括XML和JSON的任何文本响应都是值得的。</p><p>图像和PDF文件不应该被压缩，因为它们已经被压缩。试图压缩它们不仅浪费CPU，而且可能会增加文件大小。</p><p>尽可能多地缩放文件类型是减少页面重量和加速用户体验的简单方法。</p><h3 id="配置ETags"><a href="#配置ETags" class="headerlink" title="配置ETags"></a>配置ETags</h3><p>实体标签（ETags）是Web服务器和浏览器用来确定浏览器缓存中的组件是否与源服务器上的组件匹配的机制。（一个“实体”是另一个词“组件”：图像，脚本，样式表等）</p><p>ETag被添加来提供一种机制来验证比上一次修改日期更灵活的实体。</p><p>ETag是唯一标识组件特定版本的字符串。唯一的格式约束是字符串被引用。原始服务器使用ETag响应头指定组件的ETag 。</p><pre><code>HTTP / 1.1 200 OKLast-Modified：Tue，2006年12月12日03:03:59 GMTETag：“10c24bc-4ab-457e1c1f”内容长度：12195</code></pre><p>之后，如果浏览器必须验证组件，它将使用If-None-Match标头将ETag传递回原始服务器。如果ETags匹配，则返回一个304状态码，在此示例中将响应减少12195字节。</p><pre><code>GET /i/yahoo.gif HTTP / 1.1主持人：us.yimg.comIf-Modified-Since：星期二，2006年12月12日03:03:59 GMTIf-None-Match：“10c24bc-4ab-457e1c1f”HTTP / 1.1 304未修改</code></pre><p>ETags的问题在于，它们通常使用属性来构建，这些属性使它们对托管站点的特定服务器是唯一的。</p><p>当浏览器从一台服务器获取原始组件并稍后尝试在另一台服务器上验证该组件时，ETags将不匹配，这种情况在使用服务器集群处理请求的网站上非常常见。</p><p>虽然给定的文件可能位于多个服务器的相同目录中，并且具有相同的文件大小，权限，时间戳等，但其inode不同于一台服务器。</p><p>IIS 5.0和6.0与ETags有类似的问题。IIS上ETags的格式是Filetimestamp:ChangeNumber。A ChangeNumber是用于跟踪IIS配置更改的计数器。ChangeNumber在网站后面的所有IIS服务器上都不可能是相同的。</p><p>最终结果是由Apache和IIS生成的ETags完全相同的组件不会从一台服务器到另一台服务器进行匹配。如果ETags不匹配，用户不会收到ETags设计的小而快的304响应; 相反，他们会得到一个正常的200响应以及组件的所有数据。</p><p>如果您只在一台服务器上托管您的网站，这不是问题。但是，如果您有多台服务器托管您的网站，并且您使用的是默认的ETag配置的Apache或IIS，那么您的用户的页面速度会变慢，您的服务器的负载会更高，消耗的带宽也会更大，高效地缓存您的内容。即使你的组件有一个遥远的将来Expires头，当用户点击重新加载或刷新时，仍然会发出条件GET请求。</p><p>如果您没有充分利用ETags提供的灵活验证模型，最好完全删除ETag。</p><p>该Last-Modified头验证基于对组件的时间戳。</p><p>删除ETag可以减少响应和后续请求中HTTP头的大小。</p><h3 id="尽早flush输出"><a href="#尽早flush输出" class="headerlink" title="尽早flush输出"></a>尽早flush输出</h3><p>当用户请求页面时，后端服务器可能需要200到500毫秒才能将HTML页面拼接在一起。在此期间，浏览器在等待数据到达时处于空闲状态。</p><p>在PHP中，你有函数flush（）。</p><p>它允许您将部分就绪的HTML响应发送到浏览器，以便浏览器可以在您的后端忙于HTML页面的其余部分时开始获取组件。好处主要出现在繁忙的后端或前端。<br>考虑刷新的好地方就在HEAD之后，因为头部的HTML通常更容易生成，并且允许您在浏览器中包含任何CSS和JavaScript文件，以便在后端仍在处理的同时开始并行读取。</p><h3 id="使用GET获取AJAX请求"><a href="#使用GET获取AJAX请求" class="headerlink" title="使用GET获取AJAX请求"></a>使用GET获取AJAX请求</h3><p>在使用时XMLHttpRequest，POST在浏览器中实现为两步：首先发送标题，然后发送数据。所以最好使用GET，它只需要一个TCP数据包发送（除非你有很多的cookie）。</p><p>IE中最大的URL长度是2K，所以如果你发送的数据超过2K，你可能无法使用GET。</p><p>一个有趣的副作用是POST没有实际发布任何数据就像GET一样。</p><p>基于HTTP规范，GET旨在用于检索信息，所以在您仅请求数据时使用GET（在语义上）是合理的，而不是将数据发送到服务器端存储。</p><h3 id="避免空图像src"><a href="#避免空图像src" class="headerlink" title="避免空图像src"></a>避免空图像src</h3><p>具有空字符串src属性的图像会发生超过一个人的预期。它以两种形式出现：</p><ul><li><code>&lt;img src =“”&gt;</code></li><li><code>var img = new Image（）;</code><br><code>img.src =“”;</code></li></ul><p>两种形式都会产生相同的效果：浏览器向您的服务器发出另一个请求</p><blockquote><p>Internet Explorer向该页面所在的目录发出请求。<br>Safari和Chrome向实际页面本身发出请求。<br>Firefox 3和更早版本的行为与Safari和Chrome相同，但版本3.5解决了此问题[错误444931]，不再发送请求。<br>当遇到空图像src时，Opera不会执行任何操作。</p></blockquote><p>为什么这种行为不好？</p><ul><li>通过发送大量意外流量来瘫痪您的服务器，特别是对于每天获得数百万页面浏览量的页面。</li><li>浪费服务器计算周期生成一个永远不会被查看的页面。</li><li>可能损坏的用户数据。如果您通过Cookie或以其他方式跟踪请求中的状态，则可能会销毁数据。即使图像请求没有返回图像，浏览器也会读取并接受所有标题，包括所有的Cookie。虽然其余的反应被抛弃，但损害可能已经完成。</li></ul><h1 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h1><h3 id="保持组件低于25K"><a href="#保持组件低于25K" class="headerlink" title="保持组件低于25K"></a>保持组件低于25K</h3><p>此限制与iPhone不会缓存大于25K的组件有关。请注意，这是未压缩的大小。这是缩小比例很重要的地方，因为gzip本身可能不够。</p><h3 id="将组件打包成多部分文档"><a href="#将组件打包成多部分文档" class="headerlink" title="将组件打包成多部分文档"></a>将组件打包成多部分文档</h3><p>将组件打包成多部分文档就像带有附件的电子邮件一样，它可以帮助您用一个HTTP请求获取多个组件（记住：HTTP请求很贵）。当你使用这种技术时，首先检查用户代理是否支持它（iPhone不支持）。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;小结于&quot;&gt;&lt;a href=&quot;#小结于&quot; class=&quot;headerlink&quot; title=&quot;小结于&quot;&gt;&lt;/a&gt;小结于&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.yahoo.com/performance/rules.html?guccounter=1#menu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="换个角度看性能优化" scheme="https://hotkang.cn/categories/%E6%8D%A2%E4%B8%AA%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="性能优化" scheme="https://hotkang.cn/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>从浏览器请求和响应过程来谈性能优化</title>
    <link href="https://hotkang.cn/2018/%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%E8%BF%87%E7%A8%8B%E6%9D%A5%E8%B0%88%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>https://hotkang.cn/2018/从浏览器请求和响应过程来谈性能优化/</id>
    <published>2018-05-29T00:52:08.000Z</published>
    <updated>2018-07-19T15:35:12.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="小结于"><a href="#小结于" class="headerlink" title="小结于"></a>小结于</h2><p><img src="/img/XNGC.png" alt=""></p><a id="more"></a><ul><li><p>为什么前端性能如此重要？数据显示：</p><ul><li>只有10%~20%的最终用户响应时间用来下载HTML文档，其余80%~90%时间用在下载页面中的所有组件</li><li>优化后台成本大，优化前端只需要适当遵循一些法则就会有较大的提升，低成本高收益</li></ul></li></ul><h2 id="一、浏览器预处理"><a href="#一、浏览器预处理" class="headerlink" title="一、浏览器预处理"></a>一、浏览器预处理</h2><ul><li>查询Cache：读取Cache或者发送304 请求</li></ul><h2 id="二、查询DNS"><a href="#二、查询DNS" class="headerlink" title="二、查询DNS"></a>二、查询DNS</h2><blockquote><p>DNS查找就是输入域名对服务器IP地址的查找过程。<br>DNS缓存: 浏览器DNS缓存、操作系统DNS缓存。<br>当你输入<a href="http://www.google.com的时候，浏览器会先去自身的" target="_blank" rel="noopener">www.google.com的时候，浏览器会先去自身的</a> <code>DNS缓存</code> 里面查找有没有google服务器的IP地址;如果找不到则继续到 <code>操作系统的DNS缓存</code> 查找;如果浏览器在这两个容器都没有找到google的IP地址记录，则会向广域域名体系查找。</p></blockquote><h3 id="1-优化规则-减少DNS查找"><a href="#1-优化规则-减少DNS查找" class="headerlink" title="1. 优化规则 - 减少DNS查找"></a><code>1. 优化规则 - 减少DNS查找</code></h3><ul><li>方法1：使用DNS缓存<br>浏览器DNS缓存 | 计算机DNS缓存 | 服务器DNS缓存（TTL）</li></ul><ul><li><p>方法2：使用Keep-Alive特性<br>当客户端的DNS缓存为空时，DNS查找的数量与Web页面中唯一主机名的数量相等。减少唯一主机名的数量就可以减少DNS查找的数量。</p></li><li><p>方法3：较少的域名来减少DNS查找（2-4个主机）</p></li><li><p>方法4：使用第三方DNS域名解析加速服务<br>国内的一款免费DNS加速服务DNSPOD；</p></li></ul><h2 id="三、建立连接"><a href="#三、建立连接" class="headerlink" title="三、建立连接"></a>三、建立连接</h2><blockquote><p>CDN是一组分布在多个不同地理位置的Web服务器，由于距离用户 物理距离比较短，所以能够更加有利于用户获取到静态资源；这种服务通常需要购买，也有一些免费、通用的CDN可使用，国内的可以使用BootCDN。</p></blockquote><h3 id="2-优化规则-–-使用内容分发网络（CDN）"><a href="#2-优化规则-–-使用内容分发网络（CDN）" class="headerlink" title="2. 优化规则 – 使用内容分发网络（CDN）"></a><code>2. 优化规则 – 使用内容分发网络（CDN）</code></h3><ul><li><p>方法1：美国十大Internet网站和CDN服务提供商</p></li><li><p>方法2：页面静态化,取决于发布系统</p></li><li><p>方法3：Ctrip使用的China-Cache和网宿</p></li></ul><h3 id="3-优化规则-–-用域名划分页面内容"><a href="#3-优化规则-–-用域名划分页面内容" class="headerlink" title="3. 优化规则 – 用域名划分页面内容"></a><code>3. 优化规则 – 用域名划分页面内容</code></h3><p>按页面内容划分域名，在合适的资源服务器上存放文件</p><h2 id="四、发送请求"><a href="#四、发送请求" class="headerlink" title="四、发送请求"></a>四、发送请求</h2><blockquote><p>一般来说，使用外链的脚本和样式表更加有利。分别把外链脚本和样式表进行合并会减少HTTP请求，以节省客户端和服务器之间的通讯次数来加快页面打开速度。但是出于开发的便利，开发的时候一般会采取模块化的方式；这时候可以在部署前采用一些前端构建工具 <code>gulp</code> 、<code>grunt</code> 把这些模块文件合并起来再发布。</p></blockquote><h3 id="4-优化规则-–-减少HTTP请求"><a href="#4-优化规则-–-减少HTTP请求" class="headerlink" title="4. 优化规则 – 减少HTTP请求"></a><code>4. 优化规则 – 减少HTTP请求</code></h3><ul><li><p>图片地图</p><ul><li>假设导航栏上有五幅图片，点击每张图片都会进入一个链接，这样五张导航的图片在加载时会产生5个HTTP请求。然而，使用一个图片地图可以提高效率，这样就只需要一个HTTP请求。</li></ul><p><img src="/img/JL.png" alt=""></p><ul><li>服务器端图片地图：将所有点击提交到同一个url，同时提交用户点击的x、y坐标，服务器端根据坐标映射响应</li><li>客户端图片地图：直接将点击映射到操作</li></ul></li><li><p>内联图像</p></li><li><p>合并文件: js文件不超过7个,css文件不超过4个,各频道首页和全站首页不超过3个;</p></li><li>目前无法解决的是allyes广告的请求数。</li><li>大量的广告和产品图片可能会造成，图片请求数很大，可能造成总请求数指标吃紧，这个只能从设计上搞定，需要权衡</li><li><p>目前老页面可能css和js文件请求数可能会超标</p></li><li><p>合并样式和脚本</p></li></ul><h3 id="5-优化规则-–-优化CSS-Spirite-图片精灵"><a href="#5-优化规则-–-优化CSS-Spirite-图片精灵" class="headerlink" title="5. 优化规则 – 优化CSS Spirite(图片精灵)"></a><code>5. 优化规则 – 优化CSS Spirite(图片精灵)</code></h3><p>一种网页图片应用处理方式。允许你将一个页面涉及到的所有零星图片都包含到一张大图中去，再利用CSS的以下属性精确的定位出背景图片的位置。</p><blockquote><p>background-image<br>background- repeat<br>background-position</p></blockquote><h3 id="6-优化规则-–-避免404错误"><a href="#6-优化规则-–-避免404错误" class="headerlink" title="6. 优化规则 – 避免404错误"></a><code>6. 优化规则 – 避免404错误</code></h3><p>HTTP请求很昂贵，因此提出HTTP请求并获得无用的响应（即404 Not Found）是完全没有必要的，会减慢用户体验没有任何好处。</p><p>有些网站有帮助的404“你的意思是X？”，这对用户体验很好，但也浪费了服务器资源（如数据库等）。</p><p>特别糟糕的是，当到外部JavaScript的链接错误并且结果是404时。首先，此下载将阻止并行下载。接下来，浏览器可能会尝试解析404响应正文，就好像它是JavaScript代码一样，试图找到可用的东西。</p><h3 id="7-优化规则-–-不要使用frameset-少使用iframe"><a href="#7-优化规则-–-不要使用frameset-少使用iframe" class="headerlink" title="7. 优化规则 – 不要使用frameset,少使用iframe"></a><code>7. 优化规则 – 不要使用frameset,少使用iframe</code></h3><p>搜索引擎不友好，即使内容为空，加载也需要时间、会阻止页面加载</p><p>Iframe允许将HTML文档插入到父文档中。了解iframe如何工作以便可以有效使用非常重要。</p><ul><li><p><code>&lt;iframe&gt;</code>优点：</p><ul><li>像徽章和广告等缓慢的第三方内容</li><li>安全沙箱</li><li>并行下载脚本</li></ul></li><li><p><code>&lt;iframe&gt;</code>缺点：</p><ul><li>即使空白也很昂贵</li><li>阻止页面载入</li><li>非语义</li></ul></li></ul><p>禁止使用iframe引入外部资源，不包括allyes广告，不包括about:blank的空页面。</p><h2 id="五、等待响应"><a href="#五、等待响应" class="headerlink" title="五、等待响应"></a>五、等待响应</h2><h3 id="8-优化规则-–-避免重定向"><a href="#8-优化规则-–-避免重定向" class="headerlink" title="8. 优化规则 – 避免重定向"></a><code>8. 优化规则 – 避免重定向</code></h3><p>以下是一个重定向的过程：</p><p>浏览器发送请求——&gt;服务器返回302——&gt;浏览器发送第二次请求—–&gt;服务器返回200—&gt;浏览器开始呈现</p><p>就是说，在重定向完毕并且HTML下载完毕之前，是没有任何东西显示给用户</p><p>要记住的重点是<code>重定向会减慢用户体验</code>。在用户和HTML文档之间插入重定向会延迟页面中的所有内容，因为可以呈现页面中的任何内容，并且在HTML文档到达之前不会开始下载任何组件。</p><p>涉及服务器负载、数据查询、服务器端缓存等</p><h2 id="六、接收数据"><a href="#六、接收数据" class="headerlink" title="六、接收数据"></a>六、接收数据</h2><h3 id="9-优化规则-–-压缩组件Gzip"><a href="#9-优化规则-–-压缩组件Gzip" class="headerlink" title="9. 优化规则 – 压缩组件Gzip"></a><code>9. 优化规则 – 压缩组件Gzip</code></h3><ul><li><p>HTML文档、脚本和样式表、XML和JSON的文本响应,压缩通常能将响应的数据量减少将近70%</p></li><li><p>大多数网站gzip他们的HTML文件。gzip脚本和样式表也是值得的，但很多网站都错过了这个机会。事实上，压缩包括XML和JSON的任何文本响应都是值得的。</p></li><li><p>图像和PDF文件不应该被压缩，因为它们已经被压缩。试图压缩它们不仅浪费CPU，而且可能会增加文件大小。</p></li></ul><h3 id="10-优化规则-–-精简Javascript和CSS文件大小"><a href="#10-优化规则-–-精简Javascript和CSS文件大小" class="headerlink" title="10. 优化规则 – 精简Javascript和CSS文件大小"></a><code>10. 优化规则 – 精简Javascript和CSS文件大小</code></h3><ul><li><p>从代码中移除不必要的字符以减少其大小，减少加载时间。</p></li><li><p>减少JavaScript 文件大小的有几种手段:</p><ul><li><p>精简:去除JavaScript代码中的空格、注释等多余的字符，这种方式基本上没有什么缺点。</p></li><li><p>混淆:在精简的基础上，把函数、变量名都用较短小的字符来替换，从而达到减少文件大小的效果。</p></li><li>但是混淆会产生不少麻烦，很有可能会引入错误，虽然有利于防止逆向工程，当同时也增加了自己在线上环境调试的难度。</li><li>现在普遍的做法是发布前利用 Gulp、Grunt等自动化构建工具对资源进行压缩。</li></ul></li></ul><h3 id="11-优化规则-–-尽量缩减页面大小"><a href="#11-优化规则-–-尽量缩减页面大小" class="headerlink" title="11. 优化规则 – 尽量缩减页面大小"></a><code>11. 优化规则 – 尽量缩减页面大小</code></h3><ul><li><p>页面必须小于150K(不含图片）</p></li><li><p>静态文件是否gzip</p></li><li>图片是否压缩优化过</li></ul><h2 id="七、读取Cache"><a href="#七、读取Cache" class="headerlink" title="七、读取Cache"></a>七、读取Cache</h2><h3 id="12-优化规则-–-添加-Expires-头或-Cache-Control"><a href="#12-优化规则-–-添加-Expires-头或-Cache-Control" class="headerlink" title="12. 优化规则 – 添加 Expires 头或 Cache-Control"></a><code>12. 优化规则 – 添加 Expires 头或 Cache-Control</code></h3><ul><li><p>Expires头是用来告诉浏览器该响应的有效期，可以理解为该资源的“保质期”，在期限内可以使用该资源的缓存不需要重新请求。</p></li><li><p>由于浏览器与服务器存在时钟同步问题，HTTP1.2.1还添加了Cache-Control和max-age来弥补Expires头的不足。</p></li><li>通常用于脚本、样式表、图片等静态资源。</li></ul><p>使用这种策略可能会遇到一个问题是，开发者可能想要在资源过期前这段时间更新它们。</p><p>这时候，由于浏览器的缓存还没失效，这就需要通过更改文件名来令静态资源 强制失效。有很多种方式给静态资源打上版本号，可以一本正经地打上数字版本号，根据内容生成哈希码也行，甚至有人用π来给自己的资源打版本号.</p><p>应用于不经常变化的组件，包括脚本、样式表、Flash组件、图片</p><h3 id="13-优化规则-–-使用外链JavaScript和CSS"><a href="#13-优化规则-–-使用外链JavaScript和CSS" class="headerlink" title="13. 优化规则 – 使用外链JavaScript和CSS"></a><code>13. 优化规则 – 使用外链JavaScript和CSS</code></h3><ul><li>尽可能 使用外链JavaScript和CSS，因为我们目前大部分avaScript和CSS都做了Gzip和缓存技术，可以充分利用。</li></ul><ul><li><p>使用外链样式和脚本优点有：</p><ul><li>可以被浏览器缓存起来；</li><li>组件可重用</li><li>可模块化；</li><li>能够被构建（合并压缩打版本）</li></ul></li><li><p>内联的JavaScript和CSS: 减少HTTP请求数量，增加了HTML文档的大小。</p></li><li>JavaScript和CSS位于浏览器：缓存的外部文件中：HTML文档的大小会减少，不会增加HTTP请求的数量。</li></ul><blockquote><p>关键因素是外部JavaScript和CSS组件相对于所请求HTML文档数量的缓存频率。这个因素尽管难以量化，但可以使用各种指标进行衡量。如果您的网站上的用户每个会话有多个页面浏览量，并且许多网页重复使用相同的脚本和样式表，则缓存的外部文件可能带来更大的潜在收益。</p></blockquote><h2 id="八、处理元素"><a href="#八、处理元素" class="headerlink" title="八、处理元素"></a>八、处理元素</h2><p>不要对image和pdf等二进制文件进行gzip压缩</p><h2 id="九、渲染元素"><a href="#九、渲染元素" class="headerlink" title="九、渲染元素"></a>九、渲染元素</h2><h3 id="14-优化规则-–-将样式表放在顶部"><a href="#14-优化规则-–-将样式表放在顶部" class="headerlink" title="14. 优化规则 – 将样式表放在顶部"></a><code>14. 优化规则 – 将样式表放在顶部</code></h3><ul><li><p>样式表放在底部时，浏览器会延迟显示任何可视化组件(使用 CSS 的@import 等同于把想要加载的样式放在底部，所以不建议使用。)</p></li><li><p>对于浏览器的渲染机制，本书并没有过多提及，只是对现象做出了描述以及提供了解决办法.</p></li><li><p>如果样式表仍然在加载，构建呈现树就是一种浪费，因为在所有样式表 加载并解析完毕 之前无需绘制任何东西。因为在样式表准备好之前显示内容会遇到 FOUC（无样式内容的闪烁，Flash of Unstyled Content）问题。</p></li><li>样式表不在顶部中，当遇到样式时，浏览器就会阻止页面呈现，等待样式表下载完毕。如果把样式表放在底部，在 IE 中还会产生白屏现象。</li><li>总之，把样式表放进就能避免这些问题。</li></ul><h3 id="15-优化规则-–-建议将脚本放在底部"><a href="#15-优化规则-–-建议将脚本放在底部" class="headerlink" title="15. 优化规则 – 建议将脚本放在底部"></a><code>15. 优化规则 – 建议将脚本放在底部</code></h3><p>一般浏览器可以允许并行下载，取决于主机个数、带宽等（默认情况下，IE是2个而FF是8个）下载脚本时并行下载实际上是被禁用的。</p><ul><li>脚本对页面的影响是：<ul><li>阻塞对其后面内容的呈现</li><li>阻塞后面组件的下载</li><li>浏览器会在下载脚本的时候阻塞并行下载，因为需要确保脚本能够顺序执行。<blockquote><p>但是，实际开发中有时候很难完全遵守这条准则，那只能把能够放在最后的都放在最后。</p></blockquote></li></ul></li></ul><h3 id="16-优化规则-–-移除重复脚本"><a href="#16-优化规则-–-移除重复脚本" class="headerlink" title="16. 优化规则 – 移除重复脚本"></a><code>16. 优化规则 – 移除重复脚本</code></h3><p>必须为0，重复的脚本对增加HTTP 请求次数和脚本执行的时间。</p><h3 id="17-优化规则-–-避免CSS表达式"><a href="#17-优化规则-–-避免CSS表达式" class="headerlink" title="17. 优化规则 – 避免CSS表达式"></a><code>17. 优化规则 – 避免CSS表达式</code></h3><p>使用CSS 的expression()通常会造成多次运算。影响浏览器渲染时间。实际上，需要用到CSS表达式的地方，通常能够找到其他替代方案，所以避免使用CSS表达式。</p><h3 id="18-优化规则-–-优化图像"><a href="#18-优化规则-–-优化图像" class="headerlink" title="18. 优化规则 – 优化图像"></a><code>18. 优化规则 – 优化图像</code></h3><ul><li><p>尽量使用GIF和PNG</p></li><li><p>尽量使用png/gif格式的图片，png的图片优先，但是必须注意如要兼容IE6，则png使用一定要注意透明问题。</p></li><li><p>图片在使用前一定要先用工具压缩优化（png、jpg）</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;小结于&quot;&gt;&lt;a href=&quot;#小结于&quot; class=&quot;headerlink&quot; title=&quot;小结于&quot;&gt;&lt;/a&gt;小结于&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/XNGC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="换个角度看性能优化" scheme="https://hotkang.cn/categories/%E6%8D%A2%E4%B8%AA%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="性能优化" scheme="https://hotkang.cn/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
